{"version":3,"sources":["../../src/styles/theme.ts","../../src/useIsMounted.ts","../../src/internal/hooks/usePreferredColorScheme.ts","../../src/useOnchainKit.tsx","../../src/OnchainKitProvider.tsx","../../src/OnchainKitConfig.ts","../../src/useTheme.ts","../../src/checkout/components/CheckoutProvider.tsx","../../src/internal/hooks/useValue.ts","../../src/transaction/utils/isUserRejectedRequestError.ts","../../src/wallet/hooks/useIsWalletACoinbaseSmartWallet.ts","../../src/internal/hooks/useCapabilitiesSafe.ts","../../src/checkout/constants.ts","../../src/checkout/hooks/useCommerceContracts.tsx","../../src/checkout/utils/getCommerceContracts.ts","../../src/checkout/utils/getUSDCBalance.ts","../../src/version.ts","../../src/network/constants.ts","../../src/network/getRPCUrl.ts","../../src/network/request.ts","../../src/network/definitions/pay.ts","../../src/api/utils/getPayErrorMessage.ts","../../src/api/buildPayTransaction.ts","../../src/checkout/utils/handlePayRequest.ts","../../src/checkout/hooks/useLifecycleStatus.tsx","../../src/checkout/components/Checkout.tsx","../../src/checkout/components/CheckoutButton.tsx","../../src/internal/components/Spinner.tsx","../../src/internal/hooks/useIcon.tsx","../../src/internal/svg/coinbasePaySvg.tsx","../../src/internal/svg/fundWallet.tsx","../../src/internal/svg/swapSettings.tsx","../../src/internal/svg/walletSvg.tsx","../../src/checkout/hooks/useGetCheckoutStatus.tsx","../../src/checkout/components/CheckoutStatus.tsx"],"sourcesContent":["import { clsx } from 'clsx';\nimport type { ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport const text = {\n  body: 'ock-font-family font-normal leading-normal',\n  caption: 'ock-font-family font-semibold text-xs leading-4',\n  headline: 'ock-font-family font-semibold leading-normal',\n  label1: 'ock-font-family font-semibold text-sm leading-5',\n  label2: 'ock-font-family text-sm leading-5',\n  legal: 'ock-font-family text-xs leading-4',\n  title1: 'ock-font-family font-semibold text-[1.75rem] leading-9',\n  title3: 'ock-font-family font-semibold text-xl leading-7',\n} as const;\n\nexport const pressable = {\n  default:\n    'cursor-pointer ock-bg-default active:bg-[var(--ock-bg-default-active)] hover:bg-[var(--ock-bg-default-hover)]',\n  alternate:\n    'cursor-pointer ock-bg-alternate active:bg-[var(--ock-bg-alternate-active)] hover:[var(--ock-bg-alternate-hover)]',\n  inverse:\n    'cursor-pointer ock-bg-inverse active:bg-[var(--ock-bg-inverse-active)] hover:bg-[var(--ock-bg-inverse-hover)]',\n  primary:\n    'cursor-pointer ock-bg-primary active:bg-[var(--ock-bg-primary-active)] hover:bg-[var(--ock-bg-primary-hover)]',\n  secondary:\n    'cursor-pointer ock-bg-secondary active:bg-[var(--ock-bg-secondary-active)] hover:bg-[var(--ock-bg-secondary-hover)]',\n  coinbaseBranding: 'cursor-pointer bg-[#0052FF] hover:bg-[#0045D8]',\n  shadow: 'ock-shadow-default',\n  disabled: 'opacity-[0.38] pointer-events-none',\n} as const;\n\nexport const background = {\n  default: 'ock-bg-default',\n  alternate: 'ock-bg-alternate',\n  inverse: 'ock-bg-inverse',\n  primary: 'ock-bg-primary',\n  secondary: 'ock-bg-secondary',\n  error: 'ock-bg-error',\n  warning: 'ock-bg-warning',\n  success: 'ock-bg-success',\n  washed: 'ock-bg-primary-washed',\n  disabled: 'ock-bg-primary-disabled',\n  reverse: 'ock-bg-default-reverse',\n} as const;\n\nexport const color = {\n  inverse: 'ock-text-inverse',\n  foreground: 'ock-text-foreground',\n  foregroundMuted: 'ock-text-foreground-muted',\n  error: 'ock-text-error',\n  primary: 'ock-text-primary',\n  success: 'ock-text-success',\n  warning: 'ock-text-warning',\n  disabled: 'ock-text-disabled',\n} as const;\n\nexport const fill = {\n  default: 'ock-fill-default',\n  defaultReverse: 'ock-fill-default-reverse',\n  inverse: 'ock-fill-inverse',\n  alternate: 'ock-fill-alternate',\n} as const;\n\nexport const border = {\n  default: 'ock-border-default',\n  defaultActive: 'ock-border-default-active',\n  radius: 'ock-border-radius',\n  radiusInner: 'ock-border-radius-inner',\n} as const;\n\nexport const placeholder = {\n  default: 'ock-placeholder-default',\n} as const;\n\nexport const icon = {\n  primary: 'ock-icon-color-primary',\n  foreground: 'ock-icon-color-foreground',\n  foregroundMuted: 'ock-icon-color-foreground-muted',\n  inverse: 'ock-icon-color-inverse',\n  error: 'ock-icon-color-error',\n  success: 'ock-icon-color-success',\n  warning: 'ock-icon-color-warning',\n} as const;\n\nexport const line = {\n  primary: 'ock-line-primary border',\n  default: 'ock-line-default border',\n  heavy: 'ock-line-heavy border',\n  inverse: 'ock-line-inverse border',\n} as const;\n","import { useEffect, useState } from 'react';\n\nexport function useIsMounted() {\n  const [isMounted, setIsMounted] = useState(false);\n  useEffect(() => {\n    setIsMounted(true);\n  });\n  return isMounted;\n}\n","import { useEffect, useState } from 'react';\n\nexport function usePreferredColorScheme(): 'light' | 'dark' {\n  const [colorScheme, setColorScheme] = useState<'light' | 'dark'>('light');\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setColorScheme(mediaQuery.matches ? 'dark' : 'light');\n\n    function updateColorScheme(event: MediaQueryListEvent) {\n      setColorScheme(event.matches ? 'dark' : 'light');\n    }\n\n    mediaQuery.addEventListener('change', updateColorScheme);\n    return () => mediaQuery.removeEventListener('change', updateColorScheme);\n  }, []);\n\n  return colorScheme;\n}\n","import { useContext } from 'react';\nimport { OnchainKitContext } from './OnchainKitProvider';\n\nexport function useOnchainKit() {\n  return useContext(OnchainKitContext);\n}\n","import { createContext, useMemo } from 'react';\nimport { ONCHAIN_KIT_CONFIG, setOnchainKitConfig } from './OnchainKitConfig';\nimport { checkHashLength } from './internal/utils/checkHashLength';\nimport type { OnchainKitContextType, OnchainKitProviderReact } from './types';\n\nexport const OnchainKitContext =\n  createContext<OnchainKitContextType>(ONCHAIN_KIT_CONFIG);\n\n/**\n * Provides the OnchainKit React Context to the app.\n */\nexport function OnchainKitProvider({\n  address,\n  apiKey,\n  chain,\n  children,\n  config,\n  projectId,\n  rpcUrl,\n  schemaId,\n}: OnchainKitProviderReact) {\n  if (schemaId && !checkHashLength(schemaId, 64)) {\n    throw Error('EAS schemaId must be 64 characters prefixed with \"0x\"');\n  }\n\n  const value = useMemo(() => {\n    const defaultPaymasterUrl = apiKey\n      ? `https://api.developer.coinbase.com/rpc/v1/${chain.name\n          .replace(' ', '-')\n          .toLowerCase()}/${apiKey}`\n      : null;\n    const onchainKitConfig = {\n      address: address ?? null,\n      apiKey: apiKey ?? null,\n      chain: chain,\n      config: {\n        appearance: {\n          name: config?.appearance?.name,\n          logo: config?.appearance?.logo,\n          mode: config?.appearance?.mode ?? 'auto',\n          theme: config?.appearance?.theme ?? 'default',\n        },\n        paymaster: config?.paymaster || defaultPaymasterUrl,\n      },\n      projectId: projectId ?? null,\n      rpcUrl: rpcUrl ?? null,\n      schemaId: schemaId ?? null,\n    };\n    setOnchainKitConfig(onchainKitConfig);\n    return onchainKitConfig;\n  }, [address, apiKey, chain, config, projectId, rpcUrl, schemaId]);\n\n  return (\n    <OnchainKitContext.Provider value={value}>\n      {children}\n    </OnchainKitContext.Provider>\n  );\n}\n","import { baseSepolia } from 'viem/chains';\nimport type { OnchainKitConfig, SetOnchainKitConfig } from './types';\n\n// The ONCHAIN_KIT_CONFIG is not exported at index.ts,\n// but only acccessed through the get and set functions.\nexport const ONCHAIN_KIT_CONFIG: OnchainKitConfig = {\n  address: null,\n  apiKey: null,\n  chain: baseSepolia,\n  config: {\n    appearance: {\n      name: null,\n      logo: null,\n      mode: null,\n      theme: null,\n    },\n    paymaster: null,\n  },\n  rpcUrl: null,\n  schemaId: null,\n  projectId: null,\n};\n\n/**\n * Access the ONCHAIN_KIT_CONFIG object directly by providing the key.\n * This is powerful when you use OnchainKit utilities outside of the React context.\n */\nexport const getOnchainKitConfig = <K extends keyof typeof ONCHAIN_KIT_CONFIG>(\n  configName: K,\n): (typeof ONCHAIN_KIT_CONFIG)[K] => {\n  return ONCHAIN_KIT_CONFIG[configName];\n};\n\n/**\n * Update the ONCHAIN_KIT_CONFIG object directly by providing the properties to update.\n * This is powerful when you use OnchainKit utilities outside of the React context.\n */\nexport const setOnchainKitConfig = (properties: SetOnchainKitConfig) => {\n  Object.assign(ONCHAIN_KIT_CONFIG, properties);\n  return getOnchainKitConfig;\n};\n","import { usePreferredColorScheme } from './internal/hooks/usePreferredColorScheme';\nimport type { UseThemeReact } from './types';\nimport { useOnchainKit } from './useOnchainKit';\n\nexport function useTheme(): UseThemeReact {\n  const preferredMode = usePreferredColorScheme();\n  const {\n    config: { appearance } = {},\n  } = useOnchainKit();\n  const { theme = 'default', mode = 'auto' } = appearance || {};\n\n  if (theme === 'cyberpunk' || theme === 'base' || theme === 'hacker') {\n    return theme;\n  }\n\n  switch (mode) {\n    case 'auto':\n      return `${theme}-${preferredMode}` as UseThemeReact;\n    case 'dark':\n      return `${theme}-dark` as UseThemeReact;\n    case 'light':\n      return `${theme}-light` as UseThemeReact;\n    default:\n      // If mode is not set or is an invalid value, fall back to preferredMode\n      return `${theme}-${preferredMode}` as UseThemeReact;\n  }\n}\n","import {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport type { Address, ContractFunctionParameters } from 'viem';\nimport { base } from 'viem/chains';\nimport { useAccount, useConnect, useSwitchChain } from 'wagmi';\nimport { useWaitForTransactionReceipt } from 'wagmi';\nimport { coinbaseWallet } from 'wagmi/connectors';\nimport { useWriteContracts } from 'wagmi/experimental';\nimport { useCallsStatus } from 'wagmi/experimental';\nimport { useValue } from '../../internal/hooks/useValue';\nimport { isUserRejectedRequestError } from '../../transaction/utils/isUserRejectedRequestError';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport { useIsWalletACoinbaseSmartWallet } from '../../wallet/hooks/useIsWalletACoinbaseSmartWallet';\nimport {\n  GENERIC_ERROR_MESSAGE,\n  NO_CONNECTED_ADDRESS_ERROR,\n  NO_CONTRACTS_ERROR,\n  USER_REJECTED_ERROR,\n} from '../constants';\nimport {\n  CHECKOUT_INSUFFICIENT_BALANCE_ERROR,\n  CHECKOUT_INSUFFICIENT_BALANCE_ERROR_MESSAGE,\n  CHECKOUT_LIFECYCLESTATUS,\n  CheckoutErrorCode,\n} from '../constants';\nimport { useCommerceContracts } from '../hooks/useCommerceContracts';\nimport { useLifecycleStatus } from '../hooks/useLifecycleStatus';\nimport type { CheckoutContextType, CheckoutProviderReact } from '../types';\n\nconst emptyContext = {} as CheckoutContextType;\nexport const CheckoutContext = createContext<CheckoutContextType>(emptyContext);\n\nexport function useCheckoutContext() {\n  const context = useContext(CheckoutContext);\n  if (context === emptyContext) {\n    throw new Error(\n      'useCheckoutContext must be used within a Checkout component',\n    );\n  }\n  return context;\n}\n\nexport function CheckoutProvider({\n  chargeHandler,\n  children,\n  isSponsored,\n  onStatus,\n  productId,\n}: CheckoutProviderReact) {\n  // Core hooks\n  const {\n    config: { appearance, paymaster } = {\n      appearance: { name: undefined, logo: undefined },\n      paymaster: undefined,\n    },\n  } = useOnchainKit();\n  const { address, chainId, isConnected } = useAccount();\n  const { connectAsync } = useConnect();\n  const { switchChainAsync } = useSwitchChain();\n  const [chargeId, setChargeId] = useState('');\n  const [transactionId, setTransactionId] = useState('');\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const isSmartWallet = useIsWalletACoinbaseSmartWallet();\n\n  // Refs\n  const fetchedDataUseEffect = useRef<boolean>(false);\n  const fetchedDataHandleSubmit = useRef<boolean>(false);\n  const userRejectedRef = useRef<boolean>(false);\n  const contractsRef = useRef<ContractFunctionParameters[] | null>();\n  const insufficientBalanceRef = useRef<boolean>(false);\n  const priceInUSDCRef = useRef<string | undefined>('');\n\n  // Helper function used in both `useEffect` and `handleSubmit` to fetch data from the Commerce API and set state and refs\n  const fetchData = useCallback(\n    async (address: Address) => {\n      updateLifecycleStatus({\n        statusName: CHECKOUT_LIFECYCLESTATUS.FETCHING_DATA,\n        statusData: {},\n      });\n      const {\n        contracts,\n        chargeId: hydratedChargeId,\n        insufficientBalance,\n        priceInUSDC,\n        error,\n      } = await fetchContracts(address);\n      if (error) {\n        setErrorMessage(GENERIC_ERROR_MESSAGE);\n        updateLifecycleStatus({\n          statusName: CHECKOUT_LIFECYCLESTATUS.ERROR,\n          statusData: {\n            code: CheckoutErrorCode.UNEXPECTED_ERROR,\n            error: (error as Error).name,\n            message: (error as Error).message,\n          },\n        });\n        return;\n      }\n      setChargeId(hydratedChargeId);\n      contractsRef.current = contracts;\n      insufficientBalanceRef.current = insufficientBalance;\n      priceInUSDCRef.current = priceInUSDC;\n      updateLifecycleStatus({\n        statusName: CHECKOUT_LIFECYCLESTATUS.READY,\n        statusData: {\n          chargeId,\n          contracts: contractsRef.current || [],\n        },\n      });\n    },\n    [chargeId],\n  );\n\n  // Component lifecycle\n  const { lifecycleStatus, updateLifecycleStatus } = useLifecycleStatus({\n    statusName: CHECKOUT_LIFECYCLESTATUS.INIT,\n    statusData: {},\n  });\n\n  // Transaction hooks\n  const fetchContracts = useCommerceContracts({\n    chargeHandler,\n    productId,\n  });\n\n  const { status, writeContractsAsync } = useWriteContracts({\n    /* v8 ignore start */\n    mutation: {\n      onSuccess: (id) => {\n        setTransactionId(id);\n      },\n    },\n    /* v8 ignore stop */\n  });\n  const { data } = useCallsStatus({\n    id: transactionId,\n    query: {\n      /* v8 ignore next 3 */\n      refetchInterval: (query) => {\n        return query.state.data?.status === 'CONFIRMED' ? false : 1000;\n      },\n      enabled: !!transactionId,\n    },\n  });\n  const transactionHash = data?.receipts?.[0]?.transactionHash;\n  const { data: receipt } = useWaitForTransactionReceipt({\n    hash: transactionHash,\n  });\n\n  // Component lifecycle emitters\n  useEffect(() => {\n    onStatus?.(lifecycleStatus);\n  }, [\n    lifecycleStatus,\n    lifecycleStatus.statusData, // Keep statusData, so that the effect runs when it changes\n    lifecycleStatus.statusName, // Keep statusName, so that the effect runs when it changes\n    onStatus,\n  ]);\n\n  // Set transaction pending status when writeContracts is pending\n  useEffect(() => {\n    if (status === 'pending') {\n      updateLifecycleStatus({\n        statusName: CHECKOUT_LIFECYCLESTATUS.PENDING,\n        statusData: {},\n      });\n    }\n  }, [status, updateLifecycleStatus]);\n\n  // Trigger success status when receipt is generated by useWaitForTransactionReceipt\n  useEffect(() => {\n    if (!receipt) {\n      return;\n    }\n    updateLifecycleStatus({\n      statusName: CHECKOUT_LIFECYCLESTATUS.SUCCESS,\n      statusData: {\n        transactionReceipts: [receipt],\n        chargeId: chargeId,\n        receiptUrl: `https://commerce.coinbase.com/pay/${chargeId}/receipt`,\n      },\n    });\n  }, [chargeId, receipt, updateLifecycleStatus]);\n\n  // We need to pre-load transaction data in `useEffect` when the wallet is already connected due to a Smart Wallet popup blocking issue in Safari iOS\n  useEffect(() => {\n    if (\n      lifecycleStatus.statusName === CHECKOUT_LIFECYCLESTATUS.INIT &&\n      address &&\n      !fetchedDataHandleSubmit.current\n    ) {\n      fetchedDataUseEffect.current = true;\n      fetchData(address);\n    }\n  }, [address, fetchData, lifecycleStatus]);\n\n  // biome-ignore lint/complexity/noExcessiveCognitiveComplexity: TODO Refactor this component to deprecate funding flow\n  const handleSubmit = useCallback(async () => {\n    try {\n      // Open Coinbase Commerce receipt\n      if (lifecycleStatus.statusName === CHECKOUT_LIFECYCLESTATUS.SUCCESS) {\n        window.open(\n          `https://commerce.coinbase.com/pay/${chargeId}/receipt`,\n          '_blank',\n          'noopener,noreferrer',\n        );\n        return;\n      }\n      // Open funding flow\n      // TODO: Deprecate this once we have USDC Magic Spend\n      if (\n        lifecycleStatus.statusName === CHECKOUT_LIFECYCLESTATUS.ERROR &&\n        lifecycleStatus.statusData?.code ===\n          CheckoutErrorCode.INSUFFICIENT_BALANCE\n      ) {\n        window.open(\n          `https://keys.coinbase.com/fund?asset=USDC&chainId=8453&presetCryptoAmount=${priceInUSDCRef.current}`,\n          '_blank',\n          'noopener,noreferrer',\n        );\n        // Reset status\n        setErrorMessage('');\n        updateLifecycleStatus({\n          statusName: CHECKOUT_LIFECYCLESTATUS.INIT,\n          statusData: {},\n        });\n        return;\n      }\n      if (errorMessage === USER_REJECTED_ERROR) {\n        // Reset status if previous request was a rejection\n        setErrorMessage('');\n      }\n\n      let connectedAddress = address;\n      let connectedChainId = chainId;\n      if (!isConnected || !isSmartWallet) {\n        // Prompt for wallet connection\n        // This is defaulted to Coinbase Smart Wallet\n        fetchedDataHandleSubmit.current = true; // Set this here so useEffect does not run\n        const { accounts, chainId: _connectedChainId } = await connectAsync({\n          /* v8 ignore next 5 */\n          connector: coinbaseWallet({\n            appName: appearance?.name ?? undefined,\n            appLogoUrl: appearance?.logo ?? undefined,\n            preference: 'smartWalletOnly',\n          }),\n        });\n        connectedAddress = accounts[0];\n        connectedChainId = _connectedChainId;\n      }\n\n      // This shouldn't ever happen, but to make Typescript happy\n      /* v8 ignore start */\n      if (!connectedAddress) {\n        setErrorMessage(GENERIC_ERROR_MESSAGE);\n        updateLifecycleStatus({\n          statusName: CHECKOUT_LIFECYCLESTATUS.ERROR,\n          statusData: {\n            code: CheckoutErrorCode.UNEXPECTED_ERROR,\n            error: NO_CONNECTED_ADDRESS_ERROR,\n            message: NO_CONNECTED_ADDRESS_ERROR,\n          },\n        });\n        return;\n      }\n      /* v8 ignore stop */\n\n      // Fetch contracts if not already done in useEffect\n      // Don't re-fetch contracts if the user rejected the previous request, and just use the cached data\n      /* v8 ignore next 3 */\n      if (!fetchedDataUseEffect.current && !userRejectedRef.current) {\n        await fetchData(connectedAddress);\n      }\n\n      // Switch chain, if applicable\n      if (connectedChainId !== base.id) {\n        await switchChainAsync({ chainId: base.id });\n      }\n\n      // Check for sufficient balance\n      if (insufficientBalanceRef.current && priceInUSDCRef.current) {\n        setErrorMessage(\n          CHECKOUT_INSUFFICIENT_BALANCE_ERROR_MESSAGE(priceInUSDCRef.current),\n        );\n        updateLifecycleStatus({\n          statusName: CHECKOUT_LIFECYCLESTATUS.ERROR,\n          statusData: {\n            code: CheckoutErrorCode.INSUFFICIENT_BALANCE,\n            error: CHECKOUT_INSUFFICIENT_BALANCE_ERROR,\n            message: CHECKOUT_INSUFFICIENT_BALANCE_ERROR_MESSAGE(\n              priceInUSDCRef.current,\n            ),\n          },\n        });\n        return;\n      }\n\n      // Contracts weren't successfully fetched from `fetchContracts`\n      if (!contractsRef.current || contractsRef.current.length === 0) {\n        setErrorMessage(GENERIC_ERROR_MESSAGE);\n        updateLifecycleStatus({\n          statusName: CHECKOUT_LIFECYCLESTATUS.ERROR,\n          statusData: {\n            code: CheckoutErrorCode.UNEXPECTED_ERROR,\n            error: NO_CONTRACTS_ERROR,\n            message: NO_CONTRACTS_ERROR,\n          },\n        });\n        return;\n      }\n\n      // Open keys.coinbase.com for payment\n      await writeContractsAsync({\n        contracts: contractsRef.current,\n        capabilities: isSponsored\n          ? {\n              paymasterService: {\n                url: paymaster,\n              },\n            }\n          : undefined,\n      });\n    } catch (error) {\n      const isUserRejectedError =\n        (error as Error).message?.includes('User denied connection request') ||\n        isUserRejectedRequestError(error);\n      const errorCode = isUserRejectedError\n        ? CheckoutErrorCode.USER_REJECTED_ERROR\n        : CheckoutErrorCode.UNEXPECTED_ERROR;\n      const errorMessage = isUserRejectedError\n        ? USER_REJECTED_ERROR\n        : GENERIC_ERROR_MESSAGE;\n      if (isUserRejectedError) {\n        // Set the ref so that we can use the cached commerce API call\n        userRejectedRef.current = true;\n      }\n\n      setErrorMessage(errorMessage);\n      updateLifecycleStatus({\n        statusName: CHECKOUT_LIFECYCLESTATUS.ERROR,\n        statusData: {\n          code: errorCode,\n          error: JSON.stringify(error),\n          message: errorMessage,\n        },\n      });\n    }\n  }, [\n    address,\n    appearance,\n    chainId,\n    chargeId,\n    connectAsync,\n    errorMessage,\n    fetchData,\n    isConnected,\n    isSmartWallet,\n    isSponsored,\n    lifecycleStatus.statusData,\n    lifecycleStatus.statusName,\n    paymaster,\n    switchChainAsync,\n    updateLifecycleStatus,\n    writeContractsAsync,\n  ]);\n\n  const value = useValue({\n    errorMessage,\n    lifecycleStatus,\n    onSubmit: handleSubmit,\n    updateLifecycleStatus,\n  });\n  return (\n    <CheckoutContext.Provider value={value}>\n      {children}\n    </CheckoutContext.Provider>\n  );\n}\n","import { useMemo } from 'react';\n\nexport function useValue<T>(object: T): T {\n  return useMemo(() => object, [object]);\n}\n","import type { TransactionExecutionError } from 'viem';\n\nexport function isUserRejectedRequestError(err: unknown) {\n  if (\n    (err as TransactionExecutionError)?.cause?.name ===\n    'UserRejectedRequestError'\n  ) {\n    return true;\n  }\n  if (\n    (err as TransactionExecutionError)?.shortMessage?.includes(\n      'User rejected the request.',\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n","import { useAccount } from 'wagmi';\nimport { useCapabilitiesSafe } from '../../internal/hooks/useCapabilitiesSafe';\nimport { useOnchainKit } from '../../useOnchainKit';\n\n// From https://github.com/wevm/wagmi/blob/472993b3c0d5941e524e67a0f51b32af5bb9e48f/packages/connectors/src/coinbaseWallet.ts#L90\nconst COINBASE_WALLET_SDK_CONNECTOR_ID = 'coinbaseWalletSDK';\n\n/**\n * Checks the wallet connector ID and the wallet capabilities to determine if the currently connected wallet is a\n * Coinbase Smart Wallet.\n * @returns true if the wallet is a Coinbase Smart Wallet, false otherwise.\n */\nexport function useIsWalletACoinbaseSmartWallet(): boolean {\n  const { chain } = useOnchainKit();\n  const { connector } = useAccount();\n  const walletCapabilities = useCapabilitiesSafe({\n    chainId: chain.id,\n  });\n\n  return (\n    connector?.id === COINBASE_WALLET_SDK_CONNECTOR_ID &&\n    walletCapabilities.atomicBatch?.supported === true\n  );\n}\n","import { useMemo } from 'react';\nimport type { WalletCapabilities } from 'viem';\nimport { useAccount } from 'wagmi';\nimport { useCapabilities } from 'wagmi/experimental';\nimport type { UseCapabilitiesSafeParams } from '../../types';\n\nexport function useCapabilitiesSafe({\n  chainId,\n}: UseCapabilitiesSafeParams): WalletCapabilities {\n  const { isConnected } = useAccount();\n\n  const { data: capabilities, error } = useCapabilities({\n    query: { enabled: isConnected },\n  });\n\n  return useMemo(() => {\n    if (error || !capabilities || !capabilities[chainId]) {\n      return {};\n    }\n\n    return capabilities[chainId];\n  }, [capabilities, chainId, error]);\n}\n","export const GENERAL_CHECKOUT_ERROR_MESSAGE = 'CHECKOUT_ERROR';\nexport const GENERIC_ERROR_MESSAGE = 'Something went wrong. Please try again.';\nexport const NO_CONTRACTS_ERROR = 'Contracts are not available';\nexport const NO_CONNECTED_ADDRESS_ERROR = 'No connected address';\nexport const CHECKOUT_UNSUPPORTED_CHAIN_ERROR_MESSAGE = 'UNSUPPORTED_CHAIN';\nexport const CHECKOUT_TOO_MANY_REQUESTS_ERROR_MESSAGE =\n  'CHECKOUT_TOO_MANY_REQUESTS_ERROR';\n\nexport const CHECKOUT_INSUFFICIENT_BALANCE_ERROR =\n  'User has insufficient balance';\nexport const CHECKOUT_INSUFFICIENT_BALANCE_ERROR_MESSAGE = (\n  priceInUSD: string,\n) => {\n  return `You need at least ${priceInUSD} USDC to continue with payment`;\n};\nexport const CHECKOUT_INVALID_CHARGE_ERROR_MESSAGE =\n  'CHECKOUT_INVALID_CHARGE_ERROR';\nexport const CHECKOUT_INVALID_PARAMETER_ERROR_MESSAGE =\n  'CHECKOUT_INVALID_PARAMETER_ERROR';\nexport const UNCAUGHT_CHECKOUT_ERROR_MESSAGE = 'UNCAUGHT_CHECKOUT_ERROR';\nexport const USER_REJECTED_ERROR = 'Request denied.';\n\nexport enum CheckoutErrorCode {\n  INSUFFICIENT_BALANCE = 'insufficient_balance',\n  GENERIC_ERROR = 'generic_error',\n  UNEXPECTED_ERROR = 'unexpected_error',\n  USER_REJECTED_ERROR = 'user_rejected',\n}\n\nexport interface CheckoutErrorType {\n  code: CheckoutErrorCode;\n  error: string;\n  message: string;\n}\n\nexport type CheckoutErrors = {\n  [K in CheckoutErrorCode]: CheckoutErrorType;\n};\n\nexport enum CHECKOUT_LIFECYCLESTATUS {\n  FETCHING_DATA = 'fetchingData',\n  INIT = 'init',\n  PENDING = 'pending',\n  READY = 'ready',\n  SUCCESS = 'success',\n  ERROR = 'error',\n}\n\nexport const USDC_ADDRESS_BASE = '0x833589fcd6edb6e08f4c7c32d4f71b54bda02913';\n\nexport enum CONTRACT_METHODS {\n  APPROVE = 'approve',\n  BALANCE_OF = 'balanceOf',\n  TRANSFER_TOKEN_PRE_APPROVED = 'transferTokenPreApproved',\n}\n\nexport const COMMERCE_ABI = [\n  {\n    type: 'function',\n    name: 'transferTokenPreApproved',\n    inputs: [\n      {\n        name: '_intent',\n        type: 'tuple',\n        components: [\n          {\n            name: 'recipientAmount',\n            type: 'uint256',\n          },\n          {\n            name: 'deadline',\n            type: 'uint256',\n          },\n          {\n            name: 'recipient',\n            type: 'address',\n          },\n          {\n            name: 'recipientCurrency',\n            type: 'address',\n          },\n          {\n            name: 'refundDestination',\n            type: 'address',\n          },\n          {\n            name: 'feeAmount',\n            type: 'uint256',\n          },\n          {\n            name: 'id',\n            type: 'bytes16',\n          },\n          {\n            name: 'operator',\n            type: 'address',\n          },\n          {\n            name: 'signature',\n            type: 'bytes',\n          },\n          {\n            name: 'prefix',\n            type: 'bytes',\n          },\n        ],\n      },\n    ],\n    outputs: [],\n    stateMutability: 'nonpayable',\n  },\n] as const;\n","import { useCallback } from 'react';\nimport { type Address, formatUnits } from 'viem';\nimport { useConfig } from 'wagmi';\nimport type { UseCommerceContractsParams } from '../types';\nimport { getCommerceContracts } from '../utils/getCommerceContracts';\nimport { getUSDCBalance } from '../utils/getUSDCBalance';\nimport { handlePayRequest } from '../utils/handlePayRequest';\n\nexport const useCommerceContracts = ({\n  chargeHandler,\n  productId,\n}: UseCommerceContractsParams) => {\n  const config = useConfig();\n\n  return useCallback(\n    async (address: Address) => {\n      try {\n        // Make the Pay request to the appropriate endpoint\n        // `productId` to create and hydrate a charge for a product (serverless)\n        // `chargeHandler` for a developer-provided callback used to return a charge ID (e.g. from the merchant backend)\n        const [response, usdcBalance] = await Promise.all([\n          handlePayRequest({\n            address,\n            chargeHandler,\n            productId,\n          }),\n          getUSDCBalance({\n            address,\n            config,\n          }),\n        ]);\n\n        // Set the `chargeId`\n        const { id: chargeId } = response;\n\n        // Retrieve commerce contracts from response\n        const contracts = getCommerceContracts({\n          transaction: response,\n        });\n\n        // Calculate user's USDC balance\n        const priceInUSDC = formatUnits(\n          BigInt(response.callData.feeAmount) +\n            BigInt(response.callData.recipientAmount),\n          6,\n        );\n\n        // Set insufficient balance flag, if applicable\n        const insufficientBalance =\n          Number.parseFloat(usdcBalance) < Number.parseFloat(priceInUSDC);\n\n        return { chargeId, contracts, insufficientBalance, priceInUSDC };\n      } catch (error) {\n        console.error('Unexpected error fetching contracts:', error);\n        return {\n          chargeId: '',\n          contracts: null,\n          insufficientBalance: false,\n          error,\n        };\n      }\n    },\n    [config, chargeHandler, productId],\n  );\n};\n","import { type ContractFunctionParameters, erc20Abi } from 'viem';\nimport { COMMERCE_ABI, CONTRACT_METHODS } from '../constants';\nimport type { GetCommerceContractsParams } from '../types';\n\nexport function getCommerceContracts({\n  transaction,\n}: GetCommerceContractsParams): ContractFunctionParameters[] {\n  const { callData, metaData } = transaction;\n\n  return [\n    {\n      address: callData.recipientCurrency,\n      abi: erc20Abi,\n      functionName: CONTRACT_METHODS.APPROVE,\n      args: [\n        metaData.contractAddress,\n        BigInt(callData.recipientAmount) + BigInt(callData.feeAmount),\n      ],\n    },\n    {\n      address: metaData.contractAddress,\n      abi: COMMERCE_ABI,\n      functionName: CONTRACT_METHODS.TRANSFER_TOKEN_PRE_APPROVED,\n      args: [\n        {\n          id: callData.id,\n          recipientAmount: BigInt(callData.recipientAmount),\n          deadline: BigInt(\n            Math.floor(new Date(callData.deadline).getTime() / 1000),\n          ),\n          recipient: callData.recipient,\n          recipientCurrency: callData.recipientCurrency,\n          refundDestination: callData.refundDestination,\n          feeAmount: BigInt(callData.feeAmount),\n          operator: callData.operator,\n          signature: callData.signature,\n          prefix: callData.prefix,\n        },\n      ],\n    },\n  ];\n}\n","import { formatUnits } from 'viem';\nimport { erc20Abi } from 'viem';\nimport { readContract } from 'wagmi/actions';\nimport { CONTRACT_METHODS, USDC_ADDRESS_BASE } from '../constants';\nimport type { GetUSDCBalanceParams } from '../types';\n\nexport const getUSDCBalance = async ({\n  address,\n  config,\n}: GetUSDCBalanceParams) => {\n  const result = await readContract(config, {\n    abi: erc20Abi,\n    address: USDC_ADDRESS_BASE,\n    functionName: CONTRACT_METHODS.BALANCE_OF,\n    args: [address],\n  });\n\n  return formatUnits(result, 6);\n};\n","export const version = '0.35.2';\n","import { version } from '../version';\n\nexport const POST_METHOD = 'POST';\nexport const JSON_HEADERS = {\n  'Content-Type': 'application/json',\n  'OnchainKit-Version': version,\n};\nexport const JSON_RPC_VERSION = '2.0';\n","import { ONCHAIN_KIT_CONFIG } from '../OnchainKitConfig';\n\n/**\n * Access the RPC URL for OnchainKit.\n * Defaults to using Coinbase Developer Platform if a RPC URL is not provided.\n */\nexport const getRPCUrl = () => {\n  if (!ONCHAIN_KIT_CONFIG.rpcUrl && !ONCHAIN_KIT_CONFIG.apiKey) {\n    throw new Error(\n      'API Key Unset: You can use the Coinbase Developer Platform RPC by providing an API key in `OnchainKitProvider` or by manually calling `setOnchainKitConfig`: https://portal.cdp.coinbase.com/products/onchainkit',\n    );\n  }\n  return (\n    ONCHAIN_KIT_CONFIG.rpcUrl ||\n    `https://api.developer.coinbase.com/rpc/v1/${ONCHAIN_KIT_CONFIG.chain.name.replace(' ', '-').toLowerCase()}/${ONCHAIN_KIT_CONFIG.apiKey}`\n  );\n};\n","import { JSON_HEADERS, JSON_RPC_VERSION, POST_METHOD } from './constants';\nimport { getRPCUrl } from './getRPCUrl';\n\nexport type JSONRPCError = {\n  code: number;\n  message: string;\n};\n\nexport type JSONRPCRequest<T> = {\n  id: number;\n  jsonrpc: string;\n  method: string;\n  params: T[];\n};\n\nexport type JSONRPCResult<T> = {\n  error?: JSONRPCError;\n  id: number;\n  jsonrpc: string;\n  result: T;\n};\n\n/**\n * Builds a JSON-RPC request body.\n *\n * @param method - The method name.\n * @param params - The parameters for the method.\n * @returns The JSON-RPC request body.\n * @template T - The type of the parameters.\n */\nexport function buildRequestBody<T>(\n  method: string,\n  params: T[],\n): JSONRPCRequest<T> {\n  return {\n    id: 1,\n    jsonrpc: JSON_RPC_VERSION,\n    method: method,\n    params: params,\n  };\n}\n\n/**\n * Sends a JSON-RPC request to configured RPC URL.\n * Defaults to using the Coinbase Developer Platform Node.\n *\n * @param body - The JSON-RPC request body.\n * @returns A promise that resolves to the JSON-RPC response.\n * @throws If an error occurs while sending the request.\n */\nexport async function sendRequest<T, V>(\n  method: string,\n  params: T[],\n): Promise<JSONRPCResult<V>> {\n  try {\n    const body = buildRequestBody<T>(method, params);\n    const url = getRPCUrl();\n    const response = await fetch(url, {\n      body: JSON.stringify(body),\n      headers: JSON_HEADERS,\n      method: POST_METHOD,\n    });\n    const data: JSONRPCResult<V> = await response.json();\n    return data;\n  } catch (error) {\n    console.log(\n      `sendRequest: error sending request: ${(error as Error).message}`,\n    );\n    throw error;\n  }\n}\n","export const CDP_HYDRATE_CHARGE = 'cdp_hydrateCharge';\nexport const CDP_CREATE_PRODUCT_CHARGE = 'cdp_createProductCharge';\n","import {\n  CHECKOUT_INVALID_CHARGE_ERROR_MESSAGE,\n  CHECKOUT_INVALID_PARAMETER_ERROR_MESSAGE,\n  CHECKOUT_TOO_MANY_REQUESTS_ERROR_MESSAGE,\n  GENERAL_CHECKOUT_ERROR_MESSAGE,\n  UNCAUGHT_CHECKOUT_ERROR_MESSAGE,\n} from '../../checkout/constants';\n\nexport function getPayErrorMessage(errorCode?: number) {\n  if (!errorCode) {\n    return UNCAUGHT_CHECKOUT_ERROR_MESSAGE;\n  }\n\n  if (errorCode === -32001) {\n    return CHECKOUT_TOO_MANY_REQUESTS_ERROR_MESSAGE;\n  }\n\n  if (errorCode === -32601) {\n    return CHECKOUT_INVALID_CHARGE_ERROR_MESSAGE;\n  }\n\n  if (errorCode === -32602) {\n    return CHECKOUT_INVALID_PARAMETER_ERROR_MESSAGE;\n  }\n\n  return GENERAL_CHECKOUT_ERROR_MESSAGE;\n}\n","import {\n  CDP_CREATE_PRODUCT_CHARGE,\n  CDP_HYDRATE_CHARGE,\n} from '../network/definitions/pay';\nimport { type JSONRPCResult, sendRequest } from '../network/request';\nimport type {\n  BuildPayTransactionParams,\n  BuildPayTransactionResponse,\n  CreateProductChargeParams,\n  HydrateChargeAPIParams,\n} from './types';\nimport { getPayErrorMessage } from './utils/getPayErrorMessage';\n\nexport async function buildPayTransaction({\n  address,\n  chargeId,\n  productId,\n}: BuildPayTransactionParams): Promise<BuildPayTransactionResponse> {\n  try {\n    let res: JSONRPCResult<BuildPayTransactionResponse>;\n    if (chargeId) {\n      res = await sendRequest<\n        HydrateChargeAPIParams,\n        BuildPayTransactionResponse\n      >(CDP_HYDRATE_CHARGE, [\n        {\n          sender: address,\n          chargeId,\n        },\n      ]);\n    } else if (productId) {\n      res = await sendRequest<\n        CreateProductChargeParams,\n        BuildPayTransactionResponse\n      >(CDP_CREATE_PRODUCT_CHARGE, [\n        {\n          sender: address,\n          productId,\n        },\n      ]);\n    } else {\n      return {\n        code: 'AmBPTa01', // Api Module Build Pay Transaction Error 01\n        error: 'No chargeId or productId provided',\n        message: getPayErrorMessage(),\n      };\n    }\n    if (res.error) {\n      return {\n        code: 'AmBPTa02', // Api Module Build Pay Transaction Error 02\n        error: res.error.message,\n        message: getPayErrorMessage(res.error?.code),\n      };\n    }\n    return res.result;\n  } catch (_error) {\n    return {\n      code: 'AmBPTa03', // Api Module Build Pay Transaction Error 03\n      error: 'Something went wrong',\n      message: getPayErrorMessage(),\n    };\n  }\n}\n","import { buildPayTransaction } from '../../api';\nimport type { BuildPayTransactionParams } from '../../api';\nimport type { HandlePayRequestParams } from '../types';\n\nexport const handlePayRequest = async ({\n  address,\n  chargeHandler,\n  productId,\n}: HandlePayRequestParams) => {\n  const buildPayTransactionParams: BuildPayTransactionParams = {\n    address,\n  };\n\n  if (chargeHandler) {\n    buildPayTransactionParams.chargeId = await chargeHandler();\n  } else if (productId) {\n    buildPayTransactionParams.productId = productId;\n  }\n\n  const response = await buildPayTransaction(buildPayTransactionParams);\n\n  if ('error' in response) {\n    throw new Error(response.error);\n  }\n\n  return response;\n};\n","import { useCallback, useState } from 'react';\nimport { CHECKOUT_LIFECYCLESTATUS } from '../constants';\nimport type { LifecycleStatus, LifecycleStatusUpdate } from '../types';\nimport type { UseLifecycleStatusReturn } from '../types';\n\nexport function useLifecycleStatus(\n  initialState: LifecycleStatus,\n): UseLifecycleStatusReturn {\n  const [lifecycleStatus, setLifecycleStatus] =\n    useState<LifecycleStatus>(initialState); // Component lifecycle\n\n  // Update lifecycle status, statusData will be persisted for the full lifecycle\n  const updateLifecycleStatus = useCallback(\n    (newStatus: LifecycleStatusUpdate) => {\n      setLifecycleStatus((prevStatus: LifecycleStatus) => {\n        // do not persist errors\n        const persistedStatusData =\n          prevStatus.statusName === CHECKOUT_LIFECYCLESTATUS.ERROR\n            ? (({ error, code, message, ...statusData }) => statusData)(\n                prevStatus.statusData,\n              )\n            : prevStatus.statusData;\n        return {\n          statusName: newStatus.statusName,\n          statusData: {\n            ...persistedStatusData,\n            ...newStatus.statusData,\n          },\n        } as LifecycleStatus;\n      });\n    },\n    [],\n  );\n\n  return { lifecycleStatus, updateLifecycleStatus };\n}\n","import { cn } from '../../styles/theme';\nimport { useIsMounted } from '../../useIsMounted';\nimport { useTheme } from '../../useTheme';\nimport type { CheckoutReact } from '../types';\nimport { CheckoutProvider } from './CheckoutProvider';\n\nexport function Checkout({\n  chargeHandler,\n  children,\n  className,\n  isSponsored,\n  onStatus,\n  productId,\n}: CheckoutReact) {\n  const isMounted = useIsMounted();\n  const componentTheme = useTheme();\n  // prevents SSR hydration issue\n  if (!isMounted) {\n    return null;\n  }\n\n  return (\n    <CheckoutProvider\n      chargeHandler={chargeHandler}\n      isSponsored={isSponsored}\n      onStatus={onStatus}\n      productId={productId}\n    >\n      <div\n        className={cn(componentTheme, 'flex w-full flex-col gap-2', className)}\n      >\n        {children}\n      </div>\n    </CheckoutProvider>\n  );\n}\n","import { useMemo } from 'react';\nimport { Spinner } from '../../internal/components/Spinner';\nimport { useIcon } from '../../internal/hooks/useIcon';\nimport {\n  border,\n  cn,\n  color,\n  pressable,\n  text as styleText,\n} from '../../styles/theme';\nimport { CHECKOUT_LIFECYCLESTATUS } from '../constants';\nimport type { CheckoutButtonReact } from '../types';\nimport { useCheckoutContext } from './CheckoutProvider';\n\nexport function CheckoutButton({\n  className,\n  coinbaseBranded,\n  disabled,\n  icon,\n  text = 'Pay',\n}: CheckoutButtonReact) {\n  if (coinbaseBranded) {\n    icon = 'coinbasePay';\n    text = 'Pay with Crypto';\n  }\n  const { lifecycleStatus, onSubmit } = useCheckoutContext();\n  const iconSvg = useIcon({ icon });\n\n  const isLoading =\n    lifecycleStatus?.statusName === CHECKOUT_LIFECYCLESTATUS.PENDING;\n  const isFetchingData =\n    lifecycleStatus?.statusName === CHECKOUT_LIFECYCLESTATUS.FETCHING_DATA;\n  const isDisabled = disabled || isLoading || isFetchingData;\n  const buttonText = useMemo(() => {\n    if (lifecycleStatus?.statusName === CHECKOUT_LIFECYCLESTATUS.SUCCESS) {\n      return 'View payment details';\n    }\n    if (\n      lifecycleStatus?.statusName === CHECKOUT_LIFECYCLESTATUS.ERROR &&\n      lifecycleStatus?.statusData.error === 'User has insufficient balance'\n    ) {\n      return 'Get USDC';\n    }\n    return text;\n  }, [lifecycleStatus?.statusName, lifecycleStatus?.statusData, text]);\n  const shouldRenderIcon = buttonText === text && iconSvg;\n\n  return (\n    <button\n      className={cn(\n        coinbaseBranded ? pressable.coinbaseBranding : pressable.primary,\n        border.radius,\n        isDisabled && pressable.disabled,\n        styleText.headline,\n        'mt-4 w-full px-4 py-3',\n        className,\n      )}\n      onClick={onSubmit}\n      type=\"button\"\n      disabled={isDisabled}\n    >\n      <div className=\"flex items-center justify-center whitespace-nowrap\">\n        {isLoading ? (\n          <Spinner className=\"h-5 w-5\" />\n        ) : (\n          <>\n            {shouldRenderIcon && (\n              <div className=\"mr-2 flex h-5 w-5 shrink-0 items-center justify-center\">\n                {iconSvg}\n              </div>\n            )}\n            <span\n              className={cn(\n                styleText.headline,\n                coinbaseBranded ? 'text-gray-50' : color.inverse,\n              )}\n            >\n              {buttonText}\n            </span>\n          </>\n        )}\n      </div>\n    </button>\n  );\n}\n","import { cn } from '../../styles/theme';\n\ntype SpinnerReact = {\n  className?: string;\n};\n\nexport function Spinner({ className }: SpinnerReact) {\n  return (\n    <div\n      className=\"flex h-full items-center justify-center\"\n      data-testid=\"ockSpinner\"\n    >\n      <div\n        className={cn(\n          'animate-spin border-2 border-gray-200 border-t-3',\n          'rounded-full border-t-gray-400 px-2.5 py-2.5',\n          className,\n        )}\n      />\n    </div>\n  );\n}\n","import { isValidElement, useMemo } from 'react';\nimport { coinbasePaySvg } from '../svg/coinbasePaySvg';\nimport { fundWalletSvg } from '../svg/fundWallet';\nimport { swapSettingsSvg } from '../svg/swapSettings';\nimport { walletSvg } from '../svg/walletSvg';\n\nexport const useIcon = ({ icon }: { icon?: React.ReactNode }) => {\n  return useMemo(() => {\n    if (icon === undefined) {\n      return null;\n    }\n    switch (icon) {\n      case 'coinbasePay':\n        return coinbasePaySvg;\n      case 'fundWallet':\n        return fundWalletSvg;\n      case 'swapSettings':\n        return swapSettingsSvg;\n      case 'wallet':\n        return walletSvg;\n    }\n    if (isValidElement(icon)) {\n      return icon;\n    }\n  }, [icon]);\n};\n","export const coinbasePaySvg = (\n  <svg\n    role=\"img\"\n    aria-label=\"ock-coinbasePaySvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M10.0145 14.1666C7.82346 14.1666 6.04878 12.302 6.04878 9.99996C6.04878 7.69788 7.82346 5.83329 10.0145 5.83329C11.9776 5.83329 13.6069 7.33677 13.9208 9.30552H17.9163C17.5793 5.02774 14.172 1.66663 10.0145 1.66663C5.63568 1.66663 2.08301 5.39926 2.08301 9.99996C2.08301 14.6007 5.63568 18.3333 10.0145 18.3333C14.172 18.3333 17.5793 14.9722 17.9163 10.6944H13.9208C13.6069 12.6632 11.9776 14.1666 10.0145 14.1666Z\"\n      fill=\"#f9fafb\"\n    />\n  </svg>\n);\n","import { icon } from '../../styles/theme';\n\nexport const fundWalletSvg = (\n  <svg\n    role=\"img\"\n    aria-label=\"ock-fundWalletSvg\"\n    width=\"18\"\n    height=\"18\"\n    viewBox=\"0 0 18 18\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M13.5 4.5C13.5 6.15685 14.8431 7.5 16.5 7.5V10.5C14.8431 10.5 13.5 11.8431 13.5 13.5H4.5C4.5 11.8431 3.15685 10.5 1.5 10.5L1.5 13.5V7.5C3.15685 7.5 4.5 6.15685 4.5 4.5H13.5ZM0 3V15H18V3H0ZM11.25 9C11.25 7.75736 10.2426 6.75 9 6.75C7.75736 6.75 6.75 7.75736 6.75 9C6.75 10.2426 7.75736 11.25 9 11.25C10.2426 11.25 11.25 10.2426 11.25 9Z\"\n      fill=\"#0A0B0D\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { icon } from '../../styles/theme';\n\nexport const swapSettingsSvg = (\n  <svg\n    role=\"img\"\n    aria-label=\"ock-swapSettingsSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 19 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M8.92071 5.89742e-08C8.00371 5.89742e-08 7.22171 0.663 7.07071 1.567L6.89271 2.639C6.87271 2.759 6.77771 2.899 6.59571 2.987C6.25306 3.15171 5.92344 3.34226 5.60971 3.557C5.44371 3.672 5.27571 3.683 5.15971 3.64L4.14271 3.258C3.72695 3.10224 3.26941 3.09906 2.85152 3.24904C2.43364 3.39901 2.08254 3.69241 1.86071 4.077L0.938708 5.674C0.716797 6.05836 0.638423 6.50897 0.717525 6.94569C0.796628 7.3824 1.02808 7.7769 1.37071 8.059L2.21071 8.751C2.30571 8.829 2.38071 8.98 2.36471 9.181C2.33621 9.56013 2.33621 9.94087 2.36471 10.32C2.37971 10.52 2.30571 10.672 2.21171 10.75L1.37071 11.442C1.02808 11.7241 0.796628 12.1186 0.717525 12.5553C0.638423 12.992 0.716797 13.4426 0.938708 13.827L1.86071 15.424C2.08269 15.8084 2.43387 16.1016 2.85173 16.2514C3.2696 16.4012 3.72706 16.3978 4.14271 16.242L5.16171 15.86C5.27671 15.817 5.44471 15.829 5.61171 15.942C5.92371 16.156 6.25271 16.347 6.59671 16.512C6.77871 16.6 6.87371 16.74 6.89371 16.862L7.07171 17.933C7.22271 18.837 8.00471 19.5 8.92171 19.5H10.7657C11.6817 19.5 12.4647 18.837 12.6157 17.933L12.7937 16.861C12.8137 16.741 12.9077 16.601 13.0907 16.512C13.4347 16.347 13.7637 16.156 14.0757 15.942C14.2427 15.828 14.4107 15.817 14.5257 15.86L15.5457 16.242C15.9612 16.3972 16.4183 16.4001 16.8357 16.2502C17.2532 16.1002 17.6039 15.8071 17.8257 15.423L18.7487 13.826C18.9706 13.4416 19.049 12.991 18.9699 12.5543C18.8908 12.1176 18.6593 11.7231 18.3167 11.441L17.4767 10.749C17.3817 10.671 17.3067 10.52 17.3227 10.319C17.3511 9.93987 17.3511 9.55913 17.3227 9.18C17.3067 8.98 17.3817 8.828 17.4757 8.75L18.3157 8.058C19.0237 7.476 19.2067 6.468 18.7487 5.673L17.8267 4.076C17.6047 3.69159 17.2535 3.3984 16.8357 3.24861C16.4178 3.09883 15.9604 3.10215 15.5447 3.258L14.5247 3.64C14.4107 3.683 14.2427 3.671 14.0757 3.557C13.7623 3.3423 13.433 3.15175 13.0907 2.987C12.9077 2.9 12.8137 2.76 12.7937 2.639L12.6147 1.567C12.5418 1.12906 12.3158 0.731216 11.977 0.444267C11.6383 0.157318 11.2087 -0.00011124 10.7647 5.89742e-08H8.92171H8.92071ZM9.84271 13.5C10.8373 13.5 11.7911 13.1049 12.4944 12.4017C13.1976 11.6984 13.5927 10.7446 13.5927 9.75C13.5927 8.75544 13.1976 7.80161 12.4944 7.09835C11.7911 6.39509 10.8373 6 9.84271 6C8.84815 6 7.89432 6.39509 7.19106 7.09835C6.4878 7.80161 6.09271 8.75544 6.09271 9.75C6.09271 10.7446 6.4878 11.6984 7.19106 12.4017C7.89432 13.1049 8.84815 13.5 9.84271 13.5Z\"\n      fill=\"#6B7280\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { icon } from '../../styles/theme';\n\nexport const walletSvg = (\n  <svg\n    role=\"img\"\n    aria-label=\"ock-walletSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M0 10C0 15.5222 4.47778 20 10 20C15.5222 20 20 15.5222 20 10C20 4.47778 15.5222 0 10 0C4.47778 0 0 4.47778 0 10ZM7.44444 6.77778C7.075 6.77778 6.77778 7.075 6.77778 7.44444V12.5556C6.77778 12.925 7.075 13.2222 7.44444 13.2222H12.5556C12.925 13.2222 13.2222 12.925 13.2222 12.5556V7.44444C13.2222 7.075 12.925 6.77778 12.5556 6.77778H7.44444Z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { useMemo } from 'react';\nimport { color } from '../../styles/theme';\nimport { useCheckoutContext } from '../components/CheckoutProvider';\nimport { CHECKOUT_LIFECYCLESTATUS } from '../constants';\n\nexport function useGetCheckoutStatus() {\n  const { errorMessage, lifecycleStatus } = useCheckoutContext();\n  const isPending =\n    lifecycleStatus?.statusName === CHECKOUT_LIFECYCLESTATUS.PENDING;\n  const isSuccess =\n    lifecycleStatus?.statusName === CHECKOUT_LIFECYCLESTATUS.SUCCESS;\n\n  return useMemo(() => {\n    let label = '';\n    let labelClassName: string = color.foregroundMuted;\n\n    if (isPending) {\n      label = 'Payment in progress...';\n    }\n\n    if (isSuccess) {\n      label = 'Payment successful!';\n      labelClassName = color.success;\n    }\n\n    if (errorMessage) {\n      label = errorMessage;\n      labelClassName = color.error;\n    }\n\n    return { label, labelClassName };\n  }, [errorMessage, isPending, isSuccess]);\n}\n","import { cn, text } from '../../styles/theme';\nimport { useGetCheckoutStatus } from '../hooks/useGetCheckoutStatus';\nimport type { CheckoutStatusReact } from '../types';\n\nexport function CheckoutStatus({ className }: CheckoutStatusReact) {\n  const { label, labelClassName } = useGetCheckoutStatus();\n\n  return (\n    <div className={cn('flex justify-between', className)}>\n      <div className={text.label2}>\n        <p className={labelClassName}>{label}</p>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","names":["clsx","twMerge","cn","inputs","twMerge","clsx","text","body","caption","headline","label1","label2","legal","title1","title3","pressable","default","alternate","inverse","primary","secondary","coinbaseBranding","shadow","disabled","color","inverse","foreground","foregroundMuted","error","primary","success","warning","disabled","border","default","defaultActive","radius","radiusInner","icon","primary","foreground","foregroundMuted","inverse","error","success","warning","useEffect","useState","useIsMounted","isMounted","setIsMounted","useState","useEffect","useEffect","useState","usePreferredColorScheme","colorScheme","setColorScheme","useState","useEffect","mediaQuery","window","matchMedia","matches","updateColorScheme","event","addEventListener","removeEventListener","useContext","createContext","useMemo","baseSepolia","ONCHAIN_KIT_CONFIG","address","apiKey","chain","baseSepolia","config","appearance","name","logo","mode","theme","paymaster","rpcUrl","schemaId","projectId","OnchainKitContext","createContext","ONCHAIN_KIT_CONFIG","useOnchainKit","useContext","OnchainKitContext","useTheme","preferredMode","usePreferredColorScheme","config","appearance","useOnchainKit","theme","mode","createContext","useCallback","useContext","useEffect","useRef","useState","base","useAccount","useConnect","useSwitchChain","useWaitForTransactionReceipt","coinbaseWallet","useWriteContracts","useCallsStatus","useMemo","useValue","object","useMemo","isUserRejectedRequestError","err","cause","name","shortMessage","includes","useAccount","useMemo","useAccount","useCapabilities","useCapabilitiesSafe","chainId","isConnected","useAccount","data","capabilities","error","useCapabilities","query","enabled","useMemo","COINBASE_WALLET_SDK_CONNECTOR_ID","useIsWalletACoinbaseSmartWallet","chain","useOnchainKit","connector","useAccount","walletCapabilities","useCapabilitiesSafe","chainId","id","atomicBatch","supported","GENERAL_CHECKOUT_ERROR_MESSAGE","GENERIC_ERROR_MESSAGE","NO_CONTRACTS_ERROR","NO_CONNECTED_ADDRESS_ERROR","CHECKOUT_TOO_MANY_REQUESTS_ERROR_MESSAGE","CHECKOUT_INSUFFICIENT_BALANCE_ERROR","CHECKOUT_INSUFFICIENT_BALANCE_ERROR_MESSAGE","priceInUSD","CHECKOUT_INVALID_CHARGE_ERROR_MESSAGE","CHECKOUT_INVALID_PARAMETER_ERROR_MESSAGE","UNCAUGHT_CHECKOUT_ERROR_MESSAGE","USER_REJECTED_ERROR","CheckoutErrorCode","CHECKOUT_LIFECYCLESTATUS","USDC_ADDRESS_BASE","CONTRACT_METHODS","COMMERCE_ABI","type","name","inputs","components","outputs","stateMutability","useCallback","formatUnits","useConfig","erc20Abi","getCommerceContracts","transaction","callData","metaData","address","recipientCurrency","abi","erc20Abi","functionName","CONTRACT_METHODS","APPROVE","args","contractAddress","BigInt","recipientAmount","feeAmount","COMMERCE_ABI","TRANSFER_TOKEN_PRE_APPROVED","id","deadline","Math","floor","Date","getTime","recipient","refundDestination","operator","signature","prefix","formatUnits","erc20Abi","readContract","getUSDCBalance","address","config","result","readContract","abi","erc20Abi","USDC_ADDRESS_BASE","functionName","CONTRACT_METHODS","BALANCE_OF","args","formatUnits","version","POST_METHOD","JSON_HEADERS","version","JSON_RPC_VERSION","getRPCUrl","ONCHAIN_KIT_CONFIG","rpcUrl","apiKey","Error","chain","name","replace","toLowerCase","buildRequestBody","method","params","id","jsonrpc","JSON_RPC_VERSION","sendRequest","body","url","getRPCUrl","response","fetch","JSON","stringify","headers","JSON_HEADERS","POST_METHOD","data","json","error","console","log","message","CDP_HYDRATE_CHARGE","CDP_CREATE_PRODUCT_CHARGE","getPayErrorMessage","errorCode","UNCAUGHT_CHECKOUT_ERROR_MESSAGE","CHECKOUT_TOO_MANY_REQUESTS_ERROR_MESSAGE","CHECKOUT_INVALID_CHARGE_ERROR_MESSAGE","CHECKOUT_INVALID_PARAMETER_ERROR_MESSAGE","GENERAL_CHECKOUT_ERROR_MESSAGE","buildPayTransaction","address","chargeId","productId","res","sendRequest","CDP_HYDRATE_CHARGE","sender","CDP_CREATE_PRODUCT_CHARGE","code","error","message","getPayErrorMessage","result","_error","handlePayRequest","address","chargeHandler","productId","buildPayTransactionParams","chargeId","response","buildPayTransaction","Error","error","useCommerceContracts","chargeHandler","productId","config","useConfig","useCallback","address","response","usdcBalance","Promise","all","handlePayRequest","getUSDCBalance","id","chargeId","contracts","getCommerceContracts","transaction","priceInUSDC","formatUnits","BigInt","callData","feeAmount","recipientAmount","insufficientBalance","Number","parseFloat","error","console","useCallback","useState","useLifecycleStatus","initialState","lifecycleStatus","setLifecycleStatus","useState","updateLifecycleStatus","useCallback","newStatus","prevStatus","persistedStatusData","statusName","CHECKOUT_LIFECYCLESTATUS","ERROR","error","code","message","statusData","emptyContext","CheckoutContext","createContext","useCheckoutContext","context","useContext","Error","CheckoutProvider","chargeHandler","children","isSponsored","onStatus","productId","config","appearance","paymaster","name","undefined","logo","useOnchainKit","address","chainId","isConnected","useAccount","connectAsync","useConnect","switchChainAsync","useSwitchChain","chargeId","setChargeId","useState","transactionId","setTransactionId","errorMessage","setErrorMessage","isSmartWallet","useIsWalletACoinbaseSmartWallet","fetchedDataUseEffect","useRef","fetchedDataHandleSubmit","userRejectedRef","contractsRef","insufficientBalanceRef","priceInUSDCRef","fetchData","useCallback","updateLifecycleStatus","statusName","CHECKOUT_LIFECYCLESTATUS","FETCHING_DATA","statusData","contracts","hydratedChargeId","insufficientBalance","priceInUSDC","error","fetchContracts","GENERIC_ERROR_MESSAGE","ERROR","code","CheckoutErrorCode","UNEXPECTED_ERROR","message","current","READY","lifecycleStatus","useLifecycleStatus","INIT","useCommerceContracts","status","writeContractsAsync","useWriteContracts","mutation","onSuccess","id","data","useCallsStatus","query","refetchInterval","state","enabled","transactionHash","receipts","receipt","useWaitForTransactionReceipt","hash","useEffect","PENDING","SUCCESS","transactionReceipts","receiptUrl","handleSubmit","window","open","INSUFFICIENT_BALANCE","USER_REJECTED_ERROR","connectedAddress","connectedChainId","accounts","_connectedChainId","connector","coinbaseWallet","appName","appLogoUrl","preference","NO_CONNECTED_ADDRESS_ERROR","base","CHECKOUT_INSUFFICIENT_BALANCE_ERROR_MESSAGE","CHECKOUT_INSUFFICIENT_BALANCE_ERROR","length","NO_CONTRACTS_ERROR","capabilities","paymasterService","url","isUserRejectedError","includes","isUserRejectedRequestError","errorCode","JSON","stringify","value","useValue","onSubmit","Provider","Checkout","chargeHandler","children","className","isSponsored","onStatus","productId","isMounted","useIsMounted","componentTheme","useTheme","CheckoutProvider","div","cn","useMemo","Spinner","className","div","data-testid","cn","isValidElement","useMemo","coinbasePaySvg","svg","role","aria-label","width","height","viewBox","fill","xmlns","path","fillRule","clipRule","d","fundWalletSvg","svg","role","aria-label","width","height","viewBox","fill","xmlns","path","fillRule","clipRule","d","className","icon","foreground","swapSettingsSvg","svg","role","aria-label","width","height","viewBox","fill","xmlns","path","fillRule","clipRule","d","className","icon","foreground","walletSvg","svg","role","aria-label","width","height","viewBox","fill","xmlns","path","fillRule","clipRule","d","className","icon","foreground","useIcon","icon","useMemo","undefined","coinbasePaySvg","fundWalletSvg","swapSettingsSvg","walletSvg","isValidElement","CheckoutButton","className","coinbaseBranded","disabled","icon","text","lifecycleStatus","onSubmit","useCheckoutContext","iconSvg","useIcon","isLoading","statusName","CHECKOUT_LIFECYCLESTATUS","PENDING","isFetchingData","FETCHING_DATA","isDisabled","buttonText","useMemo","SUCCESS","ERROR","statusData","error","shouldRenderIcon","button","cn","pressable","coinbaseBranding","primary","border","radius","styleText","headline","onClick","type","div","Spinner","span","color","inverse","useMemo","useGetCheckoutStatus","errorMessage","lifecycleStatus","useCheckoutContext","isPending","statusName","CHECKOUT_LIFECYCLESTATUS","PENDING","isSuccess","SUCCESS","useMemo","label","labelClassName","color","foregroundMuted","success","error","CheckoutStatus","className","label","labelClassName","useGetCheckoutStatus","div","cn","text","label2","p"]}