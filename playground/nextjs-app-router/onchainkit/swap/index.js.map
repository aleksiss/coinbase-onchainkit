{"version":3,"sources":["../../src/swap/components/Swap.tsx","../../src/internal/utils/findComponent.ts","../../src/styles/theme.ts","../../src/useIsMounted.ts","../../src/internal/hooks/usePreferredColorScheme.ts","../../src/useOnchainKit.tsx","../../src/OnchainKitProvider.tsx","../../src/OnchainKitConfig.ts","../../src/useTheme.ts","../../src/swap/constants.ts","../../src/swap/components/SwapAmountInput.tsx","../../src/internal/components/TextInput.tsx","../../src/internal/hooks/useDebounce.ts","../../src/internal/hooks/useValue.ts","../../src/internal/utils/getRoundedAmount.ts","../../src/internal/utils/isValidAmount.ts","../../src/token/components/TokenImage.tsx","../../src/token/utils/getTokenImageColor.ts","../../src/token/components/TokenChip.tsx","../../src/token/components/TokenRow.tsx","../../src/token/utils/formatAmount.ts","../../src/token/components/TokenSearch.tsx","../../src/internal/svg/closeSvg.tsx","../../src/internal/svg/searchIconSvg.tsx","../../src/token/components/TokenSelectDropdown.tsx","../../src/token/components/TokenSelectButton.tsx","../../src/internal/svg/caretDownSvg.tsx","../../src/internal/svg/caretUpSvg.tsx","../../src/token/components/TokenSelectModal.tsx","../../src/swap/utils/formatAmount.ts","../../src/swap/components/SwapProvider.tsx","../../src/network/definitions/swap.ts","../../src/version.ts","../../src/network/constants.ts","../../src/network/getRPCUrl.ts","../../src/network/request.ts","../../src/swap/utils/getSwapErrorCode.ts","../../src/swap/utils/fromReadableAmount.ts","../../src/swap/utils/toReadableAmount.ts","../../src/swap/utils/formatDecimals.ts","../../src/api/utils/getAPIParamsForToken.ts","../../src/api/utils/getSwapTransaction.ts","../../src/api/buildSwapTransaction.ts","../../src/api/getSwapQuote.ts","../../src/internal/hooks/useCapabilitiesSafe.ts","../../src/internal/utils/formatTokenAmount.ts","../../src/transaction/constants.ts","../../src/transaction/utils/isUserRejectedRequestError.ts","../../src/swap/hooks/useAwaitCalls.ts","../../src/swap/hooks/useFromTo.ts","../../src/wallet/hooks/useGetETHBalance.ts","../../src/wallet/hooks/useGetTokenBalance.ts","../../src/swap/hooks/useSwapBalances.tsx","../../src/swap/hooks/useLifecycleStatus.ts","../../src/swap/hooks/useResetInputs.ts","../../src/swap/utils/isSwapError.ts","../../src/swap/utils/processSwapTransaction.ts","../../src/constants.ts","../../src/swap/utils/sendSingleTransactions.ts","../../src/swap/utils/sendSwapTransactions.ts","../../src/internal/components/Spinner.tsx","../../src/wallet/components/ConnectWallet.tsx","../../src/identity/components/IdentityProvider.tsx","../../src/wallet/components/ConnectButton.tsx","../../src/wallet/components/ConnectWalletText.tsx","../../src/wallet/components/WalletProvider.tsx","../../src/wallet/components/Wallet.tsx","../../src/wallet/components/WalletDropdown.tsx","../../src/identity/components/Identity.tsx","../../src/identity/components/IdentityLayout.tsx","../../src/identity/hooks/usePopover.ts","../../src/identity/components/Address.tsx","../../src/identity/components/Avatar.tsx","../../src/internal/svg/defaultAvatarSVG.tsx","../../src/identity/hooks/useAvatar.ts","../../src/identity/utils/getAvatar.ts","../../src/isBase.ts","../../src/isEthereum.ts","../../src/network/getChainPublicClient.ts","../../src/identity/constants.ts","../../src/identity/utils/getBaseDefaultProfilePictureIndex.tsx","../../src/identity/hooks/useName.ts","../../src/identity/utils/getName.ts","../../src/identity/utils/convertReverseNodeToBytes.ts","../../src/identity/utils/convertChainIdToCoinType.ts","../../src/internal/svg/badgeSvg.tsx","../../src/identity/hooks/useAttestations.ts","../../src/network/attestations.ts","../../src/network/createEasGraphQLClient.ts","../../src/network/definitions/base.ts","../../src/network/definitions/baseSepolia.ts","../../src/network/definitions/optimism.ts","../../src/identity/utils/easSupportedChains.ts","../../src/identity/components/Name.tsx","../../src/identity/hooks/useSocials.tsx","../../src/identity/utils/getSocials.ts","../../src/internal/svg/githubSvg.tsx","../../src/internal/svg/twitterSvg.tsx","../../src/internal/svg/warpcastSvg.tsx","../../src/internal/svg/websiteSvg.tsx","../../src/useBreakpoints.ts","../../src/wallet/components/WalletBottomSheet.tsx","../../src/identity/utils/getAddress.ts","../../src/identity/hooks/useAddress.ts","../../src/wallet/components/WalletDropdownDisconnect.tsx","../../src/internal/svg/disconnectSvg.tsx","../../src/internal/hooks/useIcon.tsx","../../src/internal/svg/coinbasePaySvg.tsx","../../src/internal/svg/fundWallet.tsx","../../src/internal/svg/swapSettings.tsx","../../src/internal/svg/walletSvg.tsx","../../src/wallet/components/WalletDropdownBasename.tsx","../../src/internal/svg/basenameSvg.tsx","../../src/wallet/components/WalletDropdownFundLink.tsx","../../src/fund/hooks/useGetFundingUrl.ts","../../src/wallet/hooks/useIsWalletACoinbaseSmartWallet.ts","../../src/wallet/utils/isValidAAEntrypoint.ts","../../src/wallet/utils/isWalletACoinbaseSmartWallet.ts","../../src/swap/components/SwapButton.tsx","../../src/swap/utils/getErrorMessage.ts","../../src/swap/utils/getSwapMessage.ts","../../src/swap/components/SwapMessage.tsx","../../src/swap/components/SwapSettings.tsx","../../src/swap/components/SwapSettingsSlippageLayout.tsx","../../src/swap/components/SwapSettingsSlippageDescription.tsx","../../src/swap/components/SwapSettingsSlippageInput.tsx","../../src/swap/components/SwapSettingsSlippageTitle.tsx","../../src/swap/components/SwapSettingsSlippageLayoutBottomSheet.tsx","../../src/swap/components/SwapToast.tsx","../../src/internal/svg/successSvg.tsx","../../src/internal/utils/getToastPosition.ts","../../src/network/getChainExplorer.ts","../../src/internal/svg/toggleSvg.tsx","../../src/swap/components/SwapToggleButton.tsx","../../src/swap/components/SwapDefault.tsx"],"sourcesContent":["import { Children, useMemo } from 'react';\nimport { findComponent } from '../../internal/utils/findComponent';\nimport { background, border, cn, color, text } from '../../styles/theme';\nimport { useIsMounted } from '../../useIsMounted';\nimport { useTheme } from '../../useTheme';\nimport { FALLBACK_DEFAULT_MAX_SLIPPAGE } from '../constants';\nimport type { SwapReact } from '../types';\nimport { SwapAmountInput } from './SwapAmountInput';\nimport { SwapButton } from './SwapButton';\nimport { SwapMessage } from './SwapMessage';\nimport { SwapProvider } from './SwapProvider';\nimport { SwapSettings } from './SwapSettings';\nimport { SwapToast } from './SwapToast';\nimport { SwapToggleButton } from './SwapToggleButton';\n\nexport function Swap({\n  children,\n  config = {\n    maxSlippage: FALLBACK_DEFAULT_MAX_SLIPPAGE,\n  },\n  className,\n  experimental = { useAggregator: false },\n  isSponsored = false,\n  onError,\n  onStatus,\n  onSuccess,\n  title = 'Swap',\n}: SwapReact) {\n  const componentTheme = useTheme();\n\n  const {\n    inputs,\n    toggleButton,\n    swapButton,\n    swapMessage,\n    swapSettings,\n    swapToast,\n  } = useMemo(() => {\n    const childrenArray = Children.toArray(children);\n\n    return {\n      inputs: childrenArray.filter(findComponent(SwapAmountInput)),\n      toggleButton: childrenArray.find(findComponent(SwapToggleButton)),\n      swapButton: childrenArray.find(findComponent(SwapButton)),\n      swapMessage: childrenArray.find(findComponent(SwapMessage)),\n      swapSettings: childrenArray.find(findComponent(SwapSettings)),\n      swapToast: childrenArray.find(findComponent(SwapToast)),\n    };\n  }, [children]);\n\n  const isMounted = useIsMounted();\n\n  // prevents SSR hydration issue\n  if (!isMounted) {\n    return null;\n  }\n  return (\n    <SwapProvider\n      config={config}\n      experimental={experimental}\n      isSponsored={isSponsored}\n      onError={onError}\n      onStatus={onStatus}\n      onSuccess={onSuccess}\n    >\n      <div\n        className={cn(\n          componentTheme,\n          background.default,\n          border.radius,\n          color.foreground,\n          'flex w-[500px] flex-col px-6 pt-6 pb-4',\n          className,\n        )}\n        data-testid=\"ockSwap_Container\"\n      >\n        <div className=\"mb-4 flex items-center justify-between\">\n          <h3 className={cn(text.title3)} data-testid=\"ockSwap_Title\">\n            {title}\n          </h3>\n          {swapSettings}\n        </div>\n        {inputs[0]}\n        <div className=\"relative h-1\">{toggleButton}</div>\n        {inputs[1]}\n        {swapButton}\n        {swapToast}\n        <div className=\"flex\">{swapMessage}</div>\n      </div>\n    </SwapProvider>\n  );\n}\n","import { isValidElement } from 'react';\nimport type { ComponentType, ReactElement, ReactNode } from 'react';\n\nexport function findComponent<T>(component: ComponentType<T>) {\n  return (child: ReactNode): child is ReactElement<T> => {\n    return isValidElement(child) && child.type === component;\n  };\n}\n","import { clsx } from 'clsx';\nimport type { ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport const text = {\n  body: 'ock-font-family font-normal leading-normal',\n  caption: 'ock-font-family font-semibold text-xs leading-4',\n  headline: 'ock-font-family font-semibold leading-normal',\n  label1: 'ock-font-family font-semibold text-sm leading-5',\n  label2: 'ock-font-family text-sm leading-5',\n  legal: 'ock-font-family text-xs leading-4',\n  title1: 'ock-font-family font-semibold text-[1.75rem] leading-9',\n  title3: 'ock-font-family font-semibold text-xl leading-7',\n} as const;\n\nexport const pressable = {\n  default:\n    'cursor-pointer ock-bg-default active:bg-[var(--ock-bg-default-active)] hover:bg-[var(--ock-bg-default-hover)]',\n  alternate:\n    'cursor-pointer ock-bg-alternate active:bg-[var(--ock-bg-alternate-active)] hover:[var(--ock-bg-alternate-hover)]',\n  inverse:\n    'cursor-pointer ock-bg-inverse active:bg-[var(--ock-bg-inverse-active)] hover:bg-[var(--ock-bg-inverse-hover)]',\n  primary:\n    'cursor-pointer ock-bg-primary active:bg-[var(--ock-bg-primary-active)] hover:bg-[var(--ock-bg-primary-hover)]',\n  secondary:\n    'cursor-pointer ock-bg-secondary active:bg-[var(--ock-bg-secondary-active)] hover:bg-[var(--ock-bg-secondary-hover)]',\n  coinbaseBranding: 'cursor-pointer bg-[#0052FF] hover:bg-[#0045D8]',\n  shadow: 'ock-shadow-default',\n  disabled: 'opacity-[0.38] pointer-events-none',\n} as const;\n\nexport const background = {\n  default: 'ock-bg-default',\n  alternate: 'ock-bg-alternate',\n  inverse: 'ock-bg-inverse',\n  primary: 'ock-bg-primary',\n  secondary: 'ock-bg-secondary',\n  error: 'ock-bg-error',\n  warning: 'ock-bg-warning',\n  success: 'ock-bg-success',\n  washed: 'ock-bg-primary-washed',\n  disabled: 'ock-bg-primary-disabled',\n  reverse: 'ock-bg-default-reverse',\n} as const;\n\nexport const color = {\n  inverse: 'ock-text-inverse',\n  foreground: 'ock-text-foreground',\n  foregroundMuted: 'ock-text-foreground-muted',\n  error: 'ock-text-error',\n  primary: 'ock-text-primary',\n  success: 'ock-text-success',\n  warning: 'ock-text-warning',\n  disabled: 'ock-text-disabled',\n} as const;\n\nexport const fill = {\n  default: 'ock-fill-default',\n  defaultReverse: 'ock-fill-default-reverse',\n  inverse: 'ock-fill-inverse',\n  alternate: 'ock-fill-alternate',\n} as const;\n\nexport const border = {\n  default: 'ock-border-default',\n  defaultActive: 'ock-border-default-active',\n  radius: 'ock-border-radius',\n  radiusInner: 'ock-border-radius-inner',\n} as const;\n\nexport const placeholder = {\n  default: 'ock-placeholder-default',\n} as const;\n\nexport const icon = {\n  primary: 'ock-icon-color-primary',\n  foreground: 'ock-icon-color-foreground',\n  foregroundMuted: 'ock-icon-color-foreground-muted',\n  inverse: 'ock-icon-color-inverse',\n  error: 'ock-icon-color-error',\n  success: 'ock-icon-color-success',\n  warning: 'ock-icon-color-warning',\n} as const;\n\nexport const line = {\n  primary: 'ock-line-primary border',\n  default: 'ock-line-default border',\n  heavy: 'ock-line-heavy border',\n  inverse: 'ock-line-inverse border',\n} as const;\n","import { useEffect, useState } from 'react';\n\nexport function useIsMounted() {\n  const [isMounted, setIsMounted] = useState(false);\n  useEffect(() => {\n    setIsMounted(true);\n  });\n  return isMounted;\n}\n","import { useEffect, useState } from 'react';\n\nexport function usePreferredColorScheme(): 'light' | 'dark' {\n  const [colorScheme, setColorScheme] = useState<'light' | 'dark'>('light');\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setColorScheme(mediaQuery.matches ? 'dark' : 'light');\n\n    function updateColorScheme(event: MediaQueryListEvent) {\n      setColorScheme(event.matches ? 'dark' : 'light');\n    }\n\n    mediaQuery.addEventListener('change', updateColorScheme);\n    return () => mediaQuery.removeEventListener('change', updateColorScheme);\n  }, []);\n\n  return colorScheme;\n}\n","import { useContext } from 'react';\nimport { OnchainKitContext } from './OnchainKitProvider';\n\nexport function useOnchainKit() {\n  return useContext(OnchainKitContext);\n}\n","import { createContext, useMemo } from 'react';\nimport { ONCHAIN_KIT_CONFIG, setOnchainKitConfig } from './OnchainKitConfig';\nimport { checkHashLength } from './internal/utils/checkHashLength';\nimport type { OnchainKitContextType, OnchainKitProviderReact } from './types';\n\nexport const OnchainKitContext =\n  createContext<OnchainKitContextType>(ONCHAIN_KIT_CONFIG);\n\n/**\n * Provides the OnchainKit React Context to the app.\n */\nexport function OnchainKitProvider({\n  address,\n  apiKey,\n  chain,\n  children,\n  config,\n  projectId,\n  rpcUrl,\n  schemaId,\n}: OnchainKitProviderReact) {\n  if (schemaId && !checkHashLength(schemaId, 64)) {\n    throw Error('EAS schemaId must be 64 characters prefixed with \"0x\"');\n  }\n\n  const value = useMemo(() => {\n    const defaultPaymasterUrl = apiKey\n      ? `https://api.developer.coinbase.com/rpc/v1/${chain.name\n          .replace(' ', '-')\n          .toLowerCase()}/${apiKey}`\n      : null;\n    const onchainKitConfig = {\n      address: address ?? null,\n      apiKey: apiKey ?? null,\n      chain: chain,\n      config: {\n        appearance: {\n          name: config?.appearance?.name,\n          logo: config?.appearance?.logo,\n          mode: config?.appearance?.mode ?? 'auto',\n          theme: config?.appearance?.theme ?? 'default',\n        },\n        paymaster: config?.paymaster || defaultPaymasterUrl,\n      },\n      projectId: projectId ?? null,\n      rpcUrl: rpcUrl ?? null,\n      schemaId: schemaId ?? null,\n    };\n    setOnchainKitConfig(onchainKitConfig);\n    return onchainKitConfig;\n  }, [address, apiKey, chain, config, projectId, rpcUrl, schemaId]);\n\n  return (\n    <OnchainKitContext.Provider value={value}>\n      {children}\n    </OnchainKitContext.Provider>\n  );\n}\n","import { baseSepolia } from 'viem/chains';\nimport type { OnchainKitConfig, SetOnchainKitConfig } from './types';\n\n// The ONCHAIN_KIT_CONFIG is not exported at index.ts,\n// but only acccessed through the get and set functions.\nexport const ONCHAIN_KIT_CONFIG: OnchainKitConfig = {\n  address: null,\n  apiKey: null,\n  chain: baseSepolia,\n  config: {\n    appearance: {\n      name: null,\n      logo: null,\n      mode: null,\n      theme: null,\n    },\n    paymaster: null,\n  },\n  rpcUrl: null,\n  schemaId: null,\n  projectId: null,\n};\n\n/**\n * Access the ONCHAIN_KIT_CONFIG object directly by providing the key.\n * This is powerful when you use OnchainKit utilities outside of the React context.\n */\nexport const getOnchainKitConfig = <K extends keyof typeof ONCHAIN_KIT_CONFIG>(\n  configName: K,\n): (typeof ONCHAIN_KIT_CONFIG)[K] => {\n  return ONCHAIN_KIT_CONFIG[configName];\n};\n\n/**\n * Update the ONCHAIN_KIT_CONFIG object directly by providing the properties to update.\n * This is powerful when you use OnchainKit utilities outside of the React context.\n */\nexport const setOnchainKitConfig = (properties: SetOnchainKitConfig) => {\n  Object.assign(ONCHAIN_KIT_CONFIG, properties);\n  return getOnchainKitConfig;\n};\n","import { usePreferredColorScheme } from './internal/hooks/usePreferredColorScheme';\nimport type { UseThemeReact } from './types';\nimport { useOnchainKit } from './useOnchainKit';\n\nexport function useTheme(): UseThemeReact {\n  const preferredMode = usePreferredColorScheme();\n  const {\n    config: { appearance } = {},\n  } = useOnchainKit();\n  const { theme = 'default', mode = 'auto' } = appearance || {};\n\n  if (theme === 'cyberpunk' || theme === 'base' || theme === 'hacker') {\n    return theme;\n  }\n\n  switch (mode) {\n    case 'auto':\n      return `${theme}-${preferredMode}` as UseThemeReact;\n    case 'dark':\n      return `${theme}-dark` as UseThemeReact;\n    case 'light':\n      return `${theme}-light` as UseThemeReact;\n    default:\n      // If mode is not set or is an invalid value, fall back to preferredMode\n      return `${theme}-${preferredMode}` as UseThemeReact;\n  }\n}\n","export const FALLBACK_DEFAULT_MAX_SLIPPAGE = 3;\nexport const GENERAL_SWAP_ERROR_CODE = 'SWAP_ERROR';\nexport const GENERAL_SWAP_QUOTE_ERROR_CODE = 'SWAP_QUOTE_ERROR';\nexport const GENERAL_SWAP_BALANCE_ERROR_CODE = 'SWAP_BALANCE_ERROR';\nexport const LOW_LIQUIDITY_ERROR_CODE = 'SWAP_QUOTE_LOW_LIQUIDITY_ERROR';\nexport const PERMIT2_CONTRACT_ADDRESS =\n  '0x000000000022D473030F116dDEE9F6B43aC78BA3';\nexport const TOO_MANY_REQUESTS_ERROR_CODE = 'TOO_MANY_REQUESTS_ERROR';\nexport const UNCAUGHT_SWAP_QUOTE_ERROR_CODE = 'UNCAUGHT_SWAP_QUOTE_ERROR';\nexport const UNCAUGHT_SWAP_ERROR_CODE = 'UNCAUGHT_SWAP_ERROR';\nexport const UNIVERSALROUTER_CONTRACT_ADDRESS =\n  '0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD';\nexport const USER_REJECTED_ERROR_CODE = 'USER_REJECTED';\nexport enum SwapMessage {\n  BALANCE_ERROR = 'Error fetching token balance',\n  CONFIRM_IN_WALLET = 'Confirm in wallet',\n  FETCHING_QUOTE = 'Fetching quote...',\n  FETCHING_BALANCE = 'Fetching balance...',\n  INCOMPLETE_FIELD = 'Complete the fields to continue',\n  INSUFFICIENT_BALANCE = 'Insufficient balance',\n  LOW_LIQUIDITY = 'Insufficient liquidity for this trade.',\n  SWAP_IN_PROGRESS = 'Swap in progress...',\n  TOO_MANY_REQUESTS = 'Too many requests. Please try again later.',\n  USER_REJECTED = 'User rejected the transaction',\n}\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { TextInput } from '../../internal/components/TextInput';\nimport { useValue } from '../../internal/hooks/useValue';\nimport { getRoundedAmount } from '../../internal/utils/getRoundedAmount';\nimport { isValidAmount } from '../../internal/utils/isValidAmount';\nimport {\n  background,\n  border,\n  cn,\n  color,\n  pressable,\n  text,\n} from '../../styles/theme';\nimport { TokenChip, TokenSelectDropdown } from '../../token';\nimport type { Token } from '../../token';\nimport type { SwapAmountInputReact } from '../types';\nimport { formatAmount } from '../utils/formatAmount';\nimport { useSwapContext } from './SwapProvider';\n\nexport function SwapAmountInput({\n  className,\n  delayMs = 1000,\n  label,\n  token,\n  type,\n  swappableTokens,\n}: SwapAmountInputReact) {\n  const { address, to, from, handleAmountChange } = useSwapContext();\n\n  const source = useValue(type === 'from' ? from : to);\n  const destination = useValue(type === 'from' ? to : from);\n  useEffect(() => {\n    if (token) {\n      source.setToken(token);\n    }\n  }, [token, source.setToken]);\n\n  const handleMaxButtonClick = useCallback(() => {\n    if (!source.balance) {\n      return;\n    }\n    source.setAmount(source.balance);\n    handleAmountChange(type, source.balance);\n  }, [source.balance, source.setAmount, handleAmountChange, type]);\n\n  const handleChange = useCallback(\n    (amount: string) => {\n      handleAmountChange(type, amount);\n    },\n    [handleAmountChange, type],\n  );\n\n  const handleSetToken = useCallback(\n    (token: Token) => {\n      source.setToken(token);\n      handleAmountChange(type, source.amount, token);\n    },\n    [source.amount, source.setToken, handleAmountChange, type],\n  );\n\n  // We are mocking the token selectors so I'm not able\n  // to test this since the components aren't actually rendering\n  const sourceTokenOptions = useMemo(() => {\n    return (\n      swappableTokens?.filter(\n        ({ symbol }: Token) => symbol !== destination.token?.symbol,\n      ) ?? []\n    );\n  }, [swappableTokens, destination.token]);\n\n  const hasInsufficientBalance =\n    type === 'from' && Number(source.balance) < Number(source.amount);\n\n  const formatUSD = (amount: string) => {\n    if (!amount || amount === '0') {\n      return null;\n    }\n    const roundedAmount = Number(getRoundedAmount(amount, 2));\n    return `~$${roundedAmount.toFixed(2)}`;\n  };\n\n  return (\n    <div\n      className={cn(\n        background.secondary,\n        border.radius,\n        'box-border flex h-[148px] w-full flex-col items-start p-4',\n        className,\n      )}\n      data-testid=\"ockSwapAmountInput_Container\"\n    >\n      <div className=\"flex w-full items-center justify-between\">\n        <span className={cn(text.label2, color.foregroundMuted)}>{label}</span>\n      </div>\n      <div className=\"flex w-full items-center justify-between\">\n        <TextInput\n          className={cn(\n            'mr-2 w-full border-[none] bg-transparent font-display text-[2.5rem]',\n            'leading-none outline-none',\n            hasInsufficientBalance && address ? color.error : color.foreground,\n          )}\n          placeholder=\"0.0\"\n          delayMs={delayMs}\n          value={formatAmount(source.amount)}\n          setValue={source.setAmount}\n          disabled={source.loading}\n          onChange={handleChange}\n          inputValidator={isValidAmount}\n        />\n        {sourceTokenOptions.length > 0 ? (\n          <TokenSelectDropdown\n            token={source.token}\n            setToken={handleSetToken}\n            options={sourceTokenOptions}\n          />\n        ) : (\n          source.token && (\n            <TokenChip className={pressable.inverse} token={source.token} />\n          )\n        )}\n      </div>\n      <div className=\"mt-4 flex w-full justify-between\">\n        <div className=\"flex items-center\">\n          <span className={cn(text.label2, color.foregroundMuted)}>\n            {formatUSD(source.amountUSD)}\n          </span>\n        </div>\n        <span className={cn(text.label2, color.foregroundMuted)}>{''}</span>\n        <div className=\"flex items-center\">\n          {source.balance && (\n            <span\n              className={cn(text.label2, color.foregroundMuted)}\n            >{`Balance: ${getRoundedAmount(source.balance, 8)}`}</span>\n          )}\n          {type === 'from' && address && (\n            <button\n              type=\"button\"\n              className=\"flex cursor-pointer items-center justify-center px-2 py-1\"\n              data-testid=\"ockSwapAmountInput_MaxButton\"\n              onClick={handleMaxButtonClick}\n            >\n              <span className={cn(text.label1, color.primary)}>Max</span>\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useCallback } from 'react';\nimport type { ChangeEvent } from 'react';\nimport { useDebounce } from '../hooks/useDebounce';\n\ntype TextInputReact = {\n  'aria-label'?: string;\n  className: string;\n  delayMs: number;\n  disabled?: boolean;\n  onBlur?: () => void;\n  onChange: (s: string) => void;\n  placeholder: string;\n  setValue: (s: string) => void;\n  value: string;\n  inputValidator?: (s: string) => boolean;\n};\n\nexport function TextInput({\n  'aria-label': ariaLabel,\n  className,\n  delayMs,\n  disabled = false,\n  onBlur,\n  onChange,\n  placeholder,\n  setValue,\n  value,\n  inputValidator = () => true,\n}: TextInputReact) {\n  const handleDebounce = useDebounce((value) => {\n    onChange(value);\n  }, delayMs);\n\n  const handleChange = useCallback(\n    (evt: ChangeEvent<HTMLInputElement>) => {\n      const value = evt.target.value;\n\n      if (inputValidator(value)) {\n        setValue(value);\n        if (delayMs > 0) {\n          handleDebounce(value);\n        } else {\n          onChange(value);\n        }\n      }\n    },\n    [onChange, handleDebounce, delayMs, setValue, inputValidator],\n  );\n\n  return (\n    <input\n      aria-label={ariaLabel}\n      data-testid=\"ockTextInput_Input\"\n      type=\"text\"\n      className={className}\n      placeholder={placeholder}\n      value={value}\n      onBlur={onBlur}\n      onChange={handleChange}\n      disabled={disabled}\n    />\n  );\n}\n","import { useLayoutEffect, useMemo, useRef } from 'react';\n\nexport const useDebounce = (\n  callback: (...args: any[]) => void,\n  delay: number,\n) => {\n  const callbackRef = useRef(callback);\n\n  useLayoutEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  let timer: number | NodeJS.Timeout;\n\n  const debounce = (\n    func: (...args: any[]) => void,\n    delayMs: number,\n    ...args: any[]\n  ) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func(...args);\n    }, delayMs);\n  };\n\n  return useMemo(() => {\n    return (...args: any) => {\n      return debounce(callbackRef.current, delay, ...args);\n    };\n  }, [delay]);\n};\n","import { useMemo } from 'react';\n\nexport function useValue<T>(object: T): T {\n  return useMemo(() => object, [object]);\n}\n","export function getRoundedAmount(balance: string, fractionDigits: number) {\n  if (balance === '0') {\n    return balance;\n  }\n  const parsedBalance = Number.parseFloat(balance);\n  const result = Number(parsedBalance)\n    ?.toFixed(fractionDigits)\n    .replace(/0+$/, '');\n\n  // checking if balance is more than 0 but less than fractionDigits\n  // without this prints \"0.\"\n  if (parsedBalance > 0 && Number.parseFloat(result) === 0) {\n    return '0';\n  }\n\n  return result;\n}\n","/**\n * checks that input is a number\n */\nexport function isValidAmount(value: string) {\n  if (value === '') {\n    return true;\n  }\n  const regex = /^[0-9]*\\.?[0-9]*$/;\n  return regex.test(value);\n}\n","import { useMemo } from 'react';\nimport { cn } from '../../styles/theme';\nimport type { TokenImageReact } from '../types';\nimport { getTokenImageColor } from '../utils/getTokenImageColor';\n\nexport function TokenImage({ className, size = 24, token }: TokenImageReact) {\n  const { image, name } = token;\n\n  const styles = useMemo(() => {\n    return {\n      image: {\n        width: `${size}px`,\n        height: `${size}px`,\n        minWidth: `${size}px`,\n        minHeight: `${size}px`,\n      },\n      placeholderImage: {\n        background: getTokenImageColor(name),\n        width: `${size}px`,\n        height: `${size}px`,\n        minWidth: `${size}px`,\n        minHeight: `${size}px`,\n      },\n    };\n  }, [size, name]);\n\n  if (!image) {\n    return (\n      <div\n        className={cn('overflow-hidden rounded-full', className)}\n        data-testid=\"ockTokenImage_NoImage\"\n        style={styles.image}\n      >\n        <div style={styles.placeholderImage} />\n      </div>\n    );\n  }\n\n  return (\n    <img\n      className={cn('overflow-hidden rounded-[50%]', className)}\n      alt=\"token-image\"\n      data-testid=\"ockTokenImage_Image\"\n      style={styles.image}\n      src={image}\n    />\n  );\n}\n","function hashStringToNumber(str: string) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n}\n\nfunction numberToRgb(hash: number) {\n  const h = Math.abs(hash) % 360;\n  const s = (Math.abs(hash >> 8) % 31) + 50;\n  const l = (Math.abs(hash >> 16) % 21) + 40;\n  return `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nexport function getTokenImageColor(str: string) {\n  const hash = hashStringToNumber(`${str}`);\n  return numberToRgb(hash);\n}\n","import { cn, pressable, text } from '../../styles/theme';\nimport { useTheme } from '../../useTheme';\nimport type { TokenChipReact } from '../types';\nimport { TokenImage } from './TokenImage';\n\n/**\n * Small button that display a given token symbol and image.\n *\n * WARNING: This component is under development and\n *          may change in the next few weeks.\n */\nexport function TokenChip({ token, onClick, className }: TokenChipReact) {\n  const componentTheme = useTheme();\n\n  return (\n    <button\n      type=\"button\"\n      data-testid=\"ockTokenChip_Button\"\n      className={cn(\n        componentTheme,\n        pressable.secondary,\n        pressable.shadow,\n        'flex w-fit shrink-0 items-center gap-2 rounded-lg py-1 pr-3 pl-1 ',\n        className,\n      )}\n      onClick={() => onClick?.(token)}\n    >\n      <TokenImage token={token} size={24} />\n      <span className={text.headline}>{token.symbol}</span>\n    </button>\n  );\n}\n","import { memo } from 'react';\nimport { cn, color, pressable, text } from '../../styles/theme';\nimport { useTheme } from '../../useTheme';\nimport type { TokenRowReact } from '../types';\nimport { formatAmount } from '../utils/formatAmount';\nimport { TokenImage } from './TokenImage';\n\nexport const TokenRow = memo(function TokenRow({\n  className,\n  token,\n  amount,\n  onClick,\n  hideImage,\n  hideSymbol,\n}: TokenRowReact) {\n  const componentTheme = useTheme();\n\n  return (\n    <button\n      data-testid=\"ockTokenRow_Container\"\n      type=\"button\"\n      className={cn(\n        componentTheme,\n        pressable.default,\n        'flex w-full items-center justify-between px-2 py-1',\n        className,\n      )}\n      onClick={() => onClick?.(token)}\n    >\n      <span className=\"flex items-center gap-3\">\n        {!hideImage && <TokenImage token={token} size={28} />}\n        <span className=\"flex flex-col items-start\">\n          <span className={cn(text.headline)}>{token.name}</span>\n          {!hideSymbol && (\n            <span className={cn(text.body, color.foregroundMuted)}>\n              {token.symbol}\n            </span>\n          )}\n        </span>\n      </span>\n      <span\n        data-testid=\"ockTokenRow_Amount\"\n        className={cn(text.body, color.foregroundMuted)}\n      >\n        {formatAmount(amount, {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: Number(amount) < 1 ? 5 : 2,\n        })}\n      </span>\n    </button>\n  );\n});\n","import type { FormatAmountOptions, FormatAmountResponse } from '../types';\n\n/**\n * Retrieves a list of tokens on Base.\n */\nexport function formatAmount(\n  amount: string | undefined,\n  options: FormatAmountOptions = {},\n): FormatAmountResponse {\n  if (amount === undefined) {\n    return '';\n  }\n\n  const { locale, minimumFractionDigits, maximumFractionDigits } = options;\n\n  return Number(amount).toLocaleString(locale, {\n    minimumFractionDigits,\n    maximumFractionDigits,\n  });\n}\n","import { useCallback, useState } from 'react';\nimport { TextInput } from '../../internal/components/TextInput';\nimport { closeSvg } from '../../internal/svg/closeSvg';\nimport { searchIconSvg } from '../../internal/svg/searchIconSvg';\nimport { cn, color, placeholder, pressable } from '../../styles/theme';\nimport { useTheme } from '../../useTheme';\nimport type { TokenSearchReact } from '../types';\n\nexport function TokenSearch({\n  className,\n  onChange,\n  delayMs = 200,\n}: TokenSearchReact) {\n  const componentTheme = useTheme();\n\n  const [value, setValue] = useState('');\n\n  const handleClear = useCallback(() => {\n    setValue('');\n    onChange('');\n  }, [onChange]);\n\n  return (\n    <div className=\"relative flex items-center\">\n      <div className=\"-translate-y-1/2 absolute top-1/2 left-4\">\n        {searchIconSvg}\n      </div>\n      <TextInput\n        className={cn(\n          componentTheme,\n          pressable.alternate,\n          color.foreground,\n          placeholder.default,\n          'w-full rounded-xl py-2 pr-5 pl-12 outline-none',\n          className,\n        )}\n        placeholder=\"Search for a token\"\n        value={value}\n        setValue={setValue}\n        onChange={onChange}\n        delayMs={delayMs}\n      />\n      {value && (\n        <button\n          type=\"button\"\n          data-testid=\"ockTextInput_Clear\"\n          className=\"-translate-y-1/2 absolute top-1/2 right-4\"\n          onClick={handleClear}\n        >\n          {closeSvg}\n        </button>\n      )}\n    </div>\n  );\n}\n","import { icon } from '../../styles/theme';\n\nexport const closeSvg = (\n  <svg\n    aria-label=\"ock-closeSvg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <title>Close SVG</title>\n    <path\n      d=\"M2.14921 1L1 2.1492L6.8508 8L1 13.8508L2.1492 15L8 9.1492L13.8508 15L15 13.8508L9.14921 8L15 2.1492L13.8508 1L8 6.8508L2.14921 1Z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { icon } from '../../styles/theme';\n\nexport const searchIconSvg = (\n  <svg\n    role=\"img\"\n    aria-label=\"ock-searchIconSvg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M16 14.23L11.89 10.12C12.59 9.09 13 7.84 13 6.5C13 2.91 10.09 0 6.5 0C2.91 0 0 2.91 0 6.5C0 10.09 2.91 13 6.5 13C7.84 13 9.09 12.59 10.13 11.89L14.23 16L16 14.23ZM6.5 10.5C4.29 10.5 2.5 8.71 2.5 6.5C2.5 4.29 4.29 2.5 6.5 2.5C8.71 2.5 10.5 4.29 10.5 6.5C10.5 8.71 8.71 10.5 6.5 10.5Z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { background, border, cn } from '../../styles/theme';\nimport { useTheme } from '../../useTheme';\nimport type { TokenSelectDropdownReact } from '../types';\nimport { TokenRow } from './TokenRow';\nimport { TokenSelectButton } from './TokenSelectButton';\n\nexport function TokenSelectDropdown({\n  options,\n  setToken,\n  token,\n}: TokenSelectDropdownReact) {\n  const componentTheme = useTheme();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleToggle = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen]);\n\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n\n  /* v8 ignore next 11 */\n  const handleBlur = useCallback((event: MouseEvent) => {\n    const isOutsideDropdown =\n      dropdownRef.current &&\n      !dropdownRef.current.contains(event.target as Node);\n    const isOutsideButton =\n      buttonRef.current && !buttonRef.current.contains(event.target as Node);\n\n    if (isOutsideDropdown && isOutsideButton) {\n      setIsOpen(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    // NOTE: this ensures that handleBlur doesn't get called on initial mount\n    //       We need to use non-div elements to properly handle onblur events\n    setTimeout(() => {\n      document.addEventListener('click', handleBlur);\n    }, 0);\n\n    return () => {\n      document.removeEventListener('click', handleBlur);\n    };\n  }, [handleBlur]);\n\n  return (\n    <div className=\"relative shrink-0\">\n      <TokenSelectButton\n        ref={buttonRef}\n        onClick={handleToggle}\n        isOpen={isOpen}\n        token={token}\n      />\n      {isOpen && (\n        <div\n          ref={dropdownRef}\n          data-testid=\"ockTokenSelectDropdown_List\"\n          className={cn(\n            componentTheme,\n            border.radius,\n            'absolute right-0 z-10 mt-1 flex max-h-80 w-[200px] flex-col overflow-y-hidden',\n            'ock-scrollbar',\n          )}\n        >\n          <div className=\"overflow-y-auto bg-[#ffffff]\">\n            {options.map((token) => (\n              <TokenRow\n                className={cn(background.inverse, 'px-4 py-2')}\n                key={token.name + token.address}\n                token={token}\n                onClick={() => {\n                  setToken(token);\n                  handleToggle();\n                }}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { type ForwardedRef, forwardRef } from 'react';\nimport { caretDownSvg } from '../../internal/svg/caretDownSvg';\nimport { caretUpSvg } from '../../internal/svg/caretUpSvg';\nimport { border, cn, color, line, pressable, text } from '../../styles/theme';\nimport type { TokenSelectButtonReact } from '../types';\nimport { TokenImage } from './TokenImage';\n\nexport const TokenSelectButton = forwardRef(function TokenSelectButton(\n  { onClick, token, isOpen, className }: TokenSelectButtonReact,\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  return (\n    <button\n      type=\"button\"\n      data-testid=\"ockTokenSelectButton_Button\"\n      className={cn(\n        pressable.default,\n        pressable.shadow,\n        border.radius,\n        line.default,\n        'flex w-fit items-center gap-2 px-3 py-1',\n        className,\n      )}\n      onClick={onClick}\n      ref={ref}\n    >\n      {token ? (\n        <>\n          <div className=\"w-4\">\n            <TokenImage token={token} size={16} />\n          </div>\n          <span\n            className={cn(text.headline, color.foreground)}\n            data-testid=\"ockTokenSelectButton_Symbol\"\n          >\n            {token.symbol}\n          </span>\n        </>\n      ) : (\n        <span className={text.headline}>Select token</span>\n      )}\n      <div className=\"relative flex items-center justify-center\">\n        <div className=\"absolute top-0 left-0 h-4 w-4\" />\n        {isOpen ? caretUpSvg : caretDownSvg}\n      </div>\n    </button>\n  );\n});\n","import { icon } from '../../styles/theme';\n\nexport const caretDownSvg = (\n  <svg\n    data-testid=\"ock-caretDownSvg\"\n    role=\"img\"\n    aria-label=\"ock-caretDownSvg\"\n    width=\"16\"\n    height=\"17\"\n    viewBox=\"0 0 16 17\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M12.95 4.85999L8.00001 9.80999L3.05001 4.85999L1.64001 6.27999L8.00001 12.64L14.36 6.27999L12.95 4.85999Z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { icon } from '../../styles/theme';\n\nexport const caretUpSvg = (\n  <svg\n    data-testid=\"ock-caretUpSvg\"\n    role=\"img\"\n    aria-label=\"ock-caretUpSvg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M3.05329 10.9866L7.99996 6.03997L12.9466 10.9866L14.1266 9.80663L7.99996 3.67997L1.87329 9.80663L3.05329 10.9866Z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { background, cn, text } from '../../styles/theme';\nimport type { Token, TokenSelectModalReact } from '../types';\nimport { TokenChip } from './TokenChip';\nimport { TokenRow } from './TokenRow';\nimport { TokenSearch } from './TokenSearch';\nimport { TokenSelectButton } from './TokenSelectButton';\n\nconst backdropStyle = {\n  background: 'rgba(226, 232, 240, 0.5)',\n};\n\ntype TokenSelectModalInnerReact = {\n  setToken: (t: Token) => void;\n  closeModal: () => void;\n  options: Token[];\n};\n\nfunction TokenSelectModalInner({\n  setToken,\n  closeModal,\n  options,\n}: TokenSelectModalInnerReact) {\n  const [filteredTokens, setFilteredTokens] = useState(options);\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  const handleClick = useCallback(\n    (token: Token) => {\n      setToken(token);\n      closeModal();\n    },\n    [setToken, closeModal],\n  );\n\n  const handleChange = useCallback(\n    (text: string) => {\n      setFilteredTokens(\n        options.filter(({ address, name, symbol }) => {\n          return (\n            address.toLowerCase().startsWith(text) ||\n            name.toLowerCase().includes(text) ||\n            symbol.toLowerCase().includes(text)\n          );\n        }),\n      );\n    },\n    [options],\n  );\n\n  /* v8 ignore next 10 */\n  const handleBlur = useCallback(\n    (event: MouseEvent) => {\n      const isOutsideModal =\n        modalRef.current && !modalRef.current.contains(event.target as Node);\n      if (isOutsideModal) {\n        closeModal();\n      }\n    },\n    [closeModal],\n  );\n\n  useEffect(() => {\n    // NOTE: this ensures that handleBlur doesn't get called on initial mount\n    //       We need to use non-div elements to properly handle onblur events\n    setTimeout(() => {\n      document.addEventListener('click', handleBlur);\n    }, 0);\n    return () => {\n      document.removeEventListener('click', handleBlur);\n    };\n  }, [handleBlur]);\n\n  return (\n    <div\n      data-testid=\"ockTokenSelectModal_Inner\"\n      className=\"fixed top-0 left-0 z-50 flex h-full w-full items-center justify-center\"\n      style={backdropStyle}\n    >\n      <div\n        ref={modalRef}\n        className={cn(\n          background.default,\n          'flex w-[475px] flex-col gap-3 rounded-3xl p-6',\n        )}\n      >\n        <div className=\"flex items-center justify-between\">\n          <span className={text.title3}>Select a token</span>\n          <button\n            data-testid=\"TokenSelectModal_CloseButton\"\n            type=\"button\"\n            onClick={closeModal}\n          >\n            <svg\n              role=\"img\"\n              aria-label=\"ock-close-icon\"\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M2.3352 1L1 2.33521L6.66479 8L1 13.6648L2.3352 15L8 9.33521L13.6648 15L15 13.6648L9.33521 8L15 2.33521L13.6648 1L8 6.6648L2.3352 1Z\"\n                fill=\"#0A0B0D\"\n              />\n            </svg>\n          </button>\n        </div>\n        <TokenSearch onChange={handleChange} delayMs={0} />\n        {filteredTokens.length > 0 && (\n          <div className=\"flex flex-wrap gap-2\">\n            {filteredTokens.slice(0, 4).map((token, idx) => (\n              <TokenChip\n                key={`${token.name}${idx}`}\n                className=\"shadow-none\"\n                token={token}\n                onClick={handleClick}\n              />\n            ))}\n          </div>\n        )}\n        {filteredTokens.length > 0 ? (\n          <div className=\"mt-3\">\n            <div className=\"text-black text-body\">Tokens</div>\n            <div\n              className=\"ock-scrollbar overflow-y-auto\"\n              style={{ minHeight: '300px', height: '300px' }}\n            >\n              {filteredTokens.map((token, idx) => (\n                <TokenRow\n                  key={`${token.name}${idx}`}\n                  token={token}\n                  onClick={handleClick}\n                />\n              ))}\n            </div>\n          </div>\n        ) : (\n          <div\n            data-testid=\"ockTokenSelectModal_NoTokens\"\n            className=\"text-black text-body\"\n            style={{ minHeight: '368px' }}\n          >\n            No tokens found\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport function TokenSelectModal({\n  options,\n  setToken,\n  token,\n}: TokenSelectModalReact) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const closeModal = useCallback(() => {\n    setIsOpen(false);\n  }, []);\n\n  const openModal = useCallback(() => {\n    setIsOpen(true);\n  }, []);\n\n  return (\n    <>\n      <TokenSelectButton onClick={openModal} isOpen={isOpen} token={token} />\n      {isOpen && (\n        <TokenSelectModalInner\n          options={options}\n          setToken={setToken}\n          closeModal={closeModal}\n        />\n      )}\n    </>\n  );\n}\n","export function formatAmount(num: string): string {\n  // If the number is not in scientific notation return it as it is\n  if (!/\\d+\\.?\\d*e[+-]*\\d+/i.test(num)) {\n    return num;\n  }\n\n  // Parse into coefficient and exponent\n  const [coefficient, exponent] = num.toLowerCase().split('e');\n  const exp = Number.parseInt(exponent);\n\n  // Split coefficient into integer and decimal parts\n  const [intPart, decPart = ''] = coefficient.split('.');\n\n  // Combine integer and decimal parts\n  const fullNumber = intPart + decPart;\n\n  // Calculate the new decimal point position\n  const newPosition = intPart.length + exp;\n\n  if (newPosition <= 0) {\n    // If the new position is less than or equal to 0, we need to add leading zeros\n    return `0.${'0'.repeat(Math.abs(newPosition))}${fullNumber}`;\n  }\n\n  if (newPosition >= fullNumber.length) {\n    // If the new position is greater than the number length, we need to add trailing zeros\n    return fullNumber + '0'.repeat(newPosition - fullNumber.length);\n  }\n\n  // Otherwise, we insert the decimal point at the new position\n  return `${fullNumber.slice(0, newPosition)}.${fullNumber.slice(newPosition)}`;\n}\n","import {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { base } from 'viem/chains';\nimport { useAccount, useConfig, useSendTransaction } from 'wagmi';\nimport { useSwitchChain } from 'wagmi';\nimport { useSendCalls } from 'wagmi/experimental';\nimport { buildSwapTransaction } from '../../api/buildSwapTransaction';\nimport { getSwapQuote } from '../../api/getSwapQuote';\nimport { useCapabilitiesSafe } from '../../internal/hooks/useCapabilitiesSafe';\nimport { useValue } from '../../internal/hooks/useValue';\nimport { formatTokenAmount } from '../../internal/utils/formatTokenAmount';\nimport type { Token } from '../../token';\nimport { GENERIC_ERROR_MESSAGE } from '../../transaction/constants';\nimport { isUserRejectedRequestError } from '../../transaction/utils/isUserRejectedRequestError';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport { FALLBACK_DEFAULT_MAX_SLIPPAGE } from '../constants';\nimport { useAwaitCalls } from '../hooks/useAwaitCalls';\nimport { useFromTo } from '../hooks/useFromTo';\nimport { useLifecycleStatus } from '../hooks/useLifecycleStatus';\nimport { useResetInputs } from '../hooks/useResetInputs';\nimport type { SwapContextType, SwapProviderReact } from '../types';\nimport { isSwapError } from '../utils/isSwapError';\nimport { processSwapTransaction } from '../utils/processSwapTransaction';\n\nconst emptyContext = {} as SwapContextType;\n\nexport const SwapContext = createContext<SwapContextType>(emptyContext);\n\nexport function useSwapContext() {\n  const context = useContext(SwapContext);\n  if (context === emptyContext) {\n    throw new Error('useSwapContext must be used within a Swap component');\n  }\n  return context;\n}\n\nexport function SwapProvider({\n  children,\n  config = {\n    maxSlippage: FALLBACK_DEFAULT_MAX_SLIPPAGE,\n  },\n  experimental,\n  isSponsored,\n  onError,\n  onStatus,\n  onSuccess,\n}: SwapProviderReact) {\n  const {\n    config: { paymaster } = { paymaster: undefined },\n  } = useOnchainKit();\n  const { address, chainId } = useAccount();\n  const { switchChainAsync } = useSwitchChain();\n  // Feature flags\n  const { useAggregator } = experimental;\n  // Core Hooks\n  const accountConfig = useConfig();\n\n  const walletCapabilities = useCapabilitiesSafe({\n    chainId: base.id,\n  }); // Swap is only available on Base\n  const [lifecycleStatus, updateLifecycleStatus] = useLifecycleStatus({\n    statusName: 'init',\n    statusData: {\n      isMissingRequiredField: true,\n      maxSlippage: config.maxSlippage,\n    },\n  }); // Component lifecycle\n\n  const [isToastVisible, setIsToastVisible] = useState(false);\n  const [transactionHash, setTransactionHash] = useState('');\n  const [hasHandledSuccess, setHasHandledSuccess] = useState(false);\n  const { from, to } = useFromTo(address);\n  const { sendTransactionAsync } = useSendTransaction(); // Sending the transaction (and approval, if applicable)\n  const { sendCallsAsync } = useSendCalls(); // Atomic Batch transactions (and approval, if applicable)\n\n  // Refreshes balances and inputs post-swap\n  const resetInputs = useResetInputs({ from, to });\n  // For batched transactions, listens to and awaits calls from the Wallet server\n  const awaitCallsStatus = useAwaitCalls({\n    accountConfig,\n    lifecycleStatus,\n    updateLifecycleStatus,\n  });\n\n  // Component lifecycle emitters\n  useEffect(() => {\n    // Error\n    if (lifecycleStatus.statusName === 'error') {\n      onError?.(lifecycleStatus.statusData);\n    }\n    // Success\n    if (lifecycleStatus.statusName === 'success') {\n      onSuccess?.(lifecycleStatus.statusData.transactionReceipt);\n      setTransactionHash(\n        lifecycleStatus.statusData.transactionReceipt?.transactionHash,\n      );\n      setHasHandledSuccess(true);\n      setIsToastVisible(true);\n    }\n    // Emit Status\n    onStatus?.(lifecycleStatus);\n  }, [\n    onError,\n    onStatus,\n    onSuccess,\n    lifecycleStatus,\n    lifecycleStatus.statusData, // Keep statusData, so that the effect runs when it changes\n    lifecycleStatus.statusName, // Keep statusName, so that the effect runs when it changes\n  ]);\n\n  useEffect(() => {\n    // Reset inputs after status reset. `resetInputs` is dependent\n    // on 'from' and 'to' so moved to separate useEffect to\n    // prevents multiple calls to `onStatus`\n    if (lifecycleStatus.statusName === 'init' && hasHandledSuccess) {\n      setHasHandledSuccess(false);\n      resetInputs();\n    }\n  }, [hasHandledSuccess, lifecycleStatus.statusName, resetInputs]);\n\n  useEffect(() => {\n    // For batched transactions, `transactionApproved` will contain the calls ID\n    // We'll use the `useAwaitCalls` hook to listen to the call status from the wallet server\n    // This will update the lifecycle status to `success` once the calls are confirmed\n    if (\n      lifecycleStatus.statusName === 'transactionApproved' &&\n      lifecycleStatus.statusData.transactionType === 'Batched'\n    ) {\n      awaitCallsStatus();\n    }\n  }, [\n    awaitCallsStatus,\n    lifecycleStatus,\n    lifecycleStatus.statusData,\n    lifecycleStatus.statusName,\n  ]);\n\n  useEffect(() => {\n    // Reset status to init after success has been handled\n    if (lifecycleStatus.statusName === 'success' && hasHandledSuccess) {\n      updateLifecycleStatus({\n        statusName: 'init',\n        statusData: {\n          isMissingRequiredField: true,\n          maxSlippage: config.maxSlippage,\n        },\n      });\n    }\n  }, [\n    config.maxSlippage,\n    hasHandledSuccess,\n    lifecycleStatus.statusName,\n    updateLifecycleStatus,\n  ]);\n\n  const handleToggle = useCallback(() => {\n    from.setAmount(to.amount);\n    to.setAmount(from.amount);\n    from.setToken(to.token);\n    to.setToken(from.token);\n\n    updateLifecycleStatus({\n      statusName: 'amountChange',\n      statusData: {\n        amountFrom: from.amount,\n        amountTo: to.amount,\n        tokenFrom: from.token,\n        tokenTo: to.token,\n        // token is missing\n        isMissingRequiredField:\n          !from.token || !to.token || !from.amount || !to.amount,\n      },\n    });\n  }, [from, to, updateLifecycleStatus]);\n\n  const handleAmountChange = useCallback(\n    async (\n      type: 'from' | 'to',\n      amount: string,\n      sToken?: Token,\n      dToken?: Token,\n      // biome-ignore lint/complexity/noExcessiveCognitiveComplexity: TODO Refactor this component\n    ) => {\n      const source = type === 'from' ? from : to;\n      const destination = type === 'from' ? to : from;\n\n      source.token = sToken ?? source.token;\n      destination.token = dToken ?? destination.token;\n\n      // if token is missing alert user via isMissingRequiredField\n      if (source.token === undefined || destination.token === undefined) {\n        updateLifecycleStatus({\n          statusName: 'amountChange',\n          statusData: {\n            amountFrom: from.amount,\n            amountTo: to.amount,\n            tokenFrom: from.token,\n            tokenTo: to.token,\n            // token is missing\n            isMissingRequiredField: true,\n          },\n        });\n        return;\n      }\n      if (amount === '' || amount === '.' || Number.parseFloat(amount) === 0) {\n        destination.setAmount('');\n        destination.setAmountUSD('');\n        source.setAmountUSD('');\n        return;\n      }\n\n      // When toAmount changes we fetch quote for fromAmount\n      // so set isFromQuoteLoading to true\n      destination.setLoading(true);\n      updateLifecycleStatus({\n        statusName: 'amountChange',\n        statusData: {\n          // when fetching quote, the previous\n          // amount is irrelevant\n          amountFrom: type === 'from' ? amount : '',\n          amountTo: type === 'to' ? amount : '',\n          tokenFrom: from.token,\n          tokenTo: to.token,\n          // when fetching quote, the destination\n          // amount is missing\n          isMissingRequiredField: true,\n        },\n      });\n\n      try {\n        const maxSlippage = lifecycleStatus.statusData.maxSlippage;\n        const response = await getSwapQuote({\n          amount,\n          amountReference: 'from',\n          from: source.token,\n          maxSlippage: String(maxSlippage),\n          to: destination.token,\n          useAggregator,\n        });\n        // If request resolves to error response set the quoteError\n        // property of error state to the SwapError response\n        if (isSwapError(response)) {\n          updateLifecycleStatus({\n            statusName: 'error',\n            statusData: {\n              code: response.code,\n              error: response.error,\n              message: '',\n            },\n          });\n          return;\n        }\n        const formattedAmount = formatTokenAmount(\n          response.toAmount,\n          response.to.decimals,\n        );\n        destination.setAmountUSD(response.toAmountUSD);\n        destination.setAmount(formattedAmount);\n        source.setAmountUSD(response.fromAmountUSD);\n        updateLifecycleStatus({\n          statusName: 'amountChange',\n          statusData: {\n            amountFrom: type === 'from' ? amount : formattedAmount,\n            amountTo: type === 'to' ? amount : formattedAmount,\n            tokenFrom: from.token,\n            tokenTo: to.token,\n            // if quote was fetched successfully, we\n            // have all required fields\n            isMissingRequiredField: !formattedAmount,\n          },\n        });\n      } catch (err) {\n        updateLifecycleStatus({\n          statusName: 'error',\n          statusData: {\n            code: 'TmSPc01', // Transaction module SwapProvider component 01 error\n            error: JSON.stringify(err),\n            message: '',\n          },\n        });\n      } finally {\n        // reset loading state when quote request resolves\n        destination.setLoading(false);\n      }\n    },\n    [from, to, lifecycleStatus, updateLifecycleStatus, useAggregator],\n  );\n\n  // biome-ignore lint/complexity/noExcessiveCognitiveComplexity: TODO Refactor this component\n  const handleSubmit = useCallback(async () => {\n    if (!address || !from.token || !to.token || !from.amount) {\n      return;\n    }\n\n    try {\n      const maxSlippage = lifecycleStatus.statusData.maxSlippage;\n      const response = await buildSwapTransaction({\n        amount: from.amount,\n        fromAddress: address,\n        from: from.token,\n        maxSlippage: String(maxSlippage),\n        to: to.token,\n        useAggregator,\n      });\n      if (isSwapError(response)) {\n        updateLifecycleStatus({\n          statusName: 'error',\n          statusData: {\n            code: response.code,\n            error: response.error,\n            message: response.message,\n          },\n        });\n        return;\n      }\n      await processSwapTransaction({\n        chainId,\n        config: accountConfig,\n        isSponsored,\n        paymaster: paymaster || '',\n        sendCallsAsync,\n        sendTransactionAsync,\n        swapTransaction: response,\n        switchChainAsync,\n        updateLifecycleStatus,\n        useAggregator,\n        walletCapabilities,\n      });\n    } catch (err) {\n      const errorMessage = isUserRejectedRequestError(err)\n        ? 'Request denied.'\n        : GENERIC_ERROR_MESSAGE;\n      updateLifecycleStatus({\n        statusName: 'error',\n        statusData: {\n          code: 'TmSPc02', // Transaction module SwapProvider component 02 error\n          error: JSON.stringify(err),\n          message: errorMessage,\n        },\n      });\n    }\n  }, [\n    accountConfig,\n    address,\n    chainId,\n    from.amount,\n    from.token,\n    isSponsored,\n    lifecycleStatus,\n    paymaster,\n    sendCallsAsync,\n    sendTransactionAsync,\n    switchChainAsync,\n    to.token,\n    updateLifecycleStatus,\n    useAggregator,\n    walletCapabilities,\n  ]);\n\n  const value = useValue({\n    address,\n    config,\n    from,\n    handleAmountChange,\n    handleToggle,\n    handleSubmit,\n    lifecycleStatus,\n    updateLifecycleStatus,\n    to,\n    isToastVisible,\n    setIsToastVisible,\n    setTransactionHash,\n    transactionHash,\n  });\n\n  return <SwapContext.Provider value={value}>{children}</SwapContext.Provider>;\n}\n","export const CDP_LIST_SWAP_ASSETS = 'cdp_listSwapAssets';\nexport const CDP_GET_SWAP_QUOTE = 'cdp_getSwapQuote';\nexport const CDP_GET_SWAP_TRADE = 'cdp_getSwapTrade';\n","export const version = '0.35.2';\n","import { version } from '../version';\n\nexport const POST_METHOD = 'POST';\nexport const JSON_HEADERS = {\n  'Content-Type': 'application/json',\n  'OnchainKit-Version': version,\n};\nexport const JSON_RPC_VERSION = '2.0';\n","import { ONCHAIN_KIT_CONFIG } from '../OnchainKitConfig';\n\n/**\n * Access the RPC URL for OnchainKit.\n * Defaults to using Coinbase Developer Platform if a RPC URL is not provided.\n */\nexport const getRPCUrl = () => {\n  if (!ONCHAIN_KIT_CONFIG.rpcUrl && !ONCHAIN_KIT_CONFIG.apiKey) {\n    throw new Error(\n      'API Key Unset: You can use the Coinbase Developer Platform RPC by providing an API key in `OnchainKitProvider` or by manually calling `setOnchainKitConfig`: https://portal.cdp.coinbase.com/products/onchainkit',\n    );\n  }\n  return (\n    ONCHAIN_KIT_CONFIG.rpcUrl ||\n    `https://api.developer.coinbase.com/rpc/v1/${ONCHAIN_KIT_CONFIG.chain.name.replace(' ', '-').toLowerCase()}/${ONCHAIN_KIT_CONFIG.apiKey}`\n  );\n};\n","import { JSON_HEADERS, JSON_RPC_VERSION, POST_METHOD } from './constants';\nimport { getRPCUrl } from './getRPCUrl';\n\nexport type JSONRPCError = {\n  code: number;\n  message: string;\n};\n\nexport type JSONRPCRequest<T> = {\n  id: number;\n  jsonrpc: string;\n  method: string;\n  params: T[];\n};\n\nexport type JSONRPCResult<T> = {\n  error?: JSONRPCError;\n  id: number;\n  jsonrpc: string;\n  result: T;\n};\n\n/**\n * Builds a JSON-RPC request body.\n *\n * @param method - The method name.\n * @param params - The parameters for the method.\n * @returns The JSON-RPC request body.\n * @template T - The type of the parameters.\n */\nexport function buildRequestBody<T>(\n  method: string,\n  params: T[],\n): JSONRPCRequest<T> {\n  return {\n    id: 1,\n    jsonrpc: JSON_RPC_VERSION,\n    method: method,\n    params: params,\n  };\n}\n\n/**\n * Sends a JSON-RPC request to configured RPC URL.\n * Defaults to using the Coinbase Developer Platform Node.\n *\n * @param body - The JSON-RPC request body.\n * @returns A promise that resolves to the JSON-RPC response.\n * @throws If an error occurs while sending the request.\n */\nexport async function sendRequest<T, V>(\n  method: string,\n  params: T[],\n): Promise<JSONRPCResult<V>> {\n  try {\n    const body = buildRequestBody<T>(method, params);\n    const url = getRPCUrl();\n    const response = await fetch(url, {\n      body: JSON.stringify(body),\n      headers: JSON_HEADERS,\n      method: POST_METHOD,\n    });\n    const data: JSONRPCResult<V> = await response.json();\n    return data;\n  } catch (error) {\n    console.log(\n      `sendRequest: error sending request: ${(error as Error).message}`,\n    );\n    throw error;\n  }\n}\n","import {\n  GENERAL_SWAP_BALANCE_ERROR_CODE,\n  GENERAL_SWAP_ERROR_CODE,\n  GENERAL_SWAP_QUOTE_ERROR_CODE,\n  LOW_LIQUIDITY_ERROR_CODE,\n  TOO_MANY_REQUESTS_ERROR_CODE,\n  UNCAUGHT_SWAP_ERROR_CODE,\n  UNCAUGHT_SWAP_QUOTE_ERROR_CODE,\n} from '../constants';\n\nexport function getSwapErrorCode(\n  context: 'swap' | 'quote' | 'balance' | 'uncaught-swap' | 'uncaught-quote',\n  errorCode?: number,\n) {\n  // TODO: handle additional error codes\n  if (errorCode === -32001) {\n    return TOO_MANY_REQUESTS_ERROR_CODE;\n  }\n\n  if (errorCode === -32602) {\n    return LOW_LIQUIDITY_ERROR_CODE;\n  }\n\n  if (context === 'uncaught-swap') {\n    return UNCAUGHT_SWAP_ERROR_CODE;\n  }\n\n  if (context === 'uncaught-quote') {\n    return UNCAUGHT_SWAP_QUOTE_ERROR_CODE;\n  }\n\n  if (context === 'quote') {\n    return GENERAL_SWAP_QUOTE_ERROR_CODE;\n  }\n\n  if (context === 'balance') {\n    return GENERAL_SWAP_BALANCE_ERROR_CODE;\n  }\n\n  return GENERAL_SWAP_ERROR_CODE;\n}\n","export function fromReadableAmount(amount: string, decimals: number): string {\n  const [wholePart, fractionalPart = ''] = amount.split('.');\n  const paddedFractionalPart = fractionalPart.padEnd(decimals, '0');\n  const trimmedFractionalPart = paddedFractionalPart.slice(0, decimals);\n  return (\n    BigInt(wholePart + trimmedFractionalPart) *\n    BigInt(10) ** BigInt(decimals - trimmedFractionalPart.length)\n  ).toString();\n}\n","export function toReadableAmount(amount: string, decimals: number): string {\n  // Check if the amount contains a decimal point\n  if (amount.includes('.')) {\n    const [wholePart, fractionalPart] = amount.split('.');\n    const paddedFractionalPart = fractionalPart.padEnd(decimals, '0');\n    const combinedAmount = wholePart + paddedFractionalPart;\n    return combinedAmount;\n  }\n\n  // If no decimal point, proceed with the original logic\n  const bigIntAmount = BigInt(amount);\n  const divisor = BigInt(10) ** BigInt(decimals);\n  const wholePart = (bigIntAmount / divisor).toString();\n  const fractionalPart = (bigIntAmount % divisor)\n    .toString()\n    .padStart(decimals, '0');\n  const trimmedFractionalPart = fractionalPart.replace(/0+$/, '');\n  return trimmedFractionalPart\n    ? `${wholePart}.${trimmedFractionalPart}`\n    : wholePart;\n}\n","import { fromReadableAmount } from './fromReadableAmount';\nimport { toReadableAmount } from './toReadableAmount';\n\n/**\n * Formats an amount according to the decimals. Defaults to 18 decimals for ERC-20s.\n */\nexport function formatDecimals(\n  amount: string,\n  inputInDecimals = true,\n  decimals = 18,\n): string {\n  let result: string;\n\n  if (inputInDecimals) {\n    // If input is already in decimals, convert to readable amount\n    result = toReadableAmount(amount, decimals);\n  } else {\n    // If input is not in decimals, convert from readable amount\n    result = fromReadableAmount(amount, decimals);\n  }\n\n  return result;\n}\n","import { formatDecimals } from '../../swap/utils/formatDecimals';\nimport type {\n  APIError,\n  BuildSwapTransactionParams,\n  GetAPIParamsForToken,\n  SwapAPIParams,\n} from '../types';\n\n/**\n * Converts parameters with `Token` to ones with address.\n *\n * Additionally adds default values for optional request fields.\n */\nexport function getAPIParamsForToken(\n  params: GetAPIParamsForToken,\n): SwapAPIParams | APIError {\n  const { from, to, amount, amountReference, isAmountInDecimals } = params;\n  const { fromAddress } = params as BuildSwapTransactionParams;\n  const decimals = amountReference === 'from' ? from.decimals : to.decimals;\n\n  // Input validation\n  if (typeof amount !== 'string' || amount.trim() === '') {\n    return {\n      code: 'INVALID_INPUT',\n      error: 'Invalid input: amount must be a non-empty string',\n      message: '',\n    };\n  }\n  if (!Number.isInteger(decimals) || decimals < 0) {\n    return {\n      code: 'INVALID_INPUT',\n      error: 'Invalid input: decimals must be a non-negative integer',\n      message: '',\n    };\n  }\n  if (!/^(?:0|[1-9]\\d*|\\.\\d+)(?:\\.\\d*)?$/.test(amount)) {\n    return {\n      code: 'INVALID_INPUT',\n      error: 'Invalid input: amount must be a non-negative number string',\n      message: '',\n    };\n  }\n\n  return {\n    fromAddress: fromAddress,\n    from: from.address || 'ETH',\n    to: to.address || 'ETH',\n    amount: isAmountInDecimals\n      ? amount\n      : formatDecimals(amount, false, decimals),\n    amountReference: amountReference || 'from',\n  };\n}\n","import type { Address, Hex } from 'viem';\nimport type { Transaction } from '../../swap/types';\nimport type { RawTransactionData } from '../types';\n\n/**\n * Constructs an unsigned transaction.\n *\n * A transaction is a message sent by an Account requesting\n * to perform an action on the Ethereum blockchain.\n *\n * Transactions can be used to transfer Ether between accounts,\n * execute smart contract code, deploy smart contracts, etc.\n */\nexport function getSwapTransaction(\n  rawTx: RawTransactionData,\n  chainId: string,\n): Transaction {\n  const { data, gas, to, value } = rawTx;\n  return {\n    chainId: Number(chainId),\n    data: data as Hex,\n    gas: BigInt(gas),\n    to: to as Address,\n    value: BigInt(value),\n  };\n}\n","import { CDP_GET_SWAP_TRADE } from '../network/definitions/swap';\nimport { sendRequest } from '../network/request';\nimport type { SwapAPIResponse } from '../swap/types';\nimport { getSwapErrorCode } from '../swap/utils/getSwapErrorCode';\nimport type {\n  APIError,\n  BuildSwapTransactionParams,\n  BuildSwapTransactionResponse,\n  SwapAPIParams,\n} from './types';\nimport { getAPIParamsForToken } from './utils/getAPIParamsForToken';\nimport { getSwapTransaction } from './utils/getSwapTransaction';\n\n/**\n * Retrieves an unsigned transaction for a swap from Token A to Token B.\n */\nexport async function buildSwapTransaction(\n  params: BuildSwapTransactionParams,\n): Promise<BuildSwapTransactionResponse> {\n  // Default parameters\n  const defaultParams = {\n    amountReference: 'from',\n    isAmountInDecimals: false,\n  };\n\n  const apiParamsOrError = getAPIParamsForToken({\n    ...defaultParams,\n    ...params,\n  });\n  if ((apiParamsOrError as APIError).error) {\n    return apiParamsOrError as APIError;\n  }\n  let apiParams = apiParamsOrError as SwapAPIParams;\n\n  if (!params.useAggregator) {\n    apiParams = {\n      v2Enabled: true,\n      ...apiParams,\n    };\n  }\n  if (params.maxSlippage) {\n    let slippagePercentage = params.maxSlippage;\n    // Adjust slippage for V1 API (aggregator)\n    // V1 expects slippage in tenths of a percent (e.g., 30 = 3%)\n    if (params.useAggregator) {\n      slippagePercentage = (Number(params.maxSlippage) * 10).toString();\n    }\n    apiParams = {\n      slippagePercentage,\n      ...apiParams,\n    };\n  }\n\n  try {\n    const res = await sendRequest<SwapAPIParams, SwapAPIResponse>(\n      CDP_GET_SWAP_TRADE,\n      [apiParams],\n    );\n    if (res.error) {\n      return {\n        code: getSwapErrorCode('swap', res.error?.code),\n        error: res.error.message,\n        message: '',\n      };\n    }\n\n    const trade = res.result;\n    return {\n      approveTransaction: trade.approveTx\n        ? getSwapTransaction(trade.approveTx, trade.chainId)\n        : undefined,\n      fee: trade.fee,\n      quote: trade.quote,\n      transaction: getSwapTransaction(trade.tx, trade.chainId),\n      warning: trade.quote.warning,\n    };\n  } catch (_error) {\n    return {\n      code: getSwapErrorCode('uncaught-swap'),\n      error: 'Something went wrong',\n      message: '',\n    };\n  }\n}\n","import { CDP_GET_SWAP_QUOTE } from '../network/definitions/swap';\nimport { sendRequest } from '../network/request';\nimport type { SwapQuote } from '../swap/types';\nimport { getSwapErrorCode } from '../swap/utils/getSwapErrorCode';\nimport type {\n  APIError,\n  GetSwapQuoteParams,\n  GetSwapQuoteResponse,\n  SwapAPIParams,\n} from './types';\nimport { getAPIParamsForToken } from './utils/getAPIParamsForToken';\n\n/**\n * Retrieves a quote for a swap from Token A to Token B.\n */\nexport async function getSwapQuote(\n  params: GetSwapQuoteParams,\n): Promise<GetSwapQuoteResponse> {\n  // Default parameters\n  const defaultParams = {\n    amountReference: 'from',\n    isAmountInDecimals: false,\n  };\n  const apiParamsOrError = getAPIParamsForToken({\n    ...defaultParams,\n    ...params,\n  });\n  if ((apiParamsOrError as APIError).error) {\n    return apiParamsOrError as APIError;\n  }\n  let apiParams = apiParamsOrError as SwapAPIParams;\n\n  if (!params.useAggregator) {\n    apiParams = {\n      v2Enabled: true,\n      ...apiParams,\n    };\n  }\n  if (params.maxSlippage) {\n    let slippagePercentage = params.maxSlippage;\n    // Adjust slippage for V1 API (aggregator)\n    // V1 expects slippage in tenths of a percent (e.g., 30 = 3%)\n    if (params.useAggregator) {\n      slippagePercentage = (Number(params.maxSlippage) * 10).toString();\n    }\n    apiParams = {\n      slippagePercentage: slippagePercentage,\n      ...apiParams,\n    };\n  }\n\n  try {\n    const res = await sendRequest<SwapAPIParams, SwapQuote>(\n      CDP_GET_SWAP_QUOTE,\n      [apiParams],\n    );\n    if (res.error) {\n      return {\n        code: getSwapErrorCode('quote', res.error?.code),\n        error: res.error.message,\n        message: '',\n      };\n    }\n    return res.result;\n  } catch (_error) {\n    return {\n      code: getSwapErrorCode('uncaught-quote'),\n      error: 'Something went wrong',\n      message: '',\n    };\n  }\n}\n","import { useMemo } from 'react';\nimport type { WalletCapabilities } from 'viem';\nimport { useAccount } from 'wagmi';\nimport { useCapabilities } from 'wagmi/experimental';\nimport type { UseCapabilitiesSafeParams } from '../../types';\n\nexport function useCapabilitiesSafe({\n  chainId,\n}: UseCapabilitiesSafeParams): WalletCapabilities {\n  const { isConnected } = useAccount();\n\n  const { data: capabilities, error } = useCapabilities({\n    query: { enabled: isConnected },\n  });\n\n  return useMemo(() => {\n    if (error || !capabilities || !capabilities[chainId]) {\n      return {};\n    }\n\n    return capabilities[chainId];\n  }, [capabilities, chainId, error]);\n}\n","export function formatTokenAmount(amount: string, decimals: number) {\n  // Convert the string amount to a number using decimals value\n  const numberAmount = Number(amount) / 10 ** decimals;\n  return numberAmount.toString();\n}\n","export const GENERIC_ERROR_MESSAGE = 'Something went wrong. Please try again.';\n// Most likely EOAexport const genericErrorMessage = 'Something went wrong. Please try again.';\nexport const METHOD_NOT_SUPPORTED_ERROR_SUBSTRING =\n  'this request method is not supported';\nexport const SEND_CALLS_NOT_SUPPORTED_ERROR = 'SEND_CALLS_NOT_SUPPORTED_ERROR';\nexport const TRANSACTION_TYPE_CALLS = 'TRANSACTION_TYPE_CALLS';\nexport const TRANSACTION_TYPE_CONTRACTS = 'TRANSACTION_TYPE_CONTRACTS';\n","import type { TransactionExecutionError } from 'viem';\n\nexport function isUserRejectedRequestError(err: unknown) {\n  if (\n    (err as TransactionExecutionError)?.cause?.name ===\n    'UserRejectedRequestError'\n  ) {\n    return true;\n  }\n  if (\n    (err as TransactionExecutionError)?.shortMessage?.includes(\n      'User rejected the request.',\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n","import { useCallback } from 'react';\nimport { waitForTransactionReceipt } from 'wagmi/actions';\nimport { useCallsStatus } from 'wagmi/experimental';\nimport type { UseAwaitCallsParams } from '../types';\n\nexport function useAwaitCalls({\n  accountConfig,\n  lifecycleStatus,\n  updateLifecycleStatus,\n}: UseAwaitCallsParams) {\n  const callsId =\n    lifecycleStatus.statusName === 'transactionApproved'\n      ? lifecycleStatus.statusData?.callsId\n      : undefined;\n\n  const { data } = useCallsStatus({\n    id: callsId || '',\n    query: {\n      refetchInterval: (query) => {\n        return query.state.data?.status === 'CONFIRMED' ? false : 1000;\n      },\n      enabled: callsId !== undefined,\n    },\n  });\n\n  return useCallback(async () => {\n    if (data?.status === 'CONFIRMED' && data?.receipts) {\n      const transactionReceipt = await waitForTransactionReceipt(\n        accountConfig,\n        {\n          confirmations: 1,\n          hash: data.receipts[data.receipts.length - 1].transactionHash,\n        },\n      );\n      updateLifecycleStatus({\n        statusName: 'success',\n        statusData: {\n          transactionReceipt,\n        },\n      });\n    }\n  }, [accountConfig, data, updateLifecycleStatus]);\n}\n","import { useState } from 'react';\nimport type { Address } from 'viem';\nimport { useValue } from '../../internal/hooks/useValue';\nimport type { Token } from '../../token';\nimport type { FromTo } from '../types';\nimport { useSwapBalances } from './useSwapBalances';\n\nexport const useFromTo = (address?: Address): FromTo => {\n  const [fromAmount, setFromAmount] = useState('');\n  const [fromAmountUSD, setFromAmountUSD] = useState('');\n  const [fromToken, setFromToken] = useState<Token>();\n  const [toAmount, setToAmount] = useState('');\n  const [toAmountUSD, setToAmountUSD] = useState('');\n  const [toToken, setToToken] = useState<Token>();\n  const [toLoading, setToLoading] = useState(false);\n  const [fromLoading, setFromLoading] = useState(false);\n\n  const {\n    fromBalanceString,\n    fromTokenBalanceError,\n    toBalanceString,\n    toTokenBalanceError,\n    fromTokenResponse,\n    toTokenResponse,\n  } = useSwapBalances({ address, fromToken, toToken });\n\n  const from = useValue({\n    balance: fromBalanceString,\n    balanceResponse: fromTokenResponse,\n    amount: fromAmount,\n    setAmount: setFromAmount,\n    amountUSD: fromAmountUSD,\n    setAmountUSD: setFromAmountUSD,\n    token: fromToken,\n    setToken: setFromToken,\n    loading: fromLoading,\n    setLoading: setFromLoading,\n    error: fromTokenBalanceError,\n  });\n\n  const to = useValue({\n    balance: toBalanceString,\n    balanceResponse: toTokenResponse,\n    amount: toAmount,\n    amountUSD: toAmountUSD,\n    setAmountUSD: setToAmountUSD,\n    setAmount: setToAmount,\n    token: toToken,\n    setToken: setToToken,\n    loading: toLoading,\n    setLoading: setToLoading,\n    error: toTokenBalanceError,\n  });\n\n  return { from, to };\n};\n","import { useMemo } from 'react';\nimport { formatUnits } from 'viem';\nimport type { Address } from 'viem';\nimport { useBalance } from 'wagmi';\nimport type { UseBalanceReturnType } from 'wagmi';\nimport { getRoundedAmount } from '../../internal/utils/getRoundedAmount';\nimport type { SwapError } from '../../swap';\nimport { getSwapErrorCode } from '../../swap/utils/getSwapErrorCode';\nimport type { UseGetETHBalanceResponse } from '../types';\n\nconst ETH_DECIMALS = 18;\n\nexport function useGetETHBalance(address?: Address): UseGetETHBalanceResponse {\n  const ethBalanceResponse: UseBalanceReturnType = useBalance({ address });\n\n  return useMemo(() => {\n    let error: SwapError | undefined;\n    if (ethBalanceResponse?.error) {\n      error = {\n        code: getSwapErrorCode('balance'),\n        error: ethBalanceResponse?.error?.message,\n        message: '',\n      };\n    }\n    if (\n      !ethBalanceResponse?.data?.value &&\n      ethBalanceResponse?.data?.value !== 0n\n    ) {\n      return {\n        convertedBalance: '',\n        error,\n        response: ethBalanceResponse,\n        roundedBalance: '',\n      };\n    }\n    const convertedBalance = formatUnits(\n      ethBalanceResponse?.data?.value,\n      ETH_DECIMALS,\n    );\n    const roundedBalance = getRoundedAmount(convertedBalance, 8);\n    return {\n      convertedBalance,\n      error,\n      response: ethBalanceResponse,\n      roundedBalance,\n    };\n  }, [ethBalanceResponse]);\n}\n","import { useMemo } from 'react';\nimport { erc20Abi, formatUnits } from 'viem';\nimport type { Address } from 'viem';\nimport { useReadContract } from 'wagmi';\nimport type { UseReadContractReturnType } from 'wagmi';\nimport { getRoundedAmount } from '../../internal/utils/getRoundedAmount';\nimport type { SwapError } from '../../swap';\nimport { getSwapErrorCode } from '../../swap/utils/getSwapErrorCode';\nimport type { Token } from '../../token';\nimport type { UseGetTokenBalanceResponse } from '../types';\n\nexport function useGetTokenBalance(\n  address?: Address,\n  token?: Token,\n): UseGetTokenBalanceResponse {\n  const tokenBalanceResponse: UseReadContractReturnType = useReadContract({\n    abi: erc20Abi,\n    address: token?.address as Address,\n    functionName: 'balanceOf',\n    args: address ? [address] : [],\n    query: {\n      enabled: !!token?.address && !!address,\n    },\n  });\n  return useMemo(() => {\n    let error: SwapError | undefined;\n    if (tokenBalanceResponse?.error) {\n      error = {\n        code: getSwapErrorCode('balance'),\n        error: tokenBalanceResponse?.error?.shortMessage,\n        message: '',\n      };\n    }\n    if (\n      (tokenBalanceResponse?.data !== 0n && !tokenBalanceResponse?.data) ||\n      !token\n    ) {\n      return {\n        convertedBalance: '',\n        error,\n        roundedBalance: '',\n        response: tokenBalanceResponse,\n      };\n    }\n    const convertedBalance = formatUnits(\n      tokenBalanceResponse?.data as bigint,\n      token?.decimals,\n    );\n    return {\n      convertedBalance,\n      error,\n      response: tokenBalanceResponse,\n      roundedBalance: getRoundedAmount(convertedBalance, 8),\n    };\n  }, [token, tokenBalanceResponse]);\n}\n","import type { Address } from 'viem';\nimport { useValue } from '../../internal/hooks/useValue';\nimport type { Token } from '../../token';\nimport { useGetETHBalance } from '../../wallet/hooks/useGetETHBalance';\nimport { useGetTokenBalance } from '../../wallet/hooks/useGetTokenBalance';\n\nexport function useSwapBalances({\n  address,\n  fromToken,\n  toToken,\n}: {\n  address?: Address;\n  fromToken?: Token;\n  toToken?: Token;\n}) {\n  const {\n    convertedBalance: convertedEthBalance,\n    error: ethBalanceError,\n    response: ethBalanceResponse,\n  } = useGetETHBalance(address);\n\n  const {\n    convertedBalance: convertedFromBalance,\n    error: fromBalanceError,\n    response: _fromTokenResponse,\n  } = useGetTokenBalance(address, fromToken);\n\n  const {\n    convertedBalance: convertedToBalance,\n    error: toBalanceError,\n    response: _toTokenResponse,\n  } = useGetTokenBalance(address, toToken);\n\n  const isFromNativeToken = fromToken?.symbol === 'ETH';\n  const isToNativeToken = toToken?.symbol === 'ETH';\n\n  const fromBalanceString = isFromNativeToken\n    ? convertedEthBalance\n    : convertedFromBalance;\n  const fromTokenBalanceError = isFromNativeToken\n    ? ethBalanceError\n    : fromBalanceError;\n  const toBalanceString = isToNativeToken\n    ? convertedEthBalance\n    : convertedToBalance;\n  const toTokenBalanceError = isToNativeToken\n    ? ethBalanceError\n    : toBalanceError;\n  const fromTokenResponse = isFromNativeToken\n    ? ethBalanceResponse\n    : _fromTokenResponse;\n  const toTokenResponse = isToNativeToken\n    ? ethBalanceResponse\n    : _toTokenResponse;\n\n  return useValue({\n    fromBalanceString,\n    fromTokenBalanceError,\n    fromTokenResponse,\n\n    toBalanceString,\n    toTokenBalanceError,\n    toTokenResponse,\n  });\n}\n","import { useCallback, useState } from 'react';\nimport type { LifecycleStatus, LifecycleStatusUpdate } from '../types';\n\ntype UseLifecycleStatusReturn = [\n  lifecycleStatus: LifecycleStatus,\n  updatelifecycleStatus: (newStatus: LifecycleStatusUpdate) => void,\n];\n\nexport function useLifecycleStatus(\n  initialState: LifecycleStatus,\n): UseLifecycleStatusReturn {\n  const [lifecycleStatus, setLifecycleStatus] =\n    useState<LifecycleStatus>(initialState); // Component lifecycle\n\n  // Update lifecycle status, statusData will be persisted for the full lifecycle\n  const updateLifecycleStatus = useCallback(\n    (newStatus: LifecycleStatusUpdate) => {\n      setLifecycleStatus((prevStatus: LifecycleStatus) => {\n        // do not persist errors\n        const persistedStatusData =\n          prevStatus.statusName === 'error'\n            ? (({ error, code, message, ...statusData }) => statusData)(\n                prevStatus.statusData,\n              )\n            : prevStatus.statusData;\n        return {\n          statusName: newStatus.statusName,\n          statusData: {\n            ...persistedStatusData,\n            ...newStatus.statusData,\n          },\n        } as LifecycleStatus;\n      });\n    },\n    [],\n  );\n\n  return [lifecycleStatus, updateLifecycleStatus];\n}\n","import { useCallback } from 'react';\nimport type { FromTo } from '../types';\n\n// Refreshes balances and inputs post-swap\nexport const useResetInputs = ({ from, to }: FromTo) => {\n  return useCallback(async () => {\n    await Promise.all([\n      from.balanceResponse?.refetch(),\n      to.balanceResponse?.refetch(),\n      from.setAmount(''),\n      from.setAmountUSD(''),\n      to.setAmount(''),\n      to.setAmountUSD(''),\n    ]);\n  }, [from, to]);\n};\n","import type { SwapError } from '../types';\n\nexport function isSwapError(response: unknown): response is SwapError {\n  return (\n    response !== null && typeof response === 'object' && 'error' in response\n  );\n}\n","import type { Address } from 'viem';\nimport { encodeFunctionData, parseAbi } from 'viem';\nimport { base } from 'viem/chains';\nimport {\n  PERMIT2_CONTRACT_ADDRESS,\n  UNIVERSALROUTER_CONTRACT_ADDRESS,\n} from '../constants';\nimport type { ProcessSwapTransactionParams, SwapTransaction } from '../types';\nimport { sendSwapTransactions } from './sendSwapTransactions';\n\nexport async function processSwapTransaction({\n  chainId,\n  config,\n  isSponsored,\n  paymaster,\n  sendCallsAsync,\n  sendTransactionAsync,\n  swapTransaction,\n  switchChainAsync,\n  updateLifecycleStatus,\n  useAggregator,\n  walletCapabilities,\n}: ProcessSwapTransactionParams) {\n  const { transaction, approveTransaction, quote } = swapTransaction;\n  const transactions: SwapTransaction[] = [];\n\n  // for swaps from ERC-20 tokens,\n  // if there is an approveTransaction present,\n  // request approval for the amount\n  // for V1 API, `approveTx` will be an ERC-20 approval against the Router\n  // for V2 API, `approveTx` will be an ERC-20 approval against the `Permit2` contract\n  if (approveTransaction?.data) {\n    transactions.push({\n      transaction: {\n        to: approveTransaction.to,\n        value: approveTransaction.value,\n        data: approveTransaction.data,\n      },\n      transactionType: 'ERC20',\n    });\n\n    // for the V2 API, we use Uniswap's `UniversalRouter`, which uses `Permit2` for ERC-20 approvals\n    // this adds an additional transaction/step to the swap process\n    // since we need to make an extra transaction to `Permit2` to allow the UniversalRouter to spend the approved funds\n    // this would typically be a (gasless) signature, but we're using a transaction here to allow batching for Smart Wallets\n    // read more: https://blog.uniswap.org/permit2-and-universal-router\n    if (!useAggregator) {\n      const permit2ContractAbi = parseAbi([\n        'function approve(address token, address spender, uint160 amount, uint48 expiration) external',\n      ]);\n      const data = encodeFunctionData({\n        abi: permit2ContractAbi,\n        functionName: 'approve',\n        args: [\n          quote.from.address as Address,\n          UNIVERSALROUTER_CONTRACT_ADDRESS,\n          BigInt(quote.fromAmount),\n          20_000_000_000_000, // The deadline where the approval is no longer valid - see https://docs.uniswap.org/contracts/permit2/reference/allowance-transfer\n        ],\n      });\n      transactions.push({\n        transaction: {\n          to: PERMIT2_CONTRACT_ADDRESS,\n          value: 0n,\n          data,\n        },\n        transactionType: 'Permit2',\n      });\n    }\n  }\n  // The Swap Execution Transaction\n  transactions.push({\n    transaction: {\n      to: transaction.to,\n      value: transaction.value,\n      data: transaction.data,\n    },\n    transactionType: 'Swap',\n  });\n\n  // Switch to Base if the wallet is not on the current chain\n  if (chainId !== base.id) {\n    await switchChainAsync({ chainId: base.id });\n  }\n\n  await sendSwapTransactions({\n    config,\n    isSponsored,\n    paymaster,\n    sendCallsAsync,\n    sendTransactionAsync,\n    transactions,\n    updateLifecycleStatus,\n    walletCapabilities,\n  });\n}\n","// Capabilities\nexport enum Capabilities {\n  AtomicBatch = 'atomicBatch',\n  AuxiliaryFunds = 'auxiliaryFunds',\n  PaymasterService = 'paymasterService',\n}\n","import type { TransactionReceipt } from 'viem';\nimport { waitForTransactionReceipt } from 'wagmi/actions';\nimport type { SendSingleTransactionsParams } from '../types';\n\nexport async function sendSingleTransactions({\n  config,\n  sendTransactionAsync,\n  transactions,\n  updateLifecycleStatus,\n}: SendSingleTransactionsParams) {\n  let transactionReceipt: TransactionReceipt | undefined;\n\n  // Execute the non-batched transactions sequentially\n  for (const { transaction, transactionType } of transactions) {\n    updateLifecycleStatus({\n      statusName: 'transactionPending',\n    });\n    const txHash = await sendTransactionAsync(transaction);\n    updateLifecycleStatus({\n      statusName: 'transactionApproved',\n      statusData: { transactionHash: txHash, transactionType },\n    });\n    transactionReceipt = await waitForTransactionReceipt(config, {\n      hash: txHash,\n      confirmations: 1,\n    });\n  }\n\n  // For non-batched transactions, emit the last transaction receipt\n  if (transactionReceipt) {\n    updateLifecycleStatus({\n      statusName: 'success',\n      statusData: {\n        transactionReceipt,\n      },\n    });\n  }\n}\n","import { Capabilities } from '../../constants';\nimport type { SendSwapTransactionParams } from '../types';\nimport { sendSingleTransactions } from './sendSingleTransactions';\n\nexport async function sendSwapTransactions({\n  config,\n  isSponsored,\n  paymaster,\n  sendCallsAsync,\n  sendTransactionAsync,\n  updateLifecycleStatus,\n  walletCapabilities,\n  transactions,\n}: SendSwapTransactionParams) {\n  if (walletCapabilities[Capabilities.AtomicBatch]?.supported) {\n    // For batched transactions, we'll use `SwapProvider` to listen for calls to emit the `success` state\n    updateLifecycleStatus({\n      statusName: 'transactionPending',\n    });\n    const callsId = await sendCallsAsync({\n      calls: transactions.map(({ transaction }) => transaction),\n      capabilities: isSponsored\n        ? {\n            paymasterService: {\n              url: paymaster,\n            },\n          }\n        : {},\n    });\n    updateLifecycleStatus({\n      statusName: 'transactionApproved',\n      statusData: {\n        callsId,\n        transactionType: 'Batched',\n      },\n    });\n  } else {\n    await sendSingleTransactions({\n      config,\n      sendTransactionAsync,\n      transactions,\n      updateLifecycleStatus,\n    });\n  }\n}\n","import { cn } from '../../styles/theme';\n\ntype SpinnerReact = {\n  className?: string;\n};\n\nexport function Spinner({ className }: SpinnerReact) {\n  return (\n    <div\n      className=\"flex h-full items-center justify-center\"\n      data-testid=\"ockSpinner\"\n    >\n      <div\n        className={cn(\n          'animate-spin border-2 border-gray-200 border-t-3',\n          'rounded-full border-t-gray-400 px-2.5 py-2.5',\n          className,\n        )}\n      />\n    </div>\n  );\n}\n","import { ConnectButton as ConnectButtonRainbowKit } from '@rainbow-me/rainbowkit';\nimport { Children, isValidElement, useCallback, useMemo } from 'react';\nimport type { ReactNode } from 'react';\nimport { useAccount, useConnect } from 'wagmi';\nimport { IdentityProvider } from '../../identity/components/IdentityProvider';\nimport { Spinner } from '../../internal/components/Spinner';\nimport { findComponent } from '../../internal/utils/findComponent';\nimport {\n  border,\n  cn,\n  color,\n  text as dsText,\n  pressable,\n} from '../../styles/theme';\nimport type { ConnectWalletReact } from '../types';\nimport { ConnectButton } from './ConnectButton';\nimport { ConnectWalletText } from './ConnectWalletText';\nimport { useWalletContext } from './WalletProvider';\n\nexport function ConnectWallet({\n  children,\n  className,\n  // In a few version we will officially deprecate this prop,\n  // but for now we will keep it for backward compatibility.\n  text = 'Connect Wallet',\n  withWalletAggregator = false,\n}: ConnectWalletReact) {\n  // Core Hooks\n  const { isOpen, setIsOpen } = useWalletContext();\n  const { address: accountAddress, status } = useAccount();\n  const { connectors, connect, status: connectStatus } = useConnect();\n\n  // Get connectWalletText from children when present,\n  // this is used to customize the connect wallet button text\n  const { connectWalletText } = useMemo(() => {\n    const childrenArray = Children.toArray(children);\n    return {\n      connectWalletText: childrenArray.find(findComponent(ConnectWalletText)),\n    };\n  }, [children]);\n\n  // Remove connectWalletText from children if present\n  const childrenWithoutConnectWalletText = useMemo(() => {\n    return Children.map(children, (child: ReactNode) => {\n      if (isValidElement(child) && child.type === ConnectWalletText) {\n        return null;\n      }\n      return child;\n    });\n  }, [children]);\n\n  // Wallet connect status\n  const connector = connectors[0];\n  const isLoading = connectStatus === 'pending' || status === 'connecting';\n\n  // Handles\n  const handleToggle = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n\n  console.log('demo Noegf');\n\n  if (status === 'disconnected') {\n    if (withWalletAggregator) {\n      return (\n        <ConnectButtonRainbowKit.Custom>\n          {({ openConnectModal }) => (\n            <div className=\"flex\" data-testid=\"ockConnectWallet_Container\">\n              <ConnectButton\n                className={className}\n                connectWalletText={connectWalletText}\n                onClick={() => openConnectModal()}\n                text={text}\n              />\n            </div>\n          )}\n        </ConnectButtonRainbowKit.Custom>\n      );\n    }\n    return (\n      <div className=\"flex\" data-testid=\"ockConnectWallet_Container\">\n        <ConnectButton\n          className={className}\n          connectWalletText={connectWalletText}\n          onClick={() => connect({ connector })}\n          text={text}\n        />\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"flex\" data-testid=\"ockConnectWallet_Container\">\n        <button\n          type=\"button\"\n          data-testid=\"ockConnectAccountButtonInner\"\n          className={cn(\n            pressable.primary,\n            dsText.headline,\n            color.inverse,\n            'inline-flex min-w-[153px] items-center justify-center rounded-xl px-4 py-3',\n            pressable.disabled,\n            className,\n          )}\n          disabled={true}\n        >\n          <Spinner />\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <IdentityProvider address={accountAddress}>\n      <div className=\"flex gap-4\" data-testid=\"ockConnectWallet_Container\">\n        <button\n          type=\"button\"\n          data-testid=\"ockConnectWallet_Connected\"\n          className={cn(\n            pressable.secondary,\n            border.radius,\n            color.foreground,\n            'px-4 py-3',\n            isOpen && 'ock-bg-secondary-active hover:ock-bg-secondary-active',\n            className,\n          )}\n          onClick={handleToggle}\n        >\n          <div className=\"flex gap-2\">{childrenWithoutConnectWalletText}</div>\n        </button>\n      </div>\n    </IdentityProvider>\n  );\n}\n","import { createContext, useContext } from 'react';\nimport type { Address } from 'viem';\nimport { useValue } from '../../internal/hooks/useValue';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport type { IdentityContextType, IdentityProviderReact } from '../types';\n\nconst emptyContext = {} as IdentityContextType;\n\nexport const IdentityContext = createContext<IdentityContextType>(emptyContext);\n\nexport function useIdentityContext() {\n  return useContext(IdentityContext);\n}\n\nexport function IdentityProvider(props: IdentityProviderReact) {\n  const { chain: contextChain } = useOnchainKit();\n  const accountChain = props.chain ?? contextChain;\n\n  const value = useValue({\n    address: props.address || ('' as Address),\n    chain: accountChain,\n    schemaId: props.schemaId,\n  });\n\n  return (\n    <IdentityContext.Provider value={value}>\n      {props.children}\n    </IdentityContext.Provider>\n  );\n}\n","import {\n  border,\n  cn,\n  color,\n  text as dsText,\n  pressable,\n} from '../../styles/theme';\nimport type { ConnectButtonReact } from '../types';\n\nexport function ConnectButton({\n  className,\n  connectWalletText,\n  onClick,\n  // Text will be deprecated in the future\n  text,\n}: ConnectButtonReact) {\n  return (\n    <button\n      type=\"button\"\n      data-testid=\"ockConnectButton\"\n      className={cn(\n        pressable.primary,\n        border.radius,\n        dsText.headline,\n        color.inverse,\n        'inline-flex min-w-[153px] items-center justify-center px-4 py-3',\n        className,\n      )}\n      onClick={onClick}\n    >\n      {connectWalletText ? (\n        connectWalletText\n      ) : (\n        <span className={cn(color.inverse)}>{text}</span>\n      )}\n    </button>\n  );\n}\n","import { cn, color, text as dsText } from '../../styles/theme';\nimport type { ConnectWalletTextReact } from '../types';\n\nexport function ConnectWalletText({\n  children,\n  className,\n}: ConnectWalletTextReact) {\n  return (\n    <span className={cn(dsText.headline, color.inverse, className)}>\n      {children}\n    </span>\n  );\n}\n","import { createContext, useContext, useState } from 'react';\nimport type { ReactNode } from 'react';\nimport { useValue } from '../../internal/hooks/useValue';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport type { WalletContextType } from '../types';\n\nconst emptyContext = {} as WalletContextType;\n\nconst WalletContext = createContext<WalletContextType>(emptyContext);\n\ntype WalletProviderReact = {\n  children: ReactNode;\n};\n\nexport function WalletProvider({ children }: WalletProviderReact) {\n  const { chain } = useOnchainKit();\n  const [isOpen, setIsOpen] = useState(false);\n  const value = useValue({\n    isOpen,\n    chain,\n    setIsOpen,\n  });\n  return (\n    <WalletContext.Provider value={value}>{children}</WalletContext.Provider>\n  );\n}\n\nexport function useWalletContext() {\n  return useContext(WalletContext);\n}\n","import { Children, useEffect, useMemo, useRef } from 'react';\nimport { findComponent } from '../../internal/utils/findComponent';\nimport { cn } from '../../styles/theme';\nimport { useIsMounted } from '../../useIsMounted';\nimport { useTheme } from '../../useTheme';\nimport type { WalletReact } from '../types';\nimport { ConnectWallet } from './ConnectWallet';\nimport { WalletDropdown } from './WalletDropdown';\nimport { WalletProvider, useWalletContext } from './WalletProvider';\n\nconst WalletContent = ({ children, className }: WalletReact) => {\n  const { isOpen, setIsOpen } = useWalletContext();\n  const walletContainerRef = useRef<HTMLDivElement>(null);\n\n  const { connect, dropdown } = useMemo(() => {\n    const childrenArray = Children.toArray(children);\n    return {\n      connect: childrenArray.find(findComponent(ConnectWallet)),\n      dropdown: childrenArray.find(findComponent(WalletDropdown)),\n    };\n  }, [children]);\n\n  // Handle clicking outside the wallet component to close the dropdown.\n  useEffect(() => {\n    const handleClickOutsideComponent = (event: MouseEvent) => {\n      if (\n        walletContainerRef.current &&\n        !walletContainerRef.current.contains(event.target as Node) &&\n        isOpen\n      ) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('click', handleClickOutsideComponent);\n    return () =>\n      document.removeEventListener('click', handleClickOutsideComponent);\n  }, [isOpen, setIsOpen]);\n\n  return (\n    <div\n      ref={walletContainerRef}\n      className={cn('relative w-fit shrink-0', className)}\n    >\n      {connect}\n      {isOpen && dropdown}\n    </div>\n  );\n};\n\nexport const Wallet = ({ children, className }: WalletReact) => {\n  const componentTheme = useTheme();\n  const isMounted = useIsMounted();\n\n  // prevents SSR hydration issue\n  if (!isMounted) {\n    return null;\n  }\n\n  return (\n    <WalletProvider>\n      <WalletContent className={cn(componentTheme, className)}>\n        {children}\n      </WalletContent>\n    </WalletProvider>\n  );\n};\n","import { Children, cloneElement, isValidElement, useMemo } from 'react';\nimport { useAccount } from 'wagmi';\nimport { Identity } from '../../identity/components/Identity';\nimport { cn, color, pressable } from '../../styles/theme';\nimport { useBreakpoints } from '../../useBreakpoints';\nimport type { WalletDropdownReact } from '../types';\nimport { WalletBottomSheet } from './WalletBottomSheet';\n\nexport function WalletDropdown({ children, className }: WalletDropdownReact) {\n  const breakpoint = useBreakpoints();\n  const { address } = useAccount();\n\n  const childrenArray = useMemo(() => {\n    return Children.toArray(children).map((child) => {\n      if (isValidElement(child) && child.type === Identity) {\n        // @ts-ignore\n        return cloneElement(child, { address });\n      }\n      return child;\n    });\n  }, [children, address]);\n\n  if (!address) {\n    return null;\n  }\n\n  if (!breakpoint) {\n    return null;\n  }\n\n  if (breakpoint === 'sm') {\n    return (\n      <WalletBottomSheet className={className}>{children}</WalletBottomSheet>\n    );\n  }\n\n  return (\n    <div\n      className={cn(\n        pressable.default,\n        color.foreground,\n        'absolute right-0 z-10 mt-1 flex w-max min-w-[300px] flex-col overflow-hidden rounded-xl',\n        className,\n      )}\n      data-testid=\"ockWalletDropdown\"\n    >\n      {childrenArray}\n    </div>\n  );\n}\n","import { useCallback } from 'react';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport type { IdentityReact } from '../types';\nimport { IdentityLayout } from './IdentityLayout';\nimport { IdentityProvider } from './IdentityProvider';\n\nexport function Identity({\n  address,\n  chain,\n  children,\n  className,\n  hasCopyAddressOnClick = false,\n  schemaId,\n}: IdentityReact) {\n  const { chain: contextChain } = useOnchainKit();\n  const accountChain = chain ?? contextChain;\n\n  const handleCopy = useCallback(async () => {\n    if (!address) {\n      return false;\n    }\n    try {\n      await navigator.clipboard.writeText(address);\n      return true;\n    } catch (e) {\n      console.error('Failed to copy: ', e);\n      return false;\n    }\n  }, [address]);\n\n  const onClick = hasCopyAddressOnClick ? handleCopy : undefined;\n\n  return (\n    <IdentityProvider\n      address={address}\n      schemaId={schemaId}\n      chain={accountChain}\n    >\n      <IdentityLayout className={className} onClick={onClick}>\n        {children}\n      </IdentityLayout>\n    </IdentityProvider>\n  );\n}\n","import { Children, useMemo } from 'react';\nimport type { ReactNode } from 'react';\nimport { findComponent } from '../../internal/utils/findComponent';\nimport { background, cn, color, pressable } from '../../styles/theme';\nimport { useTheme } from '../../useTheme';\nimport { usePopover } from '../hooks/usePopover';\nimport { Address } from './Address';\nimport { Avatar } from './Avatar';\nimport { EthBalance } from './EthBalance';\nimport { Name } from './Name';\nimport { Socials } from './Socials';\n\nconst noop = () => {};\n\ntype IdentityLayoutReact = {\n  children: ReactNode;\n  className?: string;\n  onClick?: () => Promise<boolean>;\n};\n\nexport function IdentityLayout({\n  children,\n  className,\n  onClick,\n}: IdentityLayoutReact) {\n  const componentTheme = useTheme();\n\n  const { avatar, name, address, ethBalance, socials } = useMemo(() => {\n    const childrenArray = Children.toArray(children);\n    return {\n      avatar: childrenArray.find(findComponent(Avatar)),\n      name: childrenArray.find(findComponent(Name)),\n      address: childrenArray.find(findComponent(Address)),\n      ethBalance: childrenArray.find(findComponent(EthBalance)),\n      socials: childrenArray.find(findComponent(Socials)),\n    };\n  }, [children]);\n\n  const {\n    handleClick,\n    handleMouseEnter,\n    handleMouseLeave,\n    showPopover,\n    popoverText,\n  } = usePopover(onClick);\n\n  return (\n    <div\n      className={cn(\n        componentTheme,\n        background.default,\n        'flex flex-col px-4 py-1',\n        onClick && `${pressable.default} relative`,\n        className,\n      )}\n      data-testid=\"ockIdentityLayout_container\"\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onKeyUp={noop}\n      onKeyDown={noop}\n    >\n      <div className=\"flex items-center space-x-3\">\n        <div className=\"flex-shrink-0\">{avatar}</div>\n        <div className=\"flex flex-col\">\n          {name}\n          {address && !ethBalance && address}\n          {!address && ethBalance && ethBalance}\n          {address && ethBalance && (\n            <div className=\"flex items-center gap-1\">\n              {address}\n              <span className={color.foregroundMuted}>·</span>\n              {ethBalance}\n            </div>\n          )}\n        </div>\n      </div>\n      {socials}\n      {showPopover && (\n        <div\n          className={cn(\n            background.inverse,\n            color.foreground,\n            'absolute top-[calc(100%_-_5px)] left-[46px] z-10 rounded px-2 py-1 shadow-[0px_4px_8px_rgba(0,0,0,0.1)]',\n          )}\n          data-testid=\"ockIdentityLayout_copy\"\n        >\n          {popoverText}\n          <div\n            className={cn(\n              'absolute top-[-5px] left-6 h-0 w-0',\n              'border-x-[5px] border-x-transparent border-b-[5px] border-b-[color:var(--ock-bg-inverse)] border-solid',\n            )}\n            data-testid=\"ockIdentityLayout_copyArrow\"\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\n\nexport function usePopover(onClick?: () => Promise<boolean>) {\n  const [popoverText, setPopoverText] = useState('Copy');\n  const [showPopover, setShowPopover] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n\n  const handleMouseEnter = useCallback(() => {\n    setPopoverText('Copy');\n    setIsHovered(true);\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    setIsHovered(false);\n    setShowPopover(false);\n  }, []);\n\n  const handleClick = useCallback(async () => {\n    if (onClick) {\n      const result = await onClick();\n      if (result) {\n        setPopoverText('Copied');\n        setTimeout(() => {\n          setShowPopover(false);\n        }, 1000);\n      }\n    }\n  }, [onClick]);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n    if (isHovered) {\n      timer = setTimeout(() => setShowPopover(true), 200);\n    } else {\n      setShowPopover(false);\n    }\n    return () => clearTimeout(timer);\n  }, [isHovered]);\n\n  if (!onClick) {\n    return {};\n  }\n\n  return {\n    handleClick,\n    handleMouseEnter,\n    handleMouseLeave,\n    showPopover,\n    popoverText,\n  };\n}\n","import { useState } from 'react';\nimport { border, cn, color, pressable, text } from '../../styles/theme';\nimport type { AddressReact } from '../types';\nimport { getSlicedAddress } from '../utils/getSlicedAddress';\nimport { useIdentityContext } from './IdentityProvider';\n\nexport function Address({\n  address = null,\n  className,\n  isSliced = true,\n}: AddressReact) {\n  const [copyText, setCopyText] = useState('Copy');\n  const { address: contextAddress } = useIdentityContext();\n  if (!contextAddress && !address) {\n    console.error(\n      'Address: an Ethereum address must be provided to the Identity or Address component.',\n    );\n    return null;\n  }\n\n  const accountAddress = address ?? contextAddress;\n\n  const handleClick = () => {\n    navigator.clipboard\n      .writeText(accountAddress)\n      .then(() => {\n        setCopyText('Copied');\n        setTimeout(() => setCopyText('Copy'), 2000);\n      })\n      .catch((err) => {\n        console.error('Failed to copy address: ', err);\n      });\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      handleClick();\n    }\n  };\n\n  return (\n    <span\n      data-testid=\"ockAddress\"\n      className={cn(\n        color.foregroundMuted,\n        text.label2,\n        className,\n        'group relative cursor-pointer',\n      )}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      tabIndex={0}\n      role=\"button\"\n    >\n      {isSliced ? getSlicedAddress(accountAddress) : accountAddress}\n      <span\n        className={cn(\n          pressable.alternate,\n          text.legal,\n          color.foreground,\n          border.default,\n          border.radius,\n          'absolute top-full left-[0%] z-10 mt-0.5 px-1.5 py-0.5 opacity-0 transition-opacity group-hover:opacity-100',\n        )}\n      >\n        {copyText}\n      </span>\n    </span>\n  );\n}\n","import { Children, useMemo } from 'react';\nimport { defaultAvatarSVG } from '../../internal/svg/defaultAvatarSVG';\nimport { defaultLoadingSVG } from '../../internal/svg/defaultLoadingSVG';\nimport { findComponent } from '../../internal/utils/findComponent';\nimport { cn } from '../../styles/theme';\nimport { useAvatar } from '../hooks/useAvatar';\nimport { useName } from '../hooks/useName';\nimport type { AvatarReact } from '../types';\nimport { Badge } from './Badge';\nimport { DisplayBadge } from './DisplayBadge';\nimport { useIdentityContext } from './IdentityProvider';\n\n/**\n * Represents an Avatar component that displays either a loading indicator,\n * a default avatar, or a custom avatar based on Ethereum Name Service (ENS).\n */\n// biome-ignore lint/complexity/noExcessiveCognitiveComplexity: TODO Refactor this component\nexport function Avatar({\n  address = null,\n  chain,\n  className,\n  defaultComponent,\n  loadingComponent,\n  children,\n  ...props\n}: AvatarReact) {\n  const { address: contextAddress, chain: contextChain } = useIdentityContext();\n\n  const accountAddress = address ?? contextAddress;\n  const accountChain = chain ?? contextChain;\n\n  if (!accountAddress) {\n    console.error(\n      'Avatar: an Ethereum address must be provided to the Identity or Avatar component.',\n    );\n    return null;\n  }\n\n  // The component first attempts to retrieve the ENS name and avatar for the given Ethereum address.\n  const { data: name, isLoading: isLoadingName } = useName({\n    address: accountAddress,\n    chain: accountChain,\n  });\n\n  const { data: avatar, isLoading: isLoadingAvatar } = useAvatar(\n    { ensName: name ?? '', chain: accountChain },\n    { enabled: !!name },\n  );\n\n  const badge = useMemo(() => {\n    return Children.toArray(children).find(findComponent(Badge));\n  }, [children]);\n\n  const defaultAvatar = defaultComponent || defaultAvatarSVG;\n  const loadingAvatar = loadingComponent || defaultLoadingSVG;\n\n  // If the data is still loading, it displays a loading SVG.\n  if (isLoadingName || isLoadingAvatar) {\n    return (\n      <div className={cn('h-8 w-8 overflow-hidden rounded-full', className)}>\n        {loadingAvatar}\n      </div>\n    );\n  }\n\n  const displayAvatarImg = name && avatar;\n\n  // Otherwise, it displays the custom avatar obtained from ENS.\n  return (\n    <div className=\"relative\">\n      <div\n        data-testid=\"ockAvatar_ImageContainer\"\n        className={cn('h-10 w-10 overflow-hidden rounded-full', className)}\n      >\n        {/* biome-ignore lint: alt gets assigned */}\n        {displayAvatarImg ? (\n          <img\n            className=\"min-h-full min-w-full object-cover\"\n            data-testid=\"ockAvatar_Image\"\n            loading=\"lazy\"\n            width=\"100%\"\n            height=\"100%\"\n            decoding=\"async\"\n            src={avatar}\n            alt={name}\n            {...props}\n          />\n        ) : (\n          defaultAvatar\n        )}\n      </div>\n      {badge && (\n        <DisplayBadge address={accountAddress}>\n          <div\n            data-testid=\"ockAvatar_BadgeContainer\"\n            className=\"-bottom-0.5 -right-0.5 absolute flex h-[15px] w-[15px] items-center justify-center rounded-full bg-transparent\"\n          >\n            <div className=\"flex h-3 w-3 items-center justify-center\">\n              {badge}\n            </div>\n          </div>\n        </DisplayBadge>\n      )}\n    </div>\n  );\n}\n","import { icon } from '../../styles/theme';\n\nexport const defaultAvatarSVG = (\n  <svg\n    data-testid=\"ock-defaultAvatarSVG\"\n    role=\"img\"\n    aria-label=\"ock-defaultAvatarSVG\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 40 40\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-full w-full\"\n  >\n    <path\n      d=\"M20 40C8.9543 40 0 31.0457 0 20C0 8.9543 8.9543 0 20 0C31.0457 0 40 8.9543 40 20C40 31.0457 31.0457 40 20 40ZM25.6641 13.9974C25.6641 10.8692 23.1282 8.33333 20.0001 8.33333C16.8719 8.33333 14.336 10.8692 14.336 13.9974C14.336 17.1256 16.8719 19.6615 20.0001 19.6615C23.1282 19.6615 25.6641 17.1256 25.6641 13.9974ZM11.3453 23.362L9.53476 28.1875C12.2141 30.8475 15.9019 32.493 19.974 32.5H20.026C24.0981 32.493 27.7859 30.8475 30.4653 28.1874L28.6547 23.362C28.0052 21.625 26.3589 20.4771 24.5162 20.4318C24.4557 20.4771 22.462 21.9271 20 21.9271C17.538 21.9271 15.5443 20.4771 15.4839 20.4318C13.6412 20.462 11.9948 21.625 11.3453 23.362Z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { useQuery } from '@tanstack/react-query';\nimport { mainnet } from 'viem/chains';\nimport type {\n  GetAvatarReturnType,\n  UseAvatarOptions,\n  UseQueryOptions,\n} from '../types';\nimport { getAvatar } from '../utils/getAvatar';\n\n/**\n * Gets an ensName and resolves the Avatar\n */\nexport const useAvatar = (\n  { ensName, chain = mainnet }: UseAvatarOptions,\n  queryOptions?: UseQueryOptions,\n) => {\n  const { enabled = true, cacheTime } = queryOptions ?? {};\n  const ensActionKey = `ens-avatar-${ensName}-${chain.id}`;\n  return useQuery<GetAvatarReturnType>({\n    queryKey: ['useAvatar', ensActionKey],\n    queryFn: async () => {\n      return getAvatar({ ensName, chain });\n    },\n    gcTime: cacheTime,\n    enabled,\n    refetchOnWindowFocus: false,\n  });\n};\n","import { mainnet } from 'viem/chains';\nimport { normalize } from 'viem/ens';\nimport { isBase } from '../../isBase';\nimport { isEthereum } from '../../isEthereum';\nimport { getChainPublicClient } from '../../network/getChainPublicClient';\nimport { RESOLVER_ADDRESSES_BY_CHAIN_ID } from '../constants';\nimport type { Basename, GetAvatar, GetAvatarReturnType } from '../types';\nimport { getBaseDefaultProfilePicture } from './getBaseDefaultProfilePicture';\nimport { isBasename } from './isBasename';\n\n/**\n * An asynchronous function to fetch the Ethereum Name Service (ENS)\n * avatar for a given Ethereum name. It returns the ENS name if it exists,\n * or null if it doesn't or in case of an error.\n */\nexport const getAvatar = async ({\n  ensName,\n  chain = mainnet,\n}: GetAvatar): Promise<GetAvatarReturnType> => {\n  const chainIsBase = isBase({ chainId: chain.id });\n  const chainIsEthereum = isEthereum({ chainId: chain.id });\n  const chainSupportsUniversalResolver = chainIsEthereum || chainIsBase;\n  const usernameIsBasename = isBasename(ensName);\n\n  if (!chainSupportsUniversalResolver) {\n    return Promise.reject(\n      'ChainId not supported, avatar resolution is only supported on Ethereum and Base.',\n    );\n  }\n\n  let client = getChainPublicClient(chain);\n  let baseEnsAvatar = null;\n\n  // 1. Try basename\n  if (chainIsBase) {\n    try {\n      baseEnsAvatar = await client.getEnsAvatar({\n        name: normalize(ensName),\n        universalResolverAddress: RESOLVER_ADDRESSES_BY_CHAIN_ID[chain.id],\n      });\n\n      if (baseEnsAvatar) {\n        return baseEnsAvatar;\n      }\n    } catch (_error) {\n      // This is a best effort attempt, so we don't need to do anything here.\n    }\n  }\n\n  // 2. Defaults to mainnet\n  client = getChainPublicClient(mainnet);\n  const mainnetEnsAvatar = await client.getEnsAvatar({\n    name: normalize(ensName),\n  });\n\n  if (mainnetEnsAvatar) {\n    return mainnetEnsAvatar;\n  }\n\n  // 3. If username is a Basename (.base.eth / .basetest.eth), use default Basename avatars\n  if (usernameIsBasename) {\n    return getBaseDefaultProfilePicture(ensName as Basename);\n  }\n\n  // 4. No avatars to display\n  return null;\n};\n","import { base, baseSepolia } from 'viem/chains';\nimport type { isBaseOptions } from './types';\n\n/**\n * isBase\n *  - Checks if the paymaster operations chain id is valid\n *  - Only allows the Base and Base Sepolia chain ids\n */\nexport function isBase({\n  chainId,\n  isMainnetOnly = false,\n}: isBaseOptions): boolean {\n  // If only Base mainnet\n  if (isMainnetOnly && chainId === base.id) {\n    return true;\n  }\n  // If only Base or Base Sepolia\n  if (!isMainnetOnly && (chainId === baseSepolia.id || chainId === base.id)) {\n    return true;\n  }\n  return false;\n}\n","import { mainnet, sepolia } from 'viem/chains';\nimport type { isEthereumOptions } from './types';\n\n/**\n * isEthereum\n *  - Checks if the chain is mainnet or sepolia\n */\nexport function isEthereum({\n  chainId,\n  isMainnetOnly = false,\n}: isEthereumOptions): boolean {\n  // If only ETH mainnet\n  if (isMainnetOnly && chainId === mainnet.id) {\n    return true;\n  }\n  // If only ETH or ETH Sepolia\n  if (!isMainnetOnly && (chainId === sepolia.id || chainId === mainnet.id)) {\n    return true;\n  }\n  return false;\n}\n","import { http, createPublicClient } from 'viem';\nimport type { Chain } from 'viem/chains';\n\nexport function getChainPublicClient(chain: Chain) {\n  return createPublicClient({\n    chain: chain,\n    transport: http(),\n  });\n}\n","import { base, baseSepolia } from 'viem/chains';\nimport type { ResolverAddressesByChainIdMap } from './types';\n\nexport const RESOLVER_ADDRESSES_BY_CHAIN_ID: ResolverAddressesByChainIdMap = {\n  [baseSepolia.id]: '0x6533C94869D28fAA8dF77cc63f9e2b2D6Cf77eBA',\n  [base.id]: '0xC6d566A56A1aFf6508b41f6c90ff131615583BCD',\n};\n\n// Basename default profile pictures\nconst BASE_DEFAULT_PROFILE_PICTURES1 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72801)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2596.93 1721.27C2605.58 1648.75 2610.21 1574.9 2610.21 1500C2610.21 1425.1 2605.58 1351.4 2596.93 1278.73C2770.3 1177.28 2815.96 914.534 2631.1 772.941C2553.96 713.858 2472.05 660.593 2385.96 614.042C2339.26 528.102 2286.14 446.041 2227.06 368.904C2085.47 184.192 1822.72 229.699 1721.27 403.071C1648.75 394.417 1574.9 389.792 1500 389.792C1425.1 389.792 1351.4 394.417 1278.73 403.071C1177.28 229.699 914.534 184.043 772.941 368.904C713.858 446.041 660.593 527.953 614.042 614.042C528.102 660.742 446.041 713.858 368.904 772.941C184.192 914.534 229.699 1177.28 403.071 1278.73C394.417 1351.25 389.792 1425.1 389.792 1500C389.792 1574.9 394.417 1648.6 403.071 1721.27C229.699 1822.72 184.043 2085.47 368.904 2227.06C446.041 2286.14 527.953 2339.41 614.042 2385.96C660.742 2471.9 713.858 2553.96 772.941 2631.1C914.534 2815.81 1177.28 2770.3 1278.73 2596.93C1351.25 2605.58 1425.1 2610.21 1500 2610.21C1574.9 2610.21 1648.6 2605.58 1721.27 2596.93C1822.72 2770.3 2085.47 2815.96 2227.06 2631.1C2286.14 2553.96 2339.41 2472.05 2385.96 2385.96C2471.9 2339.26 2553.96 2286.14 2631.1 2227.06C2815.81 2085.47 2770.3 1822.72 2596.93 1721.27Z\" fill=\"white\"/><path d=\"M1391.06 1500C1391.06 1647.89 1358.4 1781.62 1305.74 1878.28C1253.03 1975.05 1180.69 2034 1101.53 2034C1022.36 2034 950.031 1975.05 897.314 1878.28C844.66 1781.62 812 1647.89 812 1500C812 1352.11 844.66 1218.38 897.314 1121.72C950.031 1024.95 1022.36 966 1101.53 966C1180.69 966 1253.03 1024.95 1305.74 1121.72C1358.4 1218.38 1391.06 1352.11 1391.06 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1102.57\" cy=\"1194.93\" rx=\"126.414\" ry=\"231.934\" fill=\"white\"/><path d=\"M2187.16 1500C2187.16 1647.89 2154.5 1781.62 2101.84 1878.28C2049.13 1975.05 1976.79 2034 1897.63 2034C1818.46 2034 1746.13 1975.05 1693.41 1878.28C1640.76 1781.62 1608.1 1647.89 1608.1 1500C1608.1 1352.11 1640.76 1218.38 1693.41 1121.72C1746.13 1024.95 1818.46 966 1897.63 966C1976.79 966 2049.13 1024.95 2101.84 1121.72C2154.5 1218.38 2187.16 1352.11 2187.16 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1896.58\" cy=\"1194.93\" rx=\"126.414\" ry=\"231.934\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72801\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES2 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72809)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2188.12 1131.95C2691.11 591.187 2356.8 256.94 1815.91 759.826C1767.57 804.826 1737.56 866.494 1733.32 932.403C1733.32 933.767 1733.17 934.979 1733.02 936.343C1722.56 1094.68 1853.35 1225.44 2011.72 1214.98C2013.08 1214.98 2014.29 1214.83 2015.66 1214.68C2081.58 1210.44 2143.26 1180.44 2188.27 1132.1L2188.12 1131.95Z\" fill=\"white\"/><path d=\"M759.879 1816.05C256.885 2356.81 591.204 2691.06 1132.08 2188.17C1180.43 2143.17 1210.44 2081.51 1214.68 2015.6C1214.68 2014.23 1214.83 2013.02 1214.98 2011.66C1225.44 1853.32 1094.65 1722.56 936.283 1733.02C934.919 1733.02 933.706 1733.17 932.342 1733.32C866.418 1737.56 804.738 1767.56 759.727 1815.9L759.879 1816.05Z\" fill=\"white\"/><path d=\"M1131.96 759.922C591.247 256.826 256.881 591.264 759.869 1132.09C804.865 1180.43 866.527 1210.44 932.431 1214.68C933.794 1214.68 935.006 1214.83 936.37 1214.98C1094.69 1225.44 1225.44 1094.66 1214.98 936.309C1214.98 934.946 1214.83 933.733 1214.68 932.369C1210.44 866.452 1180.44 804.777 1132.11 759.771L1131.96 759.922Z\" fill=\"white\"/><path d=\"M1816.05 2188.12C2356.81 2691.11 2691.06 2356.8 2188.17 1815.91C2143.17 1767.57 2081.51 1737.56 2015.6 1733.32C2014.23 1733.32 2013.02 1733.17 2011.66 1733.02C1853.32 1722.56 1722.56 1853.35 1733.02 2011.72C1733.02 2013.08 1733.17 2014.29 1733.32 2015.66C1737.56 2081.58 1767.56 2143.26 1815.9 2188.27L1816.05 2188.12Z\" fill=\"white\"/><path d=\"M1737.18 727.02C1710.36 -10.3398 1237.66 -10.3398 1210.84 727.02C1208.42 792.869 1230.84 857.658 1274.48 907.31C1275.39 908.37 1276.14 909.278 1277.05 910.338C1381.59 1029.62 1566.43 1029.62 1670.97 910.338C1671.88 909.278 1672.63 908.37 1673.54 907.31C1717.18 857.81 1739.45 793.02 1737.18 727.02Z\" fill=\"white\"/><path d=\"M727.02 1210.82C-10.3398 1237.64 -10.3398 1710.34 727.02 1737.16C792.869 1739.58 857.658 1717.16 907.31 1673.52C908.218 1672.62 909.278 1671.86 910.338 1670.95C1029.62 1566.41 1029.62 1381.57 910.338 1277.03C909.278 1276.12 908.37 1275.37 907.31 1274.46C857.81 1230.82 793.02 1208.55 727.02 1210.82Z\" fill=\"white\"/><path d=\"M2040.69 1274.48C2039.63 1275.39 2038.72 1276.14 2037.66 1277.05C1918.38 1381.59 1918.38 1566.43 2037.66 1670.97C2038.72 1671.88 2039.63 1672.63 2040.69 1673.54C2090.19 1717.18 2154.98 1739.45 2220.98 1737.18C2958.34 1710.36 2958.34 1237.66 2220.98 1210.84C2155.13 1208.42 2090.34 1230.84 2040.69 1274.48Z\" fill=\"white\"/><path d=\"M1210.82 2220.98C1237.64 2958.34 1710.34 2958.34 1737.16 2220.98C1739.58 2155.13 1717.16 2090.34 1673.52 2040.69C1672.62 2039.63 1671.86 2038.72 1670.95 2037.66C1566.41 1918.38 1381.57 1918.38 1277.03 2037.66C1276.12 2038.72 1275.37 2039.63 1274.46 2040.69C1230.82 2090.19 1208.55 2154.98 1210.82 2220.98Z\" fill=\"white\"/><circle cx=\"1474.5\" cy=\"1474.5\" r=\"886.5\" fill=\"white\"/><path d=\"M1391.06 1500C1391.06 1352.11 1358.4 1218.38 1305.74 1121.72C1253.03 1024.95 1180.69 966 1101.53 966C1022.36 966 950.031 1024.95 897.314 1121.72C844.66 1218.38 812 1352.11 812 1500C812 1647.89 844.66 1781.62 897.314 1878.28C950.031 1975.05 1022.36 2034 1101.53 2034C1180.69 2034 1253.03 1975.05 1305.74 1878.28C1358.4 1781.62 1391.06 1647.89 1391.06 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"126.414\" cy=\"231.934\" rx=\"126.414\" ry=\"231.934\" transform=\"matrix(1 0 0 -1 976.16 2037)\" fill=\"white\"/><path d=\"M2187.16 1500C2187.16 1352.11 2154.5 1218.38 2101.84 1121.72C2049.12 1024.95 1976.79 966 1897.63 966C1818.46 966 1746.13 1024.95 1693.41 1121.72C1640.76 1218.38 1608.1 1352.11 1608.1 1500C1608.1 1647.89 1640.76 1781.62 1693.41 1878.28C1746.13 1975.05 1818.46 2034 1897.63 2034C1976.79 2034 2049.12 1975.05 2101.84 1878.28C2154.5 1781.62 2187.16 1647.89 2187.16 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"126.414\" cy=\"231.934\" rx=\"126.414\" ry=\"231.934\" transform=\"matrix(1 0 0 -1 1770.17 2037)\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72809\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES3 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72826)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M587.596 2230.75C839.799 2148.27 1126.41 2048.74 1282.85 1934.35C1406.13 1849.79 1458.98 1757.13 1483.16 1651.34C1488.13 1629.73 1511.93 1629.73 1516.8 1651.34C1540.98 1757.01 1593.83 1849.67 1717.11 1934.35C1873.55 2048.74 2160.26 2148.28 2412.36 2230.75C2681.77 2308.44 2735.86 2334.34 2656.73 2207.31C2588.97 2088.63 2388.28 1817.51 2407.39 1489.82C2407.39 1489.21 2407.39 1488.59 2407.39 1487.86C2397.17 1162.25 2598.34 899.36 2662.18 786.079C2737.77 664.821 2675.65 693.54 2406.72 771.597C2154.43 854.195 1870.3 953.362 1715.2 1067.5C1593.25 1151.7 1540.79 1203.99 1516.8 1309.05C1511.83 1330.65 1488.03 1330.65 1483.16 1309.05C1459.17 1203.87 1406.71 1151.7 1284.76 1067.5C1129.66 953.362 845.533 854.195 593.234 771.597C324.307 693.54 262.284 664.821 337.782 786.079C401.621 899.36 602.791 1162.37 592.47 1488.1C592.47 1488.72 592.47 1489.33 592.47 1490.07C611.583 1817.76 410.891 2088.87 343.134 2207.55C264.004 2334.46 318.095 2308.68 587.5 2231L587.596 2230.75Z\" fill=\"white\"/><path d=\"M769.249 587.596C851.725 839.799 951.26 1126.41 1065.65 1282.85C1150.21 1406.13 1242.87 1458.98 1348.66 1483.16C1370.26 1488.13 1370.26 1511.93 1348.66 1516.8C1242.99 1540.98 1150.33 1593.83 1065.65 1717.11C951.26 1873.55 851.725 2160.26 769.249 2412.36C691.56 2681.77 665.664 2735.86 792.691 2656.73C911.372 2588.97 1182.49 2388.28 1510.18 2407.39C1510.79 2407.39 1511.41 2407.39 1512.14 2407.39C1837.75 2397.17 2100.64 2598.34 2213.92 2662.18C2335.18 2737.77 2306.46 2675.65 2228.4 2406.72C2145.8 2154.43 2046.64 1870.3 1932.5 1715.2C1848.3 1593.25 1796.01 1540.79 1690.95 1516.8C1669.35 1511.83 1669.35 1488.03 1690.95 1483.16C1796.13 1459.17 1848.3 1406.71 1932.5 1284.76C2046.64 1129.66 2145.8 845.533 2228.4 593.234C2306.46 324.307 2335.18 262.284 2213.92 337.782C2100.64 401.621 1837.63 602.791 1511.9 592.47C1511.28 592.47 1510.67 592.47 1509.93 592.47C1182.24 611.583 911.127 410.891 792.446 343.134C665.541 264.004 691.315 318.095 769.004 587.5L769.249 587.596Z\" fill=\"white\"/><path d=\"M1391.06 1500C1391.06 1352.11 1358.4 1218.38 1305.74 1121.72C1253.03 1024.95 1180.69 966 1101.53 966C1022.36 966 950.031 1024.95 897.314 1121.72C844.66 1218.38 812 1352.11 812 1500C812 1647.89 844.66 1781.62 897.314 1878.28C950.031 1975.05 1022.36 2034 1101.53 2034C1180.69 2034 1253.03 1975.05 1305.74 1878.28C1358.4 1781.62 1391.06 1647.89 1391.06 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"126.414\" cy=\"231.934\" rx=\"126.414\" ry=\"231.934\" transform=\"matrix(1 0 0 -1 976.159 2037)\" fill=\"white\"/><path d=\"M2187.16 1500C2187.16 1352.11 2154.5 1218.38 2101.84 1121.72C2049.12 1024.95 1976.79 966 1897.63 966C1818.46 966 1746.13 1024.95 1693.41 1121.72C1640.76 1218.38 1608.1 1352.11 1608.1 1500C1608.1 1647.89 1640.76 1781.62 1693.41 1878.28C1746.13 1975.05 1818.46 2034 1897.63 2034C1976.79 2034 2049.12 1975.05 2101.84 1878.28C2154.5 1781.62 2187.16 1647.89 2187.16 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"126.414\" cy=\"231.934\" rx=\"126.414\" ry=\"231.934\" transform=\"matrix(1 0 0 -1 1770.17 2037)\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72826\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES4 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72835)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2713.13 1500C2731.2 1680.92 2615.13 1818.15 2507.78 1924.42C2394.7 2032.13 2290.44 2108.88 2200.88 2200.61C2109.15 2290.16 2032.22 2394.61 1924.51 2507.68C1818.15 2615.04 1680.92 2731.11 1500 2713.13C1319.08 2731.2 1181.85 2615.13 1075.58 2507.78C967.866 2394.7 891.12 2290.44 799.389 2200.88C709.837 2109.15 605.39 2032.22 492.315 1924.51C384.962 1818.15 268.89 1680.92 286.873 1500C268.799 1319.08 384.871 1181.85 492.224 1075.58C605.299 967.866 709.564 891.12 799.116 799.389C890.848 709.837 967.775 605.39 1075.49 492.315C1181.85 384.871 1319.08 268.799 1500 286.873C1680.92 268.799 1818.15 384.871 1924.42 492.224C2032.13 605.299 2108.88 709.564 2200.61 799.116C2290.16 890.848 2394.61 967.775 2507.68 1075.49C2615.04 1181.85 2731.11 1319.08 2713.13 1500Z\" fill=\"white\"/><path d=\"M1391.06 1500C1391.06 1647.89 1358.4 1781.62 1305.74 1878.28C1253.03 1975.05 1180.69 2034 1101.53 2034C1022.36 2034 950.031 1975.05 897.314 1878.28C844.66 1781.62 812 1647.89 812 1500C812 1352.11 844.66 1218.38 897.314 1121.72C950.031 1024.95 1022.36 966 1101.53 966C1180.69 966 1253.03 1024.95 1305.74 1121.72C1358.4 1218.38 1391.06 1352.11 1391.06 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1102.57\" cy=\"1194.93\" rx=\"126.414\" ry=\"231.934\" fill=\"white\"/><path d=\"M2187.16 1500C2187.16 1647.89 2154.5 1781.62 2101.84 1878.28C2049.12 1975.05 1976.79 2034 1897.63 2034C1818.46 2034 1746.13 1975.05 1693.41 1878.28C1640.76 1781.62 1608.1 1647.89 1608.1 1500C1608.1 1352.11 1640.76 1218.38 1693.41 1121.72C1746.13 1024.95 1818.46 966 1897.63 966C1976.79 966 2049.12 1024.95 2101.84 1121.72C2154.5 1218.38 2187.16 1352.11 2187.16 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1896.58\" cy=\"1194.93\" rx=\"126.414\" ry=\"231.934\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72835\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES5 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72843)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2321.64 1500C3048.65 1727.51 2902.59 1900.1 2182.54 1787.44C2625.43 2169.27 2494.23 2265.93 1974.71 1974.53C2266.19 2493.97 2169.44 2625.34 1787.53 2182.54C1900.19 2902.68 1727.6 3048.65 1500 2321.64C1272.49 3048.65 1099.9 2902.59 1212.56 2182.54C830.733 2625.43 734.069 2494.23 1025.47 1974.71C506.03 2266.19 374.655 2169.44 817.464 1787.53C97.3173 1900.19 -48.6455 1727.6 678.356 1500C-48.6455 1272.49 97.4051 1099.9 817.464 1212.56C374.567 830.733 505.767 734.069 1025.29 1025.47C733.806 506.03 830.558 374.655 1212.47 817.464C1099.81 97.3173 1272.4 -48.6455 1500 678.356C1727.51 -48.6455 1900.1 97.4051 1787.44 817.464C2169.27 374.567 2265.93 505.767 1974.53 1025.29C2493.97 733.806 2625.34 830.558 2182.54 1212.47C2902.68 1099.81 3048.65 1272.4 2321.64 1500Z\" fill=\"white\"/><path d=\"M1402.29 1500.15C1402.29 1632.88 1372.98 1752.91 1325.73 1839.64C1278.42 1926.48 1213.56 1979.29 1142.65 1979.29C1071.73 1979.29 1006.87 1926.48 959.562 1839.64C912.315 1752.91 883 1632.88 883 1500.15C883 1367.41 912.315 1247.38 959.562 1160.65C1006.87 1073.81 1071.73 1021 1142.65 1021C1213.56 1021 1278.42 1073.81 1325.73 1160.65C1372.98 1247.38 1402.29 1367.41 1402.29 1500.15Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"998.466\" cy=\"1500.14\" rx=\"113.501\" ry=\"208.242\" fill=\"white\"/><path d=\"M2117.07 1500.15C2117.07 1632.88 2087.76 1752.91 2040.51 1839.64C1993.2 1926.48 1928.34 1979.29 1857.42 1979.29C1786.51 1979.29 1721.65 1926.48 1674.34 1839.64C1627.09 1752.91 1597.78 1632.88 1597.78 1500.15C1597.78 1367.41 1627.09 1247.38 1674.34 1160.65C1721.65 1073.81 1786.51 1021 1857.42 1021C1928.34 1021 1993.2 1073.81 2040.51 1160.65C2087.76 1247.38 2117.07 1367.41 2117.07 1500.15Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1712.74\" cy=\"1498.06\" rx=\"113.501\" ry=\"208.242\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72843\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES6 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72851)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2538.7 1207.34C2483.17 1184.33 2431.23 1159.94 2382.18 1133.9C2398.44 1080.86 2417.87 1026.85 2440.88 971.324C2548.89 711.06 2287.94 450.106 2027.68 558.125C1972.15 581.134 1918.14 600.699 1865.1 616.819C1839.06 567.907 1814.67 515.827 1791.66 460.302C1684.05 199.899 1314.94 199.899 1207.34 460.302C1184.33 515.827 1159.94 567.769 1133.9 616.819C1080.86 600.561 1026.85 581.134 971.324 558.125C711.06 450.106 450.106 711.06 558.125 971.324C581.134 1026.85 600.699 1080.86 616.819 1133.9C567.907 1159.94 515.827 1184.33 460.302 1207.34C199.899 1314.94 199.899 1684.05 460.302 1791.66C515.827 1814.67 567.769 1839.06 616.819 1865.1C600.561 1918.14 581.134 1972.15 558.125 2027.68C450.106 2287.94 711.06 2548.89 971.324 2440.88C1026.85 2417.87 1080.86 2398.3 1133.9 2382.18C1159.94 2431.09 1184.33 2483.17 1207.34 2538.7C1314.94 2799.1 1684.05 2799.1 1791.66 2538.7C1814.67 2483.17 1839.06 2431.23 1865.1 2382.18C1918.14 2398.44 1972.15 2417.87 2027.68 2440.88C2287.94 2548.89 2548.89 2287.94 2440.88 2027.68C2417.87 1972.15 2398.3 1918.14 2382.18 1865.1C2431.09 1839.06 2483.17 1814.67 2538.7 1791.66C2799.1 1684.05 2799.1 1314.94 2538.7 1207.34ZM1735.31 1727.87C1732.83 1730.35 1730.35 1732.83 1727.87 1735.31C1697.42 1766.58 1662.15 1790.01 1624.53 1806.13C1587.47 1820.46 1547.24 1828.17 1504.94 1827.62C1501.36 1827.62 1497.92 1827.62 1494.33 1827.62C1452.04 1828.17 1411.67 1820.32 1374.74 1806.13C1337.13 1790.01 1301.86 1766.58 1271.41 1735.31C1268.93 1732.83 1266.45 1730.35 1263.97 1727.87C1232.69 1697.42 1209.27 1662.15 1193.15 1624.53C1178.82 1587.61 1171.1 1547.24 1171.65 1504.94C1171.65 1501.36 1171.65 1497.92 1171.65 1494.33C1171.1 1452.04 1178.96 1411.67 1193.15 1374.74C1209.27 1337.13 1232.69 1301.86 1263.97 1271.41C1266.45 1268.93 1268.93 1266.45 1271.41 1263.97C1301.86 1232.69 1337.13 1209.27 1374.74 1193.15C1411.67 1178.82 1452.04 1171.1 1494.33 1171.65C1497.92 1171.65 1501.36 1171.65 1504.94 1171.65C1547.24 1171.1 1587.61 1178.96 1624.53 1193.15C1662.15 1209.27 1697.42 1232.69 1727.87 1263.97C1730.35 1266.45 1732.83 1268.93 1735.31 1271.41C1766.58 1301.86 1790.01 1337.13 1806.13 1374.74C1820.46 1411.8 1828.17 1452.04 1827.62 1494.33C1827.62 1497.92 1827.62 1501.36 1827.62 1504.94C1828.17 1547.24 1820.32 1587.61 1806.13 1624.53C1790.01 1662.15 1766.58 1697.42 1735.31 1727.87Z\" fill=\"white\"/><circle cx=\"1476\" cy=\"1442\" r=\"443\" fill=\"white\"/><path d=\"M1400.59 1202.5C1400.59 1334.79 1371.37 1454.31 1324.38 1540.58C1277.28 1627.04 1213.04 1679 1143.3 1679C1073.56 1679 1009.31 1627.04 962.215 1540.58C915.221 1454.31 886 1334.79 886 1202.5C886 1070.21 915.221 950.688 962.215 864.42C1009.31 777.961 1073.56 726 1143.3 726C1213.04 726 1277.28 777.961 1324.38 864.42C1371.37 950.688 1400.59 1070.21 1400.59 1202.5Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"10\"/><ellipse cx=\"1141.26\" cy=\"931.03\" rx=\"113.349\" ry=\"207.963\" fill=\"white\"/><path d=\"M2114.41 1202.5C2114.41 1334.79 2085.19 1454.31 2038.19 1540.58C1991.1 1627.04 1926.85 1679 1857.11 1679C1787.37 1679 1723.13 1627.04 1676.03 1540.58C1629.04 1454.31 1599.82 1334.79 1599.82 1202.5C1599.82 1070.21 1629.04 950.688 1676.03 864.42C1723.13 777.961 1787.37 726 1857.11 726C1926.85 726 1991.1 777.961 2038.19 864.42C2085.19 950.688 2114.41 1070.21 2114.41 1202.5Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"10\"/><ellipse cx=\"1861.96\" cy=\"928.963\" rx=\"113.349\" ry=\"207.963\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72851\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES7 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72860)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M1500.19 1499.87C1365.57 1351.79 1298.1 1205.48 1296.93 988.1C1296.16 779.052 1361.71 498.983 1502.29 274.909C1565.01 170.441 1645.1 119.866 1696.41 125.097C1750.22 129.37 1775.2 189.413 1785.5 284.511C1806.04 473.278 1775.29 803.798 1990.99 1009.07C2196.26 1224.77 2526.78 1194.09 2715.59 1214.68C2810.65 1224.78 2870.69 1249.84 2874.93 1303.61C2880.12 1354.96 2829.55 1435.05 2725.08 1497.77C2501.01 1638.35 2220.94 1703.91 2011.89 1703.13C1794.55 1702 1648.19 1634.49 1500.12 1499.87L1500.19 1499.87Z\" fill=\"white\"/><path d=\"M1499.98 1500.01C1634.61 1648.08 1702.07 1794.4 1703.24 2011.77C1704.02 2220.82 1638.47 2500.89 1497.89 2724.97C1435.16 2829.43 1355.07 2880.01 1303.77 2874.78C1249.96 2870.5 1224.97 2810.46 1214.68 2715.36C1194.13 2526.6 1224.89 2196.08 1009.18 1990.81C803.914 1775.1 473.394 1805.78 284.59 1785.2C189.528 1775.09 129.486 1750.03 125.249 1696.26C120.055 1644.91 170.63 1564.82 275.098 1502.1C499.172 1361.52 779.24 1295.97 988.289 1296.75C1205.63 1297.88 1351.98 1365.38 1500.06 1500.01L1499.98 1500.01Z\" fill=\"white\"/><path d=\"M1481.64 1518.29C1630.16 1383.18 1776.72 1315.24 1994.12 1313.37C2203.19 1311.92 2483.08 1376.57 2706.72 1516.45C2811 1578.84 2861.32 1658.78 2855.93 1710.11C2851.48 1763.93 2791.35 1789.12 2696.21 1799.72C2507.36 1820.87 2176.9 1791.18 1970.91 2007.57C1754.52 2213.55 1784.15 2544.01 1762.95 2732.9C1752.54 2828.01 1727.28 2888.14 1673.49 2892.55C1622.12 2897.91 1542.19 2847.58 1479.79 2743.31C1339.92 2519.66 1275.26 2239.77 1276.71 2030.7C1278.54 1813.33 1346.52 1666.75 1481.64 1518.22L1481.64 1518.29Z\" fill=\"white\"/><path d=\"M1481.81 1518.43C1333.29 1653.54 1186.74 1721.48 969.339 1723.34C760.267 1724.79 480.38 1660.13 256.734 1520.25C152.457 1457.85 102.133 1377.92 107.529 1326.59C111.975 1272.76 172.103 1247.58 267.243 1236.98C456.094 1215.83 786.549 1245.53 992.528 1029.15C1208.91 823.167 1179.28 492.713 1200.47 303.825C1210.92 208.685 1236.11 148.557 1289.93 144.111C1341.3 138.752 1421.23 189.076 1483.63 293.353C1623.51 516.999 1688.17 796.885 1686.72 1005.96C1684.9 1223.32 1616.92 1369.91 1481.81 1518.43Z\" fill=\"white\"/><path d=\"M1403.24 1500C1403.24 1630.77 1374.36 1749 1327.82 1834.44C1281.21 1919.99 1217.33 1972 1147.49 1972C1077.65 1972 1013.76 1919.99 967.153 1834.44C920.611 1749 891.731 1630.77 891.731 1500C891.731 1369.23 920.611 1251 967.153 1165.56C1013.76 1080.01 1077.65 1028 1147.49 1028C1217.33 1028 1281.21 1080.01 1327.82 1165.56C1374.36 1251 1403.24 1369.23 1403.24 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1148.41\" cy=\"1230.16\" rx=\"111.819\" ry=\"205.156\" fill=\"white\"/><path d=\"M2107.42 1500C2107.42 1630.77 2078.55 1749 2032 1834.44C1985.4 1919.99 1921.51 1972 1851.67 1972C1781.83 1972 1717.94 1919.99 1671.34 1834.44C1624.79 1749 1595.92 1630.77 1595.92 1500C1595.92 1369.23 1624.79 1251 1671.34 1165.56C1717.94 1080.01 1781.83 1028 1851.67 1028C1921.51 1028 1985.4 1080.01 2032 1165.56C2078.55 1251 2107.42 1369.23 2107.42 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1850.75\" cy=\"1230.16\" rx=\"111.819\" ry=\"205.156\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72860\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\n\nexport const BASE_DEFAULT_PROFILE_PICTURES = [\n  BASE_DEFAULT_PROFILE_PICTURES1,\n  BASE_DEFAULT_PROFILE_PICTURES2,\n  BASE_DEFAULT_PROFILE_PICTURES3,\n  BASE_DEFAULT_PROFILE_PICTURES4,\n  BASE_DEFAULT_PROFILE_PICTURES5,\n  BASE_DEFAULT_PROFILE_PICTURES6,\n  BASE_DEFAULT_PROFILE_PICTURES7,\n];\n","import { sha256 } from 'viem';\n\n// Will return a an index between 0 and optionsLength\nexport const getBaseDefaultProfilePictureIndex = (\n  name: string,\n  optionsLength: number,\n) => {\n  const nameAsUint8Array = Uint8Array.from(\n    name.split('').map((letter) => letter.charCodeAt(0)),\n  );\n  const hash = sha256(nameAsUint8Array);\n  const hashValue = Number.parseInt(hash, 16);\n  const remainder = hashValue % optionsLength;\n  const index = remainder;\n  return index;\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { mainnet } from 'viem/chains';\nimport type {\n  GetNameReturnType,\n  UseNameOptions,\n  UseQueryOptions,\n} from '../types';\nimport { getName } from '../utils/getName';\n\n/**\n * It leverages the `@tanstack/react-query` hook for fetching and optionally caching the ENS name\n * @returns An object containing:\n *  - `ensName`: The fetched ENS name for the provided address, or null if not found or in case of an error.\n *  - `{UseQueryResult}`: The rest of useQuery return values. including isLoading, isError, error, isFetching, refetch, etc.\n */\nexport const useName = (\n  { address, chain = mainnet }: UseNameOptions,\n  queryOptions?: UseQueryOptions,\n) => {\n  const { enabled = true, cacheTime } = queryOptions ?? {};\n  const ensActionKey = `ens-name-${address}-${chain.id}`;\n  return useQuery<GetNameReturnType>({\n    queryKey: ['useName', ensActionKey],\n    queryFn: async () => {\n      return await getName({ address, chain });\n    },\n    gcTime: cacheTime,\n    enabled,\n    refetchOnWindowFocus: false,\n  });\n};\n","import { base, mainnet } from 'viem/chains';\nimport { isBase } from '../../isBase';\nimport { isEthereum } from '../../isEthereum';\nimport { getChainPublicClient } from '../../network/getChainPublicClient';\nimport L2ResolverAbi from '../abis/L2ResolverAbi';\nimport { RESOLVER_ADDRESSES_BY_CHAIN_ID } from '../constants';\nimport type { Basename, GetName, GetNameReturnType } from '../types';\nimport { convertReverseNodeToBytes } from './convertReverseNodeToBytes';\n\n/**\n * An asynchronous function to fetch the Ethereum Name Service (ENS)\n * name for a given Ethereum address. It returns the ENS name if it exists,\n * or null if it doesn't or in case of an error.\n */\nexport const getName = async ({\n  address,\n  chain = mainnet,\n}: GetName): Promise<GetNameReturnType> => {\n  const chainIsBase = isBase({ chainId: chain.id });\n  const chainIsEthereum = isEthereum({ chainId: chain.id });\n  const chainSupportsUniversalResolver = chainIsEthereum || chainIsBase;\n\n  if (!chainSupportsUniversalResolver) {\n    return Promise.reject(\n      'ChainId not supported, name resolution is only supported on Ethereum and Base.',\n    );\n  }\n\n  let client = getChainPublicClient(chain);\n\n  if (chainIsBase) {\n    const addressReverseNode = convertReverseNodeToBytes(address, base.id);\n    try {\n      const basename = await client.readContract({\n        abi: L2ResolverAbi,\n        address: RESOLVER_ADDRESSES_BY_CHAIN_ID[chain.id],\n        functionName: 'name',\n        args: [addressReverseNode],\n      });\n      if (basename) {\n        return basename as Basename;\n      }\n    } catch (_error) {\n      // This is a best effort attempt, so we don't need to do anything here.\n    }\n  }\n\n  // Default to mainnet\n  client = getChainPublicClient(mainnet);\n  // ENS username\n  const ensName = await client.getEnsName({\n    address,\n  });\n\n  return ensName ?? null;\n};\n","import { encodePacked, keccak256, namehash } from 'viem';\nimport type { Address } from 'viem';\nimport { convertChainIdToCoinType } from './convertChainIdToCoinType';\n\n/**\n * Convert an address to a reverse node for ENS resolution\n */\nexport const convertReverseNodeToBytes = (\n  address: Address,\n  chainId: number,\n) => {\n  const addressFormatted = address.toLocaleLowerCase() as Address;\n  const addressNode = keccak256(addressFormatted.substring(2) as Address);\n  const chainCoinType = convertChainIdToCoinType(chainId);\n  const baseReverseNode = namehash(\n    `${chainCoinType.toLocaleUpperCase()}.reverse`,\n  );\n  const addressReverseNode = keccak256(\n    encodePacked(['bytes32', 'bytes32'], [baseReverseNode, addressNode]),\n  );\n  return addressReverseNode;\n};\n","import { mainnet } from 'viem/chains';\n\n/**\n * Convert an chainId to a coinType hex for reverse chain resolution\n */\nexport const convertChainIdToCoinType = (chainId: number): string => {\n  // L1 resolvers to addr\n  if (chainId === mainnet.id) {\n    return 'addr';\n  }\n\n  const cointype = (0x80000000 | chainId) >>> 0;\n  return cointype.toString(16).toLocaleUpperCase();\n};\n","import { icon } from '../../styles/theme';\n\nexport const badgeSvg = (\n  <svg\n    role=\"img\"\n    aria-label=\"ock-badgeSvg\"\n    width=\"12\"\n    height=\"12\"\n    viewBox=\"0 0 12 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-full w-full\"\n  >\n    <path\n      d=\"M8.12957 3.73002L5.11957 6.74002L3.77957 5.40002C3.49957 5.12002 3.04957 5.12002 2.76957 5.40002C2.48957 5.68002 2.48957 6.13002 2.76957 6.41002L4.10957 7.75002L4.59957 8.24002C4.90957 8.55002 5.41957 8.55002 5.72957 8.24002L9.17957 4.79002C9.45957 4.51002 9.45957 4.06002 9.17957 3.78002L9.12957 3.73002C8.84957 3.45002 8.39957 3.45002 8.11957 3.73002H8.12957Z\"\n      data-testid=\"ock-badgeSvg\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { useEffect, useState } from 'react';\nimport type { Attestation, UseAttestations } from '../types';\nimport { getAttestations } from '../utils/getAttestations';\n\n/**\n * Fetches EAS Attestations for a given address, chain, and schemaId.\n */\nexport function useAttestations({\n  address,\n  chain,\n  schemaId,\n}: UseAttestations): Attestation[] {\n  if (!schemaId) {\n    return [];\n  }\n  const [attestations, setAttestations] = useState<Attestation[]>([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const foundAttestations = await getAttestations(address, chain, {\n        schemas: [schemaId],\n      });\n      setAttestations(foundAttestations);\n    };\n    fetchData();\n  }, [address, chain, schemaId]);\n\n  return attestations;\n}\n","import { gql } from 'graphql-request';\nimport { getAddress } from 'viem';\nimport type { Address, Chain } from 'viem';\nimport type { Attestation, EASSchemaUid } from '../identity/types';\nimport { createEasGraphQLClient } from './createEasGraphQLClient';\n\n/**\n * Type representing the filter options used for querying EAS Attestations.\n * @typedef {Object} GetAttestationQueryVariablesFilters\n * @property {number} [expirationTime] - Optional Unix timestamp to filter attestations based on expiration time.\n * @property {number} [limit] - Optional limit for the number of results returned.\n * @property {boolean} [revoked] - Optional boolean to filter attestations based on their revoked status.\n * @property {EASSchemaUid[]} [schemas] - Optional array of schema UIDs to filter attestations.\n */\ntype GetAttestationQueryVariablesFilters = {\n  expirationTime?: number;\n  limit: number;\n  revoked: boolean;\n  schemas?: EASSchemaUid[];\n};\n\n/**\n * Alias type for filter options when fetching attestations by filter.\n */\nexport type GetAttestationsByFilterOptions =\n  GetAttestationQueryVariablesFilters;\n\n/**\n * Type representing the variables passed to the EAS Attestations GraphQL query.\n * @typedef {Object} AttestationsQueryVariables\n * @property {string[]} distinct - Fields for which to get distinct records.\n * @property {number} take - Number of records to retrieve.\n * @property {Record<string, any>} where - Conditions for filtering the attestations.\n */\nexport type AttestationsQueryVariables = {\n  distinct: string[];\n  take: number;\n  /* biome-ignore lint: code needs to be deprecated */\n  where: Record<string, any>;\n};\n\n/**\n * Type representing the response of the EAS Attestation GraphQL query.\n * @typedef {Object} GetAttestationQueryResponse\n * @property {Attestation[]} attestations - Array of attestation objects.\n */\nexport type GetAttestationQueryResponse = {\n  attestations: Attestation[];\n};\n\n/**\n * Type representing the response when fetching attestations by filter.\n */\nexport type GetAttestationsByFilterResponse = Attestation[];\n\n/**\n * GraphQL query definition for fetching EAS Attestations for users.\n */\nexport const attestationQuery = gql`\n  query AttestationsForUsers(\n    $where: AttestationWhereInput\n    $distinct: [AttestationScalarFieldEnum!]\n    $take: Int\n  ) {\n    attestations(where: $where, distinct: $distinct, take: $take) {\n      id\n      txid\n      schemaId\n      attester\n      recipient\n      revoked\n      revocationTime\n      expirationTime\n      time\n      timeCreated\n      decodedDataJson\n    }\n  }\n`;\n\n/**\n * Generates query variables for the EAS Attestation GraphQL query based on the given address and filters.\n *\n * @param {Address} address - The Ethereum address of the recipient.\n * @param {GetAttestationQueryVariablesFilters} filters - Filters to apply to the query.\n * @returns {AttestationsQueryVariables} The query variables for the GraphQL query.\n */\nexport function getAttestationQueryVariables(\n  address: Address,\n  filters: GetAttestationQueryVariablesFilters,\n): AttestationsQueryVariables {\n  const checksummedAddress = getAddress(address);\n  /* biome-ignore lint: code needs to be deprecated */\n  const conditions: Record<string, any> = {\n    recipient: { equals: checksummedAddress },\n    revoked: { equals: filters.revoked },\n  };\n\n  if (typeof filters.expirationTime === 'number') {\n    conditions.OR = [\n      { expirationTime: { equals: 0 } },\n      { expirationTime: { gt: filters.expirationTime } },\n    ];\n  }\n\n  if (filters?.schemas && filters.schemas.length > 0) {\n    conditions.schemaId = { in: filters.schemas };\n  }\n\n  return {\n    where: { AND: [conditions] },\n    distinct: ['schemaId'],\n    take: filters.limit,\n  };\n}\n\n/**\n * Fetches Ethereum Attestation Service (EAS) attestations for a given address and chain,\n * optionally filtered by the provided filter options.\n *\n * @param {Address} address - The Ethereum address for which attestations are being queried.\n * @param {Chain} chain - The blockchain chain of interest.\n * @param {GetAttestationsByFilterOptions} filters - Filter options for querying attestations.\n * @returns {Promise<GetAttestationsByFilterResponse>} A promise that resolves to an array of EAS Attestations.\n */\nexport async function getAttestationsByFilter<TChain extends Chain>(\n  address: Address,\n  chain: TChain,\n  filters: GetAttestationsByFilterOptions,\n): Promise<GetAttestationsByFilterResponse> {\n  const easGraphqlClient = createEasGraphQLClient(chain);\n  const attestationQueryVariables = getAttestationQueryVariables(\n    address,\n    filters,\n  );\n\n  const { attestations } = await easGraphqlClient.request<\n    GetAttestationQueryResponse,\n    AttestationsQueryVariables\n  >(attestationQuery, attestationQueryVariables);\n\n  return attestations;\n}\n","import { GraphQLClient } from 'graphql-request';\nimport type { Chain } from 'viem';\nimport { getChainEASGraphQLAPI } from '../identity/utils/easSupportedChains';\n\nexport function createEasGraphQLClient(chain: Chain): GraphQLClient {\n  const endpoint = getChainEASGraphQLAPI(chain);\n  return new GraphQLClient(endpoint);\n}\n","import { base } from 'viem/chains';\nimport type { EASChainDefinition } from '../../identity/types';\n\nexport const easChainBase: EASChainDefinition = {\n  id: base.id,\n  easGraphqlAPI: 'https://base.easscan.org/graphql',\n  schemaUids: [\n    // VERIFIED_COUNTRY\n    // https://base.easscan.org/schema/view/0x1801901fabd0e6189356b4fb52bb0ab855276d84f7ec140839fbd1f6801ca065\n    '0x1801901fabd0e6189356b4fb52bb0ab855276d84f7ec140839fbd1f6801ca065',\n    // VERIFIED_ACCOUNT\n    // https://base.easscan.org/schema/view/0xf8b05c79f090979bf4a80270aba232dff11a10d9ca55c4f88de95317970f0de9\n    '0xf8b05c79f090979bf4a80270aba232dff11a10d9ca55c4f88de95317970f0de9',\n  ],\n};\n","import { baseSepolia } from 'viem/chains';\nimport type { EASChainDefinition } from '../../identity/types';\n\nexport const easChainBaseSepolia: EASChainDefinition = {\n  id: baseSepolia.id,\n  easGraphqlAPI: 'https://base-sepolia.easscan.org/graphql',\n  schemaUids: [\n    // VERIFIED_COUNTRY\n    // https://base-sepolia.easscan.org/schema/view/0xef54ae90f47a187acc050ce631c55584fd4273c0ca9456ab21750921c3a84028\n    '0xef54ae90f47a187acc050ce631c55584fd4273c0ca9456ab21750921c3a84028',\n    // VERIFIED_ACCOUNT\n    // https://base-sepolia.easscan.org/schema/view/0x2f34a2ffe5f87b2f45fbc7c784896b768d77261e2f24f77341ae43751c765a69\n    '0x2f34a2ffe5f87b2f45fbc7c784896b768d77261e2f24f77341ae43751c765a69',\n  ],\n};\n","import { optimism } from 'viem/chains';\nimport type { EASChainDefinition } from '../../identity/types';\n\n// More details in https://docs.optimism.io/chain/identity/schemas\nexport const easChainOptimism: EASChainDefinition = {\n  id: optimism.id,\n  easGraphqlAPI: 'https://optimism.easscan.org/graphql',\n  schemaUids: [\n    // N_A\n    // https://optimism.easscan.org/schema/view/0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929\n    '0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929',\n    // GITCOIN_PASSPORT_SCORES_V1:\n    // https://optimism.easscan.org/schema/view/0x6ab5d34260fca0cfcf0e76e96d439cace6aa7c3c019d7c4580ed52c6845e9c89\n    '0x6ab5d34260fca0cfcf0e76e96d439cace6aa7c3c019d7c4580ed52c6845e9c89',\n    // OPTIMISM_GOVERNANCE_SEASON_4_CO_GRANT_PARTICIPANT:\n    // https://optimism.easscan.org/schema/view/0x401a80196f3805c57b00482ae2b575a9f270562b6b6de7711af9837f08fa0faf\n    '0x401a80196f3805c57b00482ae2b575a9f270562b6b6de7711af9837f08fa0faf',\n  ],\n};\n","import type { Chain } from 'viem';\nimport { easChainBase } from '../../network/definitions/base';\nimport { easChainBaseSepolia } from '../../network/definitions/baseSepolia';\nimport { easChainOptimism } from '../../network/definitions/optimism';\nimport type { EASChainDefinition } from '../types';\n\nexport type EASSupportedChains = Record<number, EASChainDefinition>;\n\nexport const easSupportedChains: EASSupportedChains = {\n  [easChainBase.id]: easChainBase,\n  [easChainBaseSepolia.id]: easChainBaseSepolia,\n  [easChainOptimism.id]: easChainOptimism,\n};\n\n/**\n * Checks if a given blockchain chain is supported by EAS attestations.\n */\nexport function isChainSupported(chain: Chain): boolean {\n  return chain.id in easSupportedChains;\n}\n\n/**\n * Function to get the EAS GraphQL API endpoint for a given blockchain.\n */\nexport function getChainEASGraphQLAPI(chain: Chain): string {\n  return easSupportedChains[chain.id]?.easGraphqlAPI ?? '';\n}\n","import { Children, useMemo } from 'react';\nimport { findComponent } from '../../internal/utils/findComponent';\nimport { cn, color, text } from '../../styles/theme';\nimport { useName } from '../hooks/useName';\nimport type { NameReact } from '../types';\nimport { getSlicedAddress } from '../utils/getSlicedAddress';\nimport { Badge } from './Badge';\nimport { DisplayBadge } from './DisplayBadge';\nimport { useIdentityContext } from './IdentityProvider';\n\n/**\n * Name is a React component that renders the user name from an Ethereum address.\n */\nexport function Name({\n  address = null,\n  className,\n  children,\n  chain,\n  ...props\n}: NameReact) {\n  const { address: contextAddress, chain: contextChain } = useIdentityContext();\n  if (!contextAddress && !address) {\n    console.error(\n      'Name: an Ethereum address must be provided to the Identity or Name component.',\n    );\n    return null;\n  }\n\n  const accountAddress = address ?? contextAddress;\n  const accountChain = chain ?? contextChain;\n\n  const { data: name, isLoading } = useName({\n    address: accountAddress,\n    chain: accountChain,\n  });\n\n  const badge = useMemo(() => {\n    return Children.toArray(children).find(findComponent(Badge));\n  }, [children]);\n\n  if (isLoading) {\n    return <span className={className} />;\n  }\n\n  return (\n    <div className=\"flex items-center gap-1\">\n      <span\n        data-testid=\"ockIdentity_Text\"\n        className={cn(text.headline, color.foreground, className)}\n        {...props}\n      >\n        {name || getSlicedAddress(accountAddress)}\n      </span>\n      {badge && <DisplayBadge address={accountAddress}>{badge}</DisplayBadge>}\n    </div>\n  );\n}\n","import { useQuery } from '@tanstack/react-query';\nimport type { Chain } from 'viem';\nimport { mainnet } from 'viem/chains';\nimport type { GetSocialsReturnType, UseQueryOptions } from '../types';\nimport { getSocials } from '../utils/getSocials';\n\ntype UseSocialsOptions = {\n  ensName: string;\n  chain?: Chain;\n};\n\nexport const useSocials = (\n  { ensName, chain = mainnet }: UseSocialsOptions,\n  queryOptions?: UseQueryOptions,\n) => {\n  const { enabled = true, cacheTime } = queryOptions ?? {};\n  const ensActionKey = `ens-socials-${ensName}-${chain.id}`;\n  return useQuery<GetSocialsReturnType>({\n    queryKey: ['useSocials', ensActionKey],\n    queryFn: async () => {\n      return getSocials({ ensName, chain });\n    },\n    gcTime: cacheTime,\n    enabled,\n    refetchOnWindowFocus: false,\n  });\n};\n","import type { Chain } from 'viem';\nimport { mainnet } from 'viem/chains';\nimport { normalize } from 'viem/ens';\nimport { isBase } from '../../isBase';\nimport { isEthereum } from '../../isEthereum';\nimport { getChainPublicClient } from '../../network/getChainPublicClient';\nimport { RESOLVER_ADDRESSES_BY_CHAIN_ID } from '../constants';\nimport type { GetSocialsReturnType } from '../types';\n\nexport type GetSocials = {\n  ensName: string;\n  chain?: Chain;\n};\n\nexport const getSocials = async ({\n  ensName,\n  chain = mainnet,\n}: GetSocials): Promise<GetSocialsReturnType> => {\n  const chainIsBase = isBase({ chainId: chain.id });\n  const chainIsEthereum = isEthereum({ chainId: chain.id });\n  const chainSupportsUniversalResolver = chainIsEthereum || chainIsBase;\n\n  if (!chainSupportsUniversalResolver) {\n    return Promise.reject(\n      'ChainId not supported, socials resolution is only supported on Ethereum and Base.',\n    );\n  }\n\n  const client = getChainPublicClient(chain);\n  const normalizedName = normalize(ensName);\n\n  const fetchTextRecord = async (key: string) => {\n    try {\n      const result = await client.getEnsText({\n        name: normalizedName,\n        key,\n        universalResolverAddress: RESOLVER_ADDRESSES_BY_CHAIN_ID[chain.id],\n      });\n      return result || null;\n    } catch (error) {\n      console.warn(`Failed to fetch ENS text record for ${key}:`, error);\n      return null;\n    }\n  };\n\n  const [twitter, github, farcaster, website] = await Promise.all([\n    fetchTextRecord('com.twitter'),\n    fetchTextRecord('com.github'),\n    fetchTextRecord('xyz.farcaster'),\n    fetchTextRecord('url'),\n  ]);\n\n  return { twitter, github, farcaster, website };\n};\n","import { icon } from '../../styles/theme';\n\nexport const githubSvg = (\n  <svg\n    data-testid=\"ock-githubSvg\"\n    role=\"img\"\n    aria-label=\"ock-githubSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    className=\"h-full w-full\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { icon } from '../../styles/theme';\n\nexport const twitterSvg = (\n  <svg\n    data-testid=\"ock-twitterSvg\"\n    role=\"img\"\n    aria-label=\"ock-twitterSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"-1 -1 14 14\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    className=\"h-full w-full\"\n  >\n    <g clipPath=\"url(#clip0_6998_47)\">\n      <path\n        d=\"M7.14163 5.07857L11.6089 0H10.5503L6.67137 4.40965L3.57328 0H0L4.68492 6.66817L0 11.9938H1.05866L5.15491 7.33709L8.42672 11.9938H12L7.14137 5.07857H7.14163ZM5.69165 6.72692L5.21697 6.06292L1.44011 0.779407H3.06615L6.11412 5.04337L6.5888 5.70737L10.5508 11.2499H8.92476L5.69165 6.72718V6.72692Z\"\n        className={icon.foreground}\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_6998_47\">\n        <rect width=\"12\" height=\"12\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\n","import { icon } from '../../styles/theme';\n\nexport const warpcastSvg = (\n  <svg\n    data-testid=\"ock-warpcastSvg\"\n    role=\"img\"\n    aria-label=\"ock-warpcastSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"9 9 14 14\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={`h-full w-full ${icon.foreground}`}\n  >\n    <path\n      d=\"M0 8C0 3.58172 3.58172 0 8 0H24C28.4183 0 32 3.58172 32 8V24C32 28.4183 28.4183 32 24 32H8C3.58172 32 0 28.4183 0 24V8Z\"\n      className={icon.inverse}\n    />\n    <path\n      d=\"M11.7305 10H20.115V22H18.8843V16.5032H18.8722C18.7362 14.984 17.4676 13.7935 15.9227 13.7935C14.3779 13.7935 13.1093 14.984 12.9733 16.5032H12.9612V22H11.7305V10Z\"\n      className={icon.foreground}\n    />\n    <path\n      d=\"M9.5 11.7031L10 13.4064H10.4231V20.2967C10.2106 20.2967 10.0385 20.47 10.0385 20.6838V21.1483H9.96154C9.74913 21.1483 9.57691 21.3216 9.57691 21.5354V21.9999H13.8846V21.5354C13.8846 21.3216 13.7124 21.1483 13.5 21.1483H13.4231V20.6838C13.4231 20.47 13.2508 20.2967 13.0384 20.2967H12.5769V11.7031H9.5Z\"\n      className={icon.foreground}\n    />\n    <path\n      d=\"M18.9614 20.2967C18.749 20.2967 18.5768 20.47 18.5768 20.6838V21.1483H18.4998C18.2874 21.1483 18.1152 21.3216 18.1152 21.5354V21.9999H22.4229V21.5354C22.4229 21.3216 22.2507 21.1483 22.0383 21.1483H21.9614V20.6838C21.9614 20.47 21.7892 20.2967 21.5768 20.2967V13.4064H21.9998L22.4998 11.7031H19.4229V20.2967H18.9614Z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { icon } from '../../styles/theme';\n\nexport const websiteSvg = (\n  <svg\n    data-testid=\"ock-websiteSvg\"\n    role=\"img\"\n    aria-label=\"ock-websiteSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 12 12\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    className={`h-full w-full ${icon.foreground}`}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M6 0C9.31356 0 12 2.68644 12 6C12 9.31356 9.31356 12 6 12C2.69689 12 0.0245556 9.35356 0 6C0.0244789 2.64689 2.69689 0 6 0ZM9.34844 9.97867C9.15053 9.88544 8.9422 9.80002 8.72553 9.72346C8.56251 10.0854 8.36772 10.4313 8.13856 10.7412C8.57762 10.5427 8.98439 10.2854 9.34844 9.97867ZM7.95156 9.49742C7.46353 9.38284 6.9427 9.30992 6.4 9.28597V11.1381C7.04791 10.9365 7.58233 10.2766 7.95156 9.49742ZM5.6 9.28597C5.05729 9.30993 4.53646 9.38284 4.04844 9.49742C4.41771 10.2766 4.95209 10.936 5.6 11.1375V9.28597ZM3.27456 9.72347C3.05737 9.80003 2.84956 9.88544 2.65164 9.97868C3.01571 10.2854 3.42248 10.5427 3.86153 10.7412C3.63237 10.4313 3.43758 10.0854 3.27456 9.72347ZM2.05267 9.38492C2.34486 9.2318 2.65736 9.09534 2.98809 8.97763C2.73913 8.21044 2.58288 7.33386 2.54799 6.40008H0.815211C0.901669 7.53597 1.35323 8.5703 2.05277 9.38497L2.05267 9.38492ZM3.75156 8.74742C4.33229 8.60263 4.95367 8.512 5.6 8.48545V6.4H3.34844C3.3823 7.25677 3.52553 8.05522 3.75157 8.74733L3.75156 8.74742ZM6.4 8.48545C7.04636 8.51201 7.66767 8.60263 8.24844 8.74794C8.47449 8.05523 8.61771 7.25728 8.65157 6.40061L6.40001 6.40009L6.4 8.48545ZM9.012 8.97763C9.34273 9.09534 9.65576 9.2318 9.94742 9.38492C10.6469 8.56982 11.0984 7.53603 11.185 6.40003H9.4522C9.4173 7.33389 9.26106 8.21048 9.0121 8.97759L9.012 8.97763ZM9.94742 2.61508C9.65523 2.7682 9.34273 2.90466 9.012 3.02237C9.26096 3.78956 9.41721 4.66614 9.4521 5.59992H11.1849C11.0984 4.46403 10.6469 3.4297 9.94732 2.61503L9.94742 2.61508ZM8.24853 3.25258C7.6678 3.39737 7.04642 3.488 6.40009 3.51456V5.6H8.65164C8.61779 4.74323 8.47456 3.94478 8.24852 3.25267L8.24853 3.25258ZM5.60009 3.51456C4.95373 3.48799 4.33242 3.39737 3.75164 3.25206C3.5256 3.94477 3.38238 4.74328 3.34852 5.59994H5.60008L5.60009 3.51456ZM2.98809 3.02237C2.65736 2.90466 2.34433 2.7682 2.05267 2.61508C1.35319 3.43018 0.901667 4.46397 0.815111 5.59997H2.54789C2.58278 4.66611 2.73903 3.78952 2.98799 3.02241L2.98809 3.02237ZM2.65163 2.02132C2.84954 2.11455 3.05788 2.19997 3.27454 2.27653C3.43757 1.91456 3.63236 1.56872 3.86152 1.25882C3.42246 1.45726 3.01569 1.71456 2.65163 2.02132ZM4.04852 2.50257C4.53654 2.61714 5.05738 2.69007 5.60008 2.71402V0.861911C4.95217 1.06348 4.41774 1.72337 4.04852 2.50258V2.50257ZM6.40008 2.71402C6.94279 2.69006 7.46362 2.61715 7.95163 2.50257C7.58237 1.7234 7.04747 1.06346 6.40008 0.8619V2.71402ZM8.72552 2.27652C8.94271 2.19996 9.15052 2.11454 9.34843 2.02131C8.98437 1.71454 8.5776 1.45724 8.13855 1.25881C8.36771 1.56923 8.5625 1.91454 8.72552 2.27652Z\"\n    />\n  </svg>\n);\n","import { useEffect, useState } from 'react';\n\n// Tailwind breakpoints\nconst BREAKPOINTS = {\n  sm: '(max-width: 640px)',\n  md: '(min-width: 641px) and (max-width: 768px)',\n  lg: '(min-width: 769px) and (max-width: 1023px)',\n  xl: '(min-width: 1024px) and (max-width: 1279px)',\n  '2xl': '(min-width: 1280px)',\n};\n\nexport function useBreakpoints() {\n  const [currentBreakpoint, setCurrentBreakpoint] = useState<\n    string | undefined\n  >(undefined);\n\n  // handles SSR case where window would be undefined,\n  // once component mounts on client, hook sets correct breakpoint\n  useEffect(() => {\n    // get the current breakpoint based on media queries\n    const getCurrentBreakpoint = () => {\n      const entries = Object.entries(BREAKPOINTS) as [string, string][];\n      for (const [key, query] of entries) {\n        if (window.matchMedia(query).matches) {\n          return key;\n        }\n      }\n      return 'md';\n    };\n\n    // set initial breakpoint\n    setCurrentBreakpoint(getCurrentBreakpoint());\n\n    // listen changes in the window size\n    const handleResize = () => {\n      setCurrentBreakpoint(getCurrentBreakpoint());\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return currentBreakpoint;\n}\n","import {\n  Children,\n  cloneElement,\n  isValidElement,\n  useCallback,\n  useMemo,\n} from 'react';\nimport { useAccount } from 'wagmi';\nimport { Identity } from '../../identity/components/Identity';\nimport { background, cn } from '../../styles/theme';\nimport type { WalletBottomSheetReact } from '../types';\nimport { useWalletContext } from './WalletProvider';\n\nexport function WalletBottomSheet({\n  children,\n  className,\n}: WalletBottomSheetReact) {\n  const { isOpen, setIsOpen } = useWalletContext();\n  const { address } = useAccount();\n\n  const childrenArray = useMemo(() => {\n    return Children.toArray(children).map((child) => {\n      if (isValidElement(child) && child.type === Identity) {\n        // @ts-ignore\n        return cloneElement(child, { address });\n      }\n      return child;\n    });\n  }, [children, address]);\n\n  const handleOverlayClick = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const handleEscKeyPress = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (event.key === 'Escape') {\n        setIsOpen(false);\n      }\n    },\n    [setIsOpen],\n  );\n\n  if (!address) {\n    return null;\n  }\n\n  return (\n    <>\n      {isOpen && (\n        <div\n          className=\"fixed inset-0 z-40 bg-black bg-opacity-20\"\n          onClick={handleOverlayClick}\n          onKeyDown={handleEscKeyPress}\n          role=\"button\"\n          tabIndex={0}\n        />\n      )}\n      <div\n        className={cn(\n          background.default,\n          'fixed right-0 bottom-0 left-0 z-50',\n          'transform rounded-[20px_20px_0_0] p-4 transition-transform',\n          `${isOpen ? 'translate-y-0' : 'translate-y-full'}`,\n          className,\n        )}\n        data-testid=\"ockWalletBottomSheet\"\n      >\n        {childrenArray}\n      </div>\n    </>\n  );\n}\n","import { mainnet } from 'viem/chains';\nimport { getChainPublicClient } from '../../network/getChainPublicClient';\nimport type { GetAddress, GetAddressReturnType } from '../types';\n\n/**\n * Get address from ENS name or Basename.\n */\nexport const getAddress = async ({\n  name,\n  chain = mainnet,\n}: GetAddress): Promise<GetAddressReturnType> => {\n  const client = getChainPublicClient(chain);\n  // Gets address for ENS name.\n  const address = await client.getEnsAddress({\n    name,\n  });\n  return address ?? null;\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { mainnet } from 'viem/chains';\nimport type {\n  GetAddressReturnType,\n  UseAddressOptions,\n  UseQueryOptions,\n} from '../types';\nimport { getAddress } from '../utils/getAddress';\n\nexport const useAddress = (\n  { name, chain = mainnet }: UseAddressOptions,\n  queryOptions?: UseQueryOptions,\n) => {\n  const { enabled = true, cacheTime } = queryOptions ?? {};\n  const actionKey = `useAddress-${name}-${chain.id}`;\n  return useQuery<GetAddressReturnType>({\n    queryKey: ['useAddress', actionKey],\n    queryFn: async () => {\n      return await getAddress({ name, chain });\n    },\n    gcTime: cacheTime,\n    enabled,\n    refetchOnWindowFocus: false,\n  });\n};\n","import { useCallback } from 'react';\nimport { useDisconnect } from 'wagmi';\nimport { disconnectSvg } from '../../internal/svg/disconnectSvg';\nimport { cn, color, text as dsText, pressable } from '../../styles/theme';\nimport type { WalletDropdownDisconnectReact } from '../types';\n\nexport function WalletDropdownDisconnect({\n  className,\n  text = 'Disconnect',\n}: WalletDropdownDisconnectReact) {\n  const { disconnect, connectors } = useDisconnect();\n  const handleDisconnect = useCallback(() => {\n    // Disconnect all the connectors (wallets). Usually only one is connected\n    connectors.map((connector) => disconnect({ connector }));\n  }, [disconnect, connectors]);\n\n  return (\n    <button\n      type=\"button\"\n      className={cn(\n        pressable.default,\n        color.foreground,\n        'relative flex w-full items-center px-4 pt-3 pb-4',\n        className,\n      )}\n      onClick={handleDisconnect}\n    >\n      <div className=\"absolute left-4 flex h-[1.125rem] w-[1.125rem] items-center justify-center\">\n        {disconnectSvg}\n      </div>\n      <span className={cn(dsText.body, 'pl-6')}>{text}</span>\n    </button>\n  );\n}\n","import { icon } from '../../styles/theme';\n\nexport const disconnectSvg = (\n  <svg\n    role=\"img\"\n    aria-label=\"ock-disconnect-svg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 16 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M11.0668 0.91803L11.0668 2.93852L2.02049 2.93852L2.02049 15.0615L11.0668 15.0615L11.0668 17.082L-7.06549e-07 17.082L0 0.918029L11.0668 0.91803Z\"\n      className={icon.foreground}\n    />\n    <path\n      d=\"M12.3273 12.8963L16.0002 9.02606L12.346 4.95902L10.843 6.30941L12.3623 8.00032L5.53321 8.00032L5.53321 10.0208L12.2706 10.0208L10.8617 11.5054L12.3273 12.8963Z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { isValidElement, useMemo } from 'react';\nimport { coinbasePaySvg } from '../svg/coinbasePaySvg';\nimport { fundWalletSvg } from '../svg/fundWallet';\nimport { swapSettingsSvg } from '../svg/swapSettings';\nimport { walletSvg } from '../svg/walletSvg';\n\nexport const useIcon = ({ icon }: { icon?: React.ReactNode }) => {\n  return useMemo(() => {\n    if (icon === undefined) {\n      return null;\n    }\n    switch (icon) {\n      case 'coinbasePay':\n        return coinbasePaySvg;\n      case 'fundWallet':\n        return fundWalletSvg;\n      case 'swapSettings':\n        return swapSettingsSvg;\n      case 'wallet':\n        return walletSvg;\n    }\n    if (isValidElement(icon)) {\n      return icon;\n    }\n  }, [icon]);\n};\n","export const coinbasePaySvg = (\n  <svg\n    role=\"img\"\n    aria-label=\"ock-coinbasePaySvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M10.0145 14.1666C7.82346 14.1666 6.04878 12.302 6.04878 9.99996C6.04878 7.69788 7.82346 5.83329 10.0145 5.83329C11.9776 5.83329 13.6069 7.33677 13.9208 9.30552H17.9163C17.5793 5.02774 14.172 1.66663 10.0145 1.66663C5.63568 1.66663 2.08301 5.39926 2.08301 9.99996C2.08301 14.6007 5.63568 18.3333 10.0145 18.3333C14.172 18.3333 17.5793 14.9722 17.9163 10.6944H13.9208C13.6069 12.6632 11.9776 14.1666 10.0145 14.1666Z\"\n      fill=\"#f9fafb\"\n    />\n  </svg>\n);\n","import { icon } from '../../styles/theme';\n\nexport const fundWalletSvg = (\n  <svg\n    role=\"img\"\n    aria-label=\"ock-fundWalletSvg\"\n    width=\"18\"\n    height=\"18\"\n    viewBox=\"0 0 18 18\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M13.5 4.5C13.5 6.15685 14.8431 7.5 16.5 7.5V10.5C14.8431 10.5 13.5 11.8431 13.5 13.5H4.5C4.5 11.8431 3.15685 10.5 1.5 10.5L1.5 13.5V7.5C3.15685 7.5 4.5 6.15685 4.5 4.5H13.5ZM0 3V15H18V3H0ZM11.25 9C11.25 7.75736 10.2426 6.75 9 6.75C7.75736 6.75 6.75 7.75736 6.75 9C6.75 10.2426 7.75736 11.25 9 11.25C10.2426 11.25 11.25 10.2426 11.25 9Z\"\n      fill=\"#0A0B0D\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { icon } from '../../styles/theme';\n\nexport const swapSettingsSvg = (\n  <svg\n    role=\"img\"\n    aria-label=\"ock-swapSettingsSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 19 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M8.92071 5.89742e-08C8.00371 5.89742e-08 7.22171 0.663 7.07071 1.567L6.89271 2.639C6.87271 2.759 6.77771 2.899 6.59571 2.987C6.25306 3.15171 5.92344 3.34226 5.60971 3.557C5.44371 3.672 5.27571 3.683 5.15971 3.64L4.14271 3.258C3.72695 3.10224 3.26941 3.09906 2.85152 3.24904C2.43364 3.39901 2.08254 3.69241 1.86071 4.077L0.938708 5.674C0.716797 6.05836 0.638423 6.50897 0.717525 6.94569C0.796628 7.3824 1.02808 7.7769 1.37071 8.059L2.21071 8.751C2.30571 8.829 2.38071 8.98 2.36471 9.181C2.33621 9.56013 2.33621 9.94087 2.36471 10.32C2.37971 10.52 2.30571 10.672 2.21171 10.75L1.37071 11.442C1.02808 11.7241 0.796628 12.1186 0.717525 12.5553C0.638423 12.992 0.716797 13.4426 0.938708 13.827L1.86071 15.424C2.08269 15.8084 2.43387 16.1016 2.85173 16.2514C3.2696 16.4012 3.72706 16.3978 4.14271 16.242L5.16171 15.86C5.27671 15.817 5.44471 15.829 5.61171 15.942C5.92371 16.156 6.25271 16.347 6.59671 16.512C6.77871 16.6 6.87371 16.74 6.89371 16.862L7.07171 17.933C7.22271 18.837 8.00471 19.5 8.92171 19.5H10.7657C11.6817 19.5 12.4647 18.837 12.6157 17.933L12.7937 16.861C12.8137 16.741 12.9077 16.601 13.0907 16.512C13.4347 16.347 13.7637 16.156 14.0757 15.942C14.2427 15.828 14.4107 15.817 14.5257 15.86L15.5457 16.242C15.9612 16.3972 16.4183 16.4001 16.8357 16.2502C17.2532 16.1002 17.6039 15.8071 17.8257 15.423L18.7487 13.826C18.9706 13.4416 19.049 12.991 18.9699 12.5543C18.8908 12.1176 18.6593 11.7231 18.3167 11.441L17.4767 10.749C17.3817 10.671 17.3067 10.52 17.3227 10.319C17.3511 9.93987 17.3511 9.55913 17.3227 9.18C17.3067 8.98 17.3817 8.828 17.4757 8.75L18.3157 8.058C19.0237 7.476 19.2067 6.468 18.7487 5.673L17.8267 4.076C17.6047 3.69159 17.2535 3.3984 16.8357 3.24861C16.4178 3.09883 15.9604 3.10215 15.5447 3.258L14.5247 3.64C14.4107 3.683 14.2427 3.671 14.0757 3.557C13.7623 3.3423 13.433 3.15175 13.0907 2.987C12.9077 2.9 12.8137 2.76 12.7937 2.639L12.6147 1.567C12.5418 1.12906 12.3158 0.731216 11.977 0.444267C11.6383 0.157318 11.2087 -0.00011124 10.7647 5.89742e-08H8.92171H8.92071ZM9.84271 13.5C10.8373 13.5 11.7911 13.1049 12.4944 12.4017C13.1976 11.6984 13.5927 10.7446 13.5927 9.75C13.5927 8.75544 13.1976 7.80161 12.4944 7.09835C11.7911 6.39509 10.8373 6 9.84271 6C8.84815 6 7.89432 6.39509 7.19106 7.09835C6.4878 7.80161 6.09271 8.75544 6.09271 9.75C6.09271 10.7446 6.4878 11.6984 7.19106 12.4017C7.89432 13.1049 8.84815 13.5 9.84271 13.5Z\"\n      fill=\"#6B7280\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { icon } from '../../styles/theme';\n\nexport const walletSvg = (\n  <svg\n    role=\"img\"\n    aria-label=\"ock-walletSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M0 10C0 15.5222 4.47778 20 10 20C15.5222 20 20 15.5222 20 10C20 4.47778 15.5222 0 10 0C4.47778 0 0 4.47778 0 10ZM7.44444 6.77778C7.075 6.77778 6.77778 7.075 6.77778 7.44444V12.5556C6.77778 12.925 7.075 13.2222 7.44444 13.2222H12.5556C12.925 13.2222 13.2222 12.925 13.2222 12.5556V7.44444C13.2222 7.075 12.925 6.77778 12.5556 6.77778H7.44444Z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { base } from 'viem/chains';\nimport { useAccount } from 'wagmi';\nimport { useName } from '../../identity/hooks/useName';\nimport { Spinner } from '../../internal/components/Spinner';\nimport { basenameSvg } from '../../internal/svg/basenameSvg';\nimport { cn, color, pressable, text } from '../../styles/theme';\nimport type { WalletDropdownBasenameReact } from '../types';\n\nexport function WalletDropdownBasename({\n  className,\n}: WalletDropdownBasenameReact) {\n  const { address } = useAccount();\n\n  if (!address) {\n    return null;\n  }\n\n  const { data: basename, isLoading } = useName({\n    address,\n    chain: base,\n  });\n\n  const hasBaseUserName = !!basename;\n  const title = hasBaseUserName ? 'Profile' : 'Claim Basename';\n  const href = hasBaseUserName\n    ? `https://www.base.org/name/${basename}`\n    : 'https://www.base.org/names';\n\n  return (\n    <a\n      className={cn(\n        pressable.default,\n        color.foreground,\n        'relative flex items-center px-4 py-3',\n        className,\n      )}\n      href={href}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <div className=\"-translate-y-1/2 absolute top-1/2 left-4 flex h-[1.125rem] w-[1.125rem] items-center justify-center\">\n        {basenameSvg}\n      </div>\n      <div className=\"flex w-full items-center pl-6\">\n        {isLoading ? (\n          <Spinner />\n        ) : (\n          <>\n            <span className={cn(text.body)}>{title}</span>\n            {!hasBaseUserName && (\n              <span\n                className={cn(\n                  'ml-2 rounded-full bg-[#E0E7FF] px-2 py-0.5 text-center font-bold font-inter text-[#4F46E5] text-[0.6875rem] uppercase leading-none',\n                )}\n              >\n                NEW\n              </span>\n            )}\n          </>\n        )}\n      </div>\n    </a>\n  );\n}\n","import { icon } from '../../styles/theme';\n\nexport const basenameSvg = (\n  <svg\n    data-testid=\"ock-basenameSvg\"\n    role=\"img\"\n    aria-label=\"ock-basenameSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 20 20\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    className=\"h-full w-full\"\n  >\n    <g id=\"Icons/User\">\n      <path\n        id=\"Vector\"\n        d=\"M10 20C4.47715 20 0 15.5228 0 10C0 4.47715 4.47715 0 10 0C15.5228 0 20 4.47715 20 10C20 15.5228 15.5228 20 10 20ZM12.832 6.9987C12.832 5.43461 11.5641 4.16666 10 4.16666C8.43594 4.16666 7.168 5.43461 7.168 6.9987C7.168 8.56279 8.43594 9.83073 10 9.83073C11.5641 9.83073 12.832 8.56279 12.832 6.9987ZM5.67266 11.6810L4.76738 14.0938C6.10704 15.4238 7.95093 16.2465 9.98699 16.2500L10.0130 16.2500C12.0491 16.2465 13.8930 15.4238 15.2326 14.0938L14.3273 11.6810C14.0026 10.8125 13.1794 10.2385 12.2581 10.2159C12.2279 10.2385 11.2310 10.9635 10.0000 10.9635C8.76903 10.9635 7.77215 10.2385 7.74194 10.2159C6.82059 10.2310 5.9974 10.8125 5.67266 11.6810Z\"\n        className={icon.foreground}\n      />\n    </g>\n  </svg>\n);\n","import { useCallback, useMemo } from 'react';\nimport { useGetFundingUrl } from '../../fund/hooks/useGetFundingUrl';\nimport { getFundingPopupSize } from '../../fund/utils/getFundingPopupSize';\nimport { useIcon } from '../../internal/hooks/useIcon';\nimport { openPopup } from '../../internal/utils/openPopup';\nimport { cn, color, pressable, text as themeText } from '../../styles/theme';\nimport type { WalletDropdownFundLinkReact } from '../types';\n\nexport function WalletDropdownFundLink({\n  className,\n  fundingUrl,\n  icon = 'fundWallet',\n  openIn = 'popup',\n  popupSize = 'md',\n  rel,\n  target,\n  text = 'Fund wallet',\n}: WalletDropdownFundLinkReact) {\n  // If we can't get a funding URL, this component will be a no-op and render a disabled link\n  const fundingUrlToRender = fundingUrl ?? useGetFundingUrl();\n  const iconSvg = useIcon({ icon });\n\n  const handleClick = useCallback(\n    (e: React.MouseEvent) => {\n      e.preventDefault();\n      if (fundingUrlToRender) {\n        const { height, width } = getFundingPopupSize(\n          popupSize,\n          fundingUrlToRender,\n        );\n        openPopup({\n          url: fundingUrlToRender,\n          height,\n          width,\n          target,\n        });\n      }\n    },\n    [fundingUrlToRender, popupSize, target],\n  );\n\n  const overrideClassName = cn(\n    pressable.default,\n    color.foreground,\n    // Disable hover effects if there is no funding URL\n    !fundingUrlToRender && 'pointer-events-none',\n    'relative flex items-center px-4 py-3 w-full',\n    className,\n  );\n\n  const linkContent = useMemo(\n    () => (\n      // We put disabled on the content wrapper rather than the button/link because we dont wan't to change the\n      // background color of the dropdown item, just the text and icon\n      <span className={cn(!fundingUrlToRender && pressable.disabled)}>\n        <div className=\"-translate-y-1/2 absolute top-1/2 left-4 flex h-[1.125rem] w-[1.125rem] items-center justify-center\">\n          {iconSvg}\n        </div>\n        <span className={cn(themeText.body, 'pl-6')}>{text}</span>\n      </span>\n    ),\n    [fundingUrlToRender, iconSvg, text],\n  );\n\n  if (openIn === 'tab') {\n    return (\n      <a\n        className={overrideClassName}\n        href={fundingUrlToRender}\n        target={target}\n        rel={rel}\n      >\n        {linkContent}\n      </a>\n    );\n  }\n\n  return (\n    <button type=\"button\" className={overrideClassName} onClick={handleClick}>\n      {linkContent}\n    </button>\n  );\n}\n","import { useMemo } from 'react';\nimport { useAccount } from 'wagmi';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport { useIsWalletACoinbaseSmartWallet } from '../../wallet/hooks/useIsWalletACoinbaseSmartWallet';\nimport { getCoinbaseSmartWalletFundUrl } from '../utils/getCoinbaseSmartWalletFundUrl';\nimport { getOnrampBuyUrl } from '../utils/getOnrampBuyUrl';\n\n/**\n * Gets the correct funding URL based on the connected wallet. If a Coinbase Smart Wallet is connected it will send the\n * user to keys.coinbase.com, otherwise it will send them to pay.coinbase.com.\n * @returns the funding URL and optional popup dimensions if the URL requires them\n */\nexport function useGetFundingUrl(): string | undefined {\n  const { projectId, chain: defaultChain } = useOnchainKit();\n  const { address, chain: accountChain } = useAccount();\n  const isCoinbaseSmartWallet = useIsWalletACoinbaseSmartWallet();\n\n  // If the connected wallet's active chain is not included in the Wagmi config, accountChain will be undefined. If this\n  // is the case, fall back to the default chain specified in the OnchainKit config.\n  const chain = accountChain || defaultChain;\n\n  return useMemo(() => {\n    if (isCoinbaseSmartWallet) {\n      return getCoinbaseSmartWalletFundUrl();\n    }\n\n    if (projectId === null || address === undefined) {\n      return undefined;\n    }\n\n    return getOnrampBuyUrl({\n      projectId,\n      addresses: { [address]: [chain.name.toLowerCase()] },\n    });\n  }, [isCoinbaseSmartWallet, projectId, address, chain]);\n}\n","import { useAccount } from 'wagmi';\nimport { useCapabilitiesSafe } from '../../internal/hooks/useCapabilitiesSafe';\nimport { useOnchainKit } from '../../useOnchainKit';\n\n// From https://github.com/wevm/wagmi/blob/472993b3c0d5941e524e67a0f51b32af5bb9e48f/packages/connectors/src/coinbaseWallet.ts#L90\nconst COINBASE_WALLET_SDK_CONNECTOR_ID = 'coinbaseWalletSDK';\n\n/**\n * Checks the wallet connector ID and the wallet capabilities to determine if the currently connected wallet is a\n * Coinbase Smart Wallet.\n * @returns true if the wallet is a Coinbase Smart Wallet, false otherwise.\n */\nexport function useIsWalletACoinbaseSmartWallet(): boolean {\n  const { chain } = useOnchainKit();\n  const { connector } = useAccount();\n  const walletCapabilities = useCapabilitiesSafe({\n    chainId: chain.id,\n  });\n\n  return (\n    connector?.id === COINBASE_WALLET_SDK_CONNECTOR_ID &&\n    walletCapabilities.atomicBatch?.supported === true\n  );\n}\n","import { ENTRYPOINT_ADDRESS_V06 } from 'permissionless';\nimport type { IsValidAAEntrypointOptions } from '../types';\n\n/**\n * Verify the Account-Abstraction entrypoint before sponsoring a transaction.\n */\nexport function isValidAAEntrypoint({\n  entrypoint,\n}: IsValidAAEntrypointOptions): boolean {\n  if (entrypoint.toLowerCase() !== ENTRYPOINT_ADDRESS_V06.toLowerCase()) {\n    return false;\n  }\n  return true;\n}\n","import { checksumAddress, decodeAbiParameters } from 'viem';\nimport type { Address, BlockTag, Hex } from 'viem';\nimport {\n  CB_SW_FACTORY_ADDRESS,\n  CB_SW_PROXY_BYTECODE,\n  CB_SW_V1_IMPLEMENTATION_ADDRESS,\n  ERC_1967_PROXY_IMPLEMENTATION_SLOT,\n} from '../constants';\nimport type {\n  IsWalletACoinbaseSmartWalletOptions,\n  IsWalletACoinbaseSmartWalletResponse,\n} from '../types';\n\n/**\n * Validates a User Operation by checking if the sender address\n * is a proxy with the expected bytecode.\n */\nexport async function isWalletACoinbaseSmartWallet({\n  client,\n  userOp,\n}: IsWalletACoinbaseSmartWalletOptions): Promise<IsWalletACoinbaseSmartWalletResponse> {\n  try {\n    const code = await client.getBytecode({ address: userOp.sender });\n\n    if (!code) {\n      // no code at address, check that the initCode is deploying a Coinbase Smart Wallet\n      // factory address is first 20 bytes of initCode after '0x'\n      const factoryAddress = userOp.initCode.slice(0, 42) as Address;\n      if (\n        checksumAddress(factoryAddress) !==\n        checksumAddress(CB_SW_FACTORY_ADDRESS)\n      ) {\n        return {\n          isCoinbaseSmartWallet: false,\n          error: 'Invalid factory address',\n          code: 'W_ERR_1',\n        };\n      }\n      return { isCoinbaseSmartWallet: true };\n    }\n\n    // Verify if the sender address bytecode matches the Coinbase Smart Wallet proxy bytecode\n    if (code !== CB_SW_PROXY_BYTECODE) {\n      return {\n        isCoinbaseSmartWallet: false,\n        error: 'Invalid bytecode',\n        code: 'W_ERR_2',\n      };\n    }\n  } catch (error) {\n    console.error('Error retrieving bytecode:', error);\n    return {\n      isCoinbaseSmartWallet: false,\n      error: 'Error retrieving bytecode',\n      code: 'W_ERR_3',\n    };\n  }\n\n  let implementation: Hex;\n  try {\n    implementation = await client.request<{\n      Parameters: [Address, Hex, BlockTag];\n      ReturnType: Hex;\n    }>({\n      method: 'eth_getStorageAt',\n      params: [userOp.sender, ERC_1967_PROXY_IMPLEMENTATION_SLOT, 'latest'],\n    });\n  } catch (error) {\n    console.error('Error retrieving implementation address:', error);\n    return {\n      isCoinbaseSmartWallet: false,\n      error: 'Error retrieving implementation address',\n      code: 'W_ERR_4',\n    };\n  }\n\n  // Decode the implementation address from the retrieved storage data\n  const implementationAddress = decodeAbiParameters(\n    [{ type: 'address' }],\n    implementation,\n  )[0];\n\n  // Verify if the implementation address matches the expected Coinbase Smart Wallet address\n  if (\n    checksumAddress(implementationAddress) !==\n    checksumAddress(CB_SW_V1_IMPLEMENTATION_ADDRESS)\n  ) {\n    return {\n      isCoinbaseSmartWallet: false,\n      error: 'Invalid implementation address',\n      code: 'W_ERR_5',\n    };\n  }\n\n  return { isCoinbaseSmartWallet: true };\n}\n","import { Spinner } from '../../internal/components/Spinner';\nimport {\n  background,\n  border,\n  cn,\n  color,\n  pressable,\n  text,\n} from '../../styles/theme';\nimport { ConnectWallet } from '../../wallet';\nimport type { SwapButtonReact } from '../types';\nimport { useSwapContext } from './SwapProvider';\n\nexport function SwapButton({ className, disabled = false }: SwapButtonReact) {\n  const {\n    address,\n    to,\n    from,\n    lifecycleStatus: { statusName },\n    handleSubmit,\n  } = useSwapContext();\n\n  const isLoading =\n    to.loading ||\n    from.loading ||\n    statusName === 'transactionPending' ||\n    statusName === 'transactionApproved';\n\n  const isDisabled =\n    !from.amount ||\n    !from.token ||\n    !to.amount ||\n    !to.token ||\n    disabled ||\n    isLoading;\n\n  // disable swap if to and from token are the same\n  const isSwapInvalid = to.token?.address === from.token?.address;\n\n  // prompt user to connect wallet\n  if (!isDisabled && !address) {\n    return <ConnectWallet className=\"mt-4 w-full\" />;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className={cn(\n        background.primary,\n        border.radius,\n        'w-full rounded-xl',\n        'mt-4 px-4 py-3',\n        isDisabled && pressable.disabled,\n        text.headline,\n        className,\n      )}\n      onClick={() => handleSubmit()}\n      disabled={isDisabled || isSwapInvalid}\n      data-testid=\"ockSwapButton_Button\"\n    >\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <span className={cn(text.headline, color.inverse)}>Swap</span>\n      )}\n    </button>\n  );\n}\n","import {\n  LOW_LIQUIDITY_ERROR_CODE,\n  SwapMessage,\n  TOO_MANY_REQUESTS_ERROR_CODE,\n  USER_REJECTED_ERROR_CODE,\n} from '../constants';\nimport type { SwapError } from '../types';\n\nexport function getErrorMessage(error: SwapError): string | undefined {\n  // error states handled below\n  if (error.code === TOO_MANY_REQUESTS_ERROR_CODE) {\n    return SwapMessage.TOO_MANY_REQUESTS;\n  }\n  if (error.code === LOW_LIQUIDITY_ERROR_CODE) {\n    return SwapMessage.LOW_LIQUIDITY;\n  }\n  if (error.code === USER_REJECTED_ERROR_CODE) {\n    return SwapMessage.USER_REJECTED;\n  }\n  // handle general error\n  return error.message;\n}\n","import { SwapMessage } from '../constants';\nimport type { GetSwapMessageParams } from '../types';\nimport { getErrorMessage } from './getErrorMessage';\n\nexport function getSwapMessage({\n  address,\n  from,\n  lifecycleStatus,\n  to,\n}: GetSwapMessageParams) {\n  // handle specific error codes\n  if (lifecycleStatus.statusName === 'error') {\n    return getErrorMessage(lifecycleStatus.statusData);\n  }\n\n  // handle balance error\n  if (from.error || to.error) {\n    return SwapMessage.BALANCE_ERROR;\n  }\n  // handle amount exceeds balance (if connected)\n  if (address && Number(from.balance) < Number(from.amount)) {\n    return SwapMessage.INSUFFICIENT_BALANCE;\n  }\n  // handle pending transaction\n  if (lifecycleStatus.statusName === 'transactionPending') {\n    return SwapMessage.CONFIRM_IN_WALLET;\n  }\n  // handle loading states\n  if (lifecycleStatus.statusName === 'transactionApproved') {\n    return SwapMessage.SWAP_IN_PROGRESS;\n  }\n  if (to.loading || from.loading) {\n    return SwapMessage.FETCHING_QUOTE;\n  }\n  // missing required fields\n  if (lifecycleStatus.statusData.isMissingRequiredField) {\n    return SwapMessage.INCOMPLETE_FIELD;\n  }\n\n  return '';\n}\n","import { cn, color, text } from '../../styles/theme';\nimport type { SwapMessageReact } from '../types';\nimport { getSwapMessage } from '../utils/getSwapMessage';\nimport { useSwapContext } from './SwapProvider';\n\nexport function SwapMessage({ className }: SwapMessageReact) {\n  const { address, to, from, lifecycleStatus } = useSwapContext();\n\n  const message = getSwapMessage({\n    address,\n    from,\n    lifecycleStatus,\n    to,\n  });\n\n  return (\n    <div\n      className={cn(\n        'flex h-7 pt-2',\n        text.label2,\n        color.foregroundMuted,\n        className,\n      )}\n      data-testid=\"ockSwapMessage_Message\"\n    >\n      {message}\n    </div>\n  );\n}\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useIcon } from '../../internal/hooks/useIcon';\nimport { background, border, cn, pressable, text } from '../../styles/theme';\nimport { useBreakpoints } from '../../useBreakpoints';\nimport type { SwapSettingsReact } from '../types';\nimport { SwapSettingsSlippageLayout } from './SwapSettingsSlippageLayout';\nimport { SwapSettingsSlippageLayoutBottomSheet } from './SwapSettingsSlippageLayoutBottomSheet';\n\nexport function SwapSettings({\n  children,\n  className,\n  icon = 'swapSettings',\n  text: buttonText = '',\n}: SwapSettingsReact) {\n  const breakpoint = useBreakpoints();\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  const handleToggle = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen]);\n\n  const handleClickOutsideComponent = useCallback((event: MouseEvent) => {\n    if (\n      dropdownRef.current &&\n      !dropdownRef.current.contains(event.target as Node)\n    ) {\n      setIsOpen(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutsideComponent);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutsideComponent);\n    };\n  }, [handleClickOutsideComponent]);\n\n  const iconSvg = useIcon({ icon });\n\n  return (\n    <div\n      className={cn(\n        'flex w-full items-center justify-end space-x-1',\n        className,\n      )}\n      data-testid=\"ockSwapSettings_Settings\"\n    >\n      {buttonText && <span className={cn(text.body)}>{buttonText}</span>}\n      <div className={cn('relative', isOpen && 'group')} ref={dropdownRef}>\n        <button\n          type=\"button\"\n          aria-label=\"Toggle swap settings\"\n          className={cn(\n            pressable.default,\n            'rounded-full p-2 opacity-50 transition-opacity hover:opacity-100',\n          )}\n          onClick={handleToggle}\n        >\n          <div className=\"h-[1.125rem] w-[1.125rem]\">{iconSvg}</div>\n        </button>\n        {breakpoint === 'sm' ? (\n          <div\n            className={cn(\n              background.inverse,\n              pressable.shadow,\n              'fixed inset-x-0 z-50 transition-[bottom] duration-300 ease-in-out',\n              '-bottom-[12.875rem] h-[12.875rem] rounded-t-lg group-[]:bottom-0',\n              className,\n            )}\n            data-testid=\"ockSwapSettingsSlippageLayoutBottomSheet_container\"\n          >\n            <SwapSettingsSlippageLayoutBottomSheet className={className}>\n              {children}\n            </SwapSettingsSlippageLayoutBottomSheet>\n          </div>\n        ) : (\n          isOpen && (\n            <div\n              className={cn(\n                border.radius,\n                background.default,\n                pressable.shadow,\n                'absolute right-0 z-10 mt-1 w-[21.75rem] rounded-lg',\n              )}\n              data-testid=\"ockSwapSettingsDropdown\"\n            >\n              <SwapSettingsSlippageLayout>\n                {children}\n              </SwapSettingsSlippageLayout>\n            </div>\n          )\n        )}\n      </div>\n    </div>\n  );\n}\n","import { Children, useMemo } from 'react';\nimport { findComponent } from '../../internal/utils/findComponent';\nimport { background, border, cn, line } from '../../styles/theme';\nimport type { SwapSettingsSlippageLayoutReact } from '../types';\nimport { SwapSettingsSlippageDescription } from './SwapSettingsSlippageDescription';\nimport { SwapSettingsSlippageInput } from './SwapSettingsSlippageInput';\nimport { SwapSettingsSlippageTitle } from './SwapSettingsSlippageTitle';\n\nexport function SwapSettingsSlippageLayout({\n  children,\n  className,\n}: SwapSettingsSlippageLayoutReact) {\n  const { title, description, input } = useMemo(() => {\n    const childrenArray = Children.toArray(children);\n    return {\n      title: childrenArray.find(findComponent(SwapSettingsSlippageTitle)),\n      description: childrenArray.find(\n        findComponent(SwapSettingsSlippageDescription),\n      ),\n      input: childrenArray.find(findComponent(SwapSettingsSlippageInput)),\n    };\n  }, [children]);\n\n  return (\n    <div\n      className={cn(\n        background.default,\n        border.radius,\n        line.default,\n        'right-0 z-10 w-[21.75rem] px-3 py-3',\n        className,\n      )}\n      data-testid=\"ockSwapSettingsLayout_container\"\n    >\n      {title}\n      {description}\n      <div className=\"flex items-center justify-between gap-2\">\n        {input && <div className=\"flex-grow\">{input}</div>}\n      </div>\n    </div>\n  );\n}\n","import { cn, color, text } from '../../styles/theme';\nimport type { SwapSettingsSlippageDescriptionReact } from '../types';\n\nexport function SwapSettingsSlippageDescription({\n  children,\n  className,\n}: SwapSettingsSlippageDescriptionReact) {\n  return (\n    <p className={cn(text.legal, color.foregroundMuted, 'mb-2', className)}>\n      {children}\n    </p>\n  );\n}\n","import { useCallback, useState } from 'react';\nimport {\n  background,\n  border,\n  cn,\n  color,\n  pressable,\n  text,\n} from '../../styles/theme';\nimport type { SwapSettingsSlippageInputReact } from '../types';\nimport { useSwapContext } from './SwapProvider';\n\nconst SLIPPAGE_SETTINGS = {\n  AUTO: 'Auto',\n  CUSTOM: 'Custom',\n};\n\nexport function SwapSettingsSlippageInput({\n  className,\n}: SwapSettingsSlippageInputReact) {\n  const {\n    config: { maxSlippage: defaultMaxSlippage },\n    updateLifecycleStatus,\n    lifecycleStatus,\n  } = useSwapContext();\n\n  // Set initial slippage values to match previous selection or default,\n  // ensuring consistency when dropdown is reopened\n  const [slippageSetting, setSlippageSetting] = useState(\n    lifecycleStatus.statusData.maxSlippage === defaultMaxSlippage\n      ? SLIPPAGE_SETTINGS.AUTO\n      : SLIPPAGE_SETTINGS.CUSTOM,\n  );\n\n  const updateSlippage = useCallback(\n    (newSlippage: number) => {\n      if (newSlippage !== lifecycleStatus.statusData.maxSlippage) {\n        updateLifecycleStatus({\n          statusName: 'slippageChange',\n          statusData: {\n            maxSlippage: newSlippage,\n          },\n        });\n      }\n    },\n    [lifecycleStatus.statusData.maxSlippage, updateLifecycleStatus],\n  );\n\n  // Handles user input for custom slippage.\n  // Parses the input and updates slippage state.\n  const handleSlippageChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newSlippage = e.target.value;\n      const parsedSlippage = Number.parseFloat(newSlippage);\n      const isValidNumber = !Number.isNaN(parsedSlippage);\n\n      // Update slippage to parsed value if valid, otherwise set to 0\n      updateSlippage(isValidNumber ? parsedSlippage : 0);\n    },\n    [updateSlippage],\n  );\n\n  // Toggles between auto and custom slippage settings\n  // Resets to default slippage when auto is selected\n  const handleSlippageSettingChange = useCallback(\n    (setting: string) => {\n      setSlippageSetting(setting);\n      if (setting === SLIPPAGE_SETTINGS.AUTO) {\n        updateSlippage(defaultMaxSlippage);\n      }\n    },\n    [defaultMaxSlippage, updateSlippage],\n  );\n\n  return (\n    <section\n      className={cn(\n        background.default,\n        border.defaultActive,\n        border.radius,\n        'flex items-center gap-2',\n        className,\n      )}\n    >\n      <fieldset\n        className={cn(\n          background.default,\n          border.defaultActive,\n          border.radius,\n          'flex h-9 flex-1 rounded-xl border p-1',\n        )}\n      >\n        <legend className=\"sr-only\">Slippage Setting</legend>\n        {Object.values(SLIPPAGE_SETTINGS).map((setting) => (\n          <button\n            key={setting}\n            type=\"button\"\n            className={cn(\n              pressable.default,\n              color.foreground,\n              text.label1,\n              border.radiusInner,\n              'flex-1 px-3 py-1 transition-colors',\n              // Highlight the button if it is selected\n              slippageSetting === setting\n                ? cn(background.inverse, color.primary, pressable.shadow)\n                : color.foregroundMuted,\n            )}\n            onClick={() => handleSlippageSettingChange(setting)}\n          >\n            {setting}\n          </button>\n        ))}\n      </fieldset>\n      <div\n        className={cn(\n          background.default,\n          border.defaultActive,\n          border.radius,\n          'flex h-9 w-24 items-center justify-between border px-2 py-1',\n          slippageSetting === SLIPPAGE_SETTINGS.AUTO && 'opacity-50',\n        )}\n      >\n        <label htmlFor=\"slippage-input\" className=\"sr-only\">\n          Slippage Percentage\n        </label>\n        <input\n          id=\"slippage-input\"\n          type=\"text\"\n          value={lifecycleStatus.statusData.maxSlippage}\n          onChange={handleSlippageChange}\n          disabled={slippageSetting === SLIPPAGE_SETTINGS.AUTO}\n          className={cn(\n            color.foreground,\n            text.label2,\n            'w-full flex-grow bg-transparent pl-1 font-normal leading-6 focus:outline-none',\n            slippageSetting === SLIPPAGE_SETTINGS.AUTO && 'cursor-not-allowed',\n          )}\n        />\n        <span\n          className={cn(\n            background.default,\n            color.foreground,\n            text.label2,\n            'ml-1 flex-shrink-0 font-normal leading-6',\n          )}\n        >\n          %\n        </span>\n      </div>\n    </section>\n  );\n}\n","import { cn, color, text } from '../../styles/theme';\nimport type { SwapSettingsSlippageTitleReact } from '../types';\n\nexport function SwapSettingsSlippageTitle({\n  children,\n  className,\n}: SwapSettingsSlippageTitleReact) {\n  return (\n    <h3\n      className={cn(\n        text.headline,\n        color.foreground,\n        'mb-2 text-base',\n        className,\n      )}\n    >\n      {children}\n    </h3>\n  );\n}\n","import { Children, useMemo } from 'react';\nimport { findComponent } from '../../internal/utils/findComponent';\nimport { background, border, cn, color, pressable } from '../../styles/theme';\nimport type { SwapSettingsSlippageLayoutReact } from '../types';\nimport { SwapSettingsSlippageDescription } from './SwapSettingsSlippageDescription';\nimport { SwapSettingsSlippageInput } from './SwapSettingsSlippageInput';\nimport { SwapSettingsSlippageTitle } from './SwapSettingsSlippageTitle';\n\nexport function SwapSettingsSlippageLayoutBottomSheet({\n  children,\n  className,\n}: SwapSettingsSlippageLayoutReact) {\n  const { title, description, input } = useMemo(() => {\n    const childrenArray = Children.toArray(children);\n    return {\n      title: childrenArray.find(findComponent(SwapSettingsSlippageTitle)),\n      description: childrenArray.find(\n        findComponent(SwapSettingsSlippageDescription),\n      ),\n      input: childrenArray.find(findComponent(SwapSettingsSlippageInput)),\n    };\n  }, [children]);\n\n  return (\n    <div\n      className={cn(\n        background.default,\n        border.default,\n        pressable.shadow,\n        'right-0 z-10 h-full w-full rounded-t-lg px-3 pt-2 pb-3',\n        className,\n      )}\n      data-testid=\"ockSwapSettingsLayout_container\"\n    >\n      <div\n        className={cn(\n          background.alternate,\n          'mx-auto mb-2 h-1 w-4 rounded-[6.25rem]',\n        )}\n      />\n      <div className=\"mb-4 flex items-center justify-center\">\n        <h2 className={cn(color.foreground, 'font-bold text-sm')}>Settings</h2>\n      </div>\n\n      <div className=\"flex flex-col\">\n        {title}\n        <div className=\"pb-4\">{description}</div>\n        {input && <div className=\"flex-grow\">{input}</div>}\n      </div>\n      <div className=\"mt-4 flex justify-center\">\n        <div\n          className={cn(\n            background.inverse,\n            'h-1 w-28 shrink-0 rounded-[0.43931rem]',\n          )}\n        />\n      </div>\n    </div>\n  );\n}\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { closeSvg } from '../../internal/svg/closeSvg';\nimport { background, cn, color, text } from '../../styles/theme';\n\nimport { useAccount } from 'wagmi';\nimport { successSvg } from '../../internal/svg/successSvg';\nimport { getToastPosition } from '../../internal/utils/getToastPosition';\nimport { getChainExplorer } from '../../network/getChainExplorer';\nimport type { SwapToastReact } from '../types';\nimport { useSwapContext } from './SwapProvider';\n\nexport function SwapToast({\n  className,\n  durationMs = 3000,\n  position = 'bottom-center',\n}: SwapToastReact) {\n  const {\n    isToastVisible,\n    setIsToastVisible,\n    setTransactionHash,\n    transactionHash,\n  } = useSwapContext();\n\n  const { chainId } = useAccount();\n\n  const chainExplorer = getChainExplorer(chainId);\n\n  const closeToast = useCallback(() => {\n    setIsToastVisible?.(false);\n  }, [setIsToastVisible]);\n\n  const positionClass = useMemo(() => {\n    return getToastPosition(position);\n  }, [position]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (isToastVisible) {\n        setIsToastVisible?.(false);\n        setTransactionHash?.('');\n      }\n    }, durationMs);\n\n    return () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    };\n  }, [durationMs, isToastVisible, setIsToastVisible, setTransactionHash]);\n\n  if (!isToastVisible) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cn(\n        background.default,\n        'flex animate-enter items-center justify-between rounded-lg',\n        'p-2 shadow-[0px_8px_24px_0px_rgba(0,0,0,0.12)]',\n        '-translate-x-2/4 fixed z-20',\n        positionClass,\n        className,\n      )}\n      data-testid=\"ockSwapToast\"\n    >\n      <div className=\"flex items-center gap-4 p-2\">\n        <div className={cn(text.label2)}>{successSvg}</div>\n        <div className={cn(text.label1, 'text-nowrap')}>\n          <p className={color.foreground}>Successful</p>\n        </div>\n        <div className={cn(text.label1, 'text-nowrap')}>\n          <a\n            href={`${chainExplorer}/tx/${transactionHash}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <span className={cn(text.label1, color.primary)}>\n              View transaction\n            </span>\n          </a>\n        </div>\n      </div>\n      <button\n        className=\"p-2\"\n        onClick={closeToast}\n        type=\"button\"\n        data-testid=\"ockCloseButton\"\n      >\n        {closeSvg}\n      </button>\n    </div>\n  );\n}\n","export const successSvg = (\n  <svg\n    aria-label=\"ock-successSvg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    data-testid=\"ock-successSvg\"\n  >\n    <title>Success SVG</title>\n    <path\n      d=\"M8 0C3.58 0 0 3.58 0 8C0 12.42 3.58 16 8 16C12.42 16 16 12.42 16 8C16 3.58 12.42 0 8 0ZM6.72667 11.5333L3.73333 8.54L4.67333 7.6L6.72667 9.65333L11.44 4.94L12.38 5.88L6.72667 11.5333Z\"\n      fill=\"#65A30D\"\n    />\n  </svg>\n);\n","export function getToastPosition(position: string) {\n  if (position === 'bottom-right') {\n    return 'bottom-5 left-3/4';\n  }\n  if (position === 'top-right') {\n    return 'top-[100px] left-3/4';\n  }\n  if (position === 'top-center') {\n    return 'top-[100px] left-2/4';\n  }\n  return 'bottom-5 left-2/4';\n}\n","import { baseSepolia } from 'viem/chains';\n\nexport function getChainExplorer(chainId?: number) {\n  if (chainId === baseSepolia.id) {\n    return 'https://sepolia.basescan.org';\n  }\n  return 'https://basescan.org';\n}\n","import { icon } from '../../styles/theme';\n\nexport const toggleSvg = (\n  <svg\n    role=\"img\"\n    aria-label=\"ock-toggleSvg\"\n    width=\"16\"\n    height=\"17\"\n    viewBox=\"0 0 16 17\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    data-testid=\"ock-toggleSvg\"\n  >\n    <g clipPath=\"url(#clip0_2077_4627)\">\n      <path\n        d=\"M14.5659 4.93434L13.4345 6.06571L11.8002 4.43139L11.8002 10.75L10.2002 10.75L10.2002 4.43139L8.56592 6.06571L7.43455 4.93434L11.0002 1.36865L14.5659 4.93434ZM8.56592 12.0657L5.00023 15.6314L1.43455 12.0657L2.56592 10.9343L4.20023 12.5687L4.20023 6.25002L5.80023 6.25002L5.80023 12.5687L7.43455 10.9343L8.56592 12.0657Z\"\n        className={icon.foreground}\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_2077_4627\">\n        <rect\n          width=\"16\"\n          height=\"16\"\n          fill=\"white\"\n          transform=\"translate(0 0.5)\"\n        />\n      </clipPath>\n    </defs>\n  </svg>\n);\n","import { toggleSvg } from '../../internal/svg/toggleSvg';\nimport { border, cn, pressable } from '../../styles/theme';\nimport type { SwapToggleButtonReact } from '../types';\nimport { useSwapContext } from './SwapProvider';\n\nexport function SwapToggleButton({ className }: SwapToggleButtonReact) {\n  const { handleToggle } = useSwapContext();\n\n  return (\n    <button\n      type=\"button\"\n      className={cn(\n        pressable.alternate,\n        border.default,\n        '-translate-x-2/4 -translate-y-2/4 absolute top-2/4 left-2/4',\n        'flex h-12 w-12 items-center justify-center',\n        'rounded-lg border-4 border-solid',\n        className,\n      )}\n      data-testid=\"SwapTokensButton\"\n      onClick={handleToggle}\n    >\n      {toggleSvg}\n    </button>\n  );\n}\n","import type { SwapDefaultReact } from '../types';\nimport { Swap } from './Swap';\nimport { SwapAmountInput } from './SwapAmountInput';\nimport { SwapButton } from './SwapButton';\nimport { SwapMessage } from './SwapMessage';\nimport { SwapSettings } from './SwapSettings';\nimport { SwapSettingsSlippageDescription } from './SwapSettingsSlippageDescription';\nimport { SwapSettingsSlippageInput } from './SwapSettingsSlippageInput';\nimport { SwapSettingsSlippageTitle } from './SwapSettingsSlippageTitle';\nimport { SwapToast } from './SwapToast';\nimport { SwapToggleButton } from './SwapToggleButton';\n\nexport function SwapDefault({\n  config,\n  className,\n  disabled,\n  experimental,\n  from,\n  isSponsored = false,\n  onError,\n  onStatus,\n  onSuccess,\n  title = 'Swap',\n  to,\n}: SwapDefaultReact) {\n  return (\n    <Swap\n      className={className}\n      onStatus={onStatus}\n      onSuccess={onSuccess}\n      onError={onError}\n      config={config}\n      isSponsored={isSponsored}\n      title={title}\n      experimental={experimental}\n    >\n      <SwapSettings>\n        <SwapSettingsSlippageTitle>Max. slippage</SwapSettingsSlippageTitle>\n        <SwapSettingsSlippageDescription>\n          Your swap will revert if the prices change by more than the selected\n          percentage.\n        </SwapSettingsSlippageDescription>\n        <SwapSettingsSlippageInput />\n      </SwapSettings>\n      <SwapAmountInput\n        label=\"Sell\"\n        swappableTokens={from}\n        token={from?.[0]}\n        type=\"from\"\n      />\n      <SwapToggleButton />\n      <SwapAmountInput\n        label=\"Buy\"\n        swappableTokens={to}\n        token={to?.[0]}\n        type=\"to\"\n      />\n      <SwapButton disabled={disabled} />\n      <SwapMessage />\n      <SwapToast />\n    </Swap>\n  );\n}\n"],"mappings":"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","names":["Children","useMemo","isValidElement","findComponent","component","child","isValidElement","type","clsx","twMerge","cn","inputs","twMerge","clsx","text","body","caption","headline","label1","label2","legal","title1","title3","pressable","default","alternate","inverse","primary","secondary","coinbaseBranding","shadow","disabled","background","error","warning","success","washed","reverse","color","foreground","foregroundMuted","border","default","defaultActive","radius","radiusInner","icon","primary","foreground","foregroundMuted","inverse","error","success","warning","line","default","heavy","useEffect","useState","useIsMounted","isMounted","setIsMounted","useState","useEffect","useEffect","useState","usePreferredColorScheme","colorScheme","setColorScheme","useState","useEffect","mediaQuery","window","matchMedia","matches","updateColorScheme","event","addEventListener","removeEventListener","useContext","createContext","useMemo","baseSepolia","ONCHAIN_KIT_CONFIG","address","apiKey","chain","baseSepolia","config","appearance","name","logo","mode","theme","paymaster","rpcUrl","schemaId","projectId","OnchainKitContext","createContext","ONCHAIN_KIT_CONFIG","useOnchainKit","useContext","OnchainKitContext","useTheme","preferredMode","usePreferredColorScheme","config","appearance","useOnchainKit","theme","mode","FALLBACK_DEFAULT_MAX_SLIPPAGE","GENERAL_SWAP_ERROR_CODE","GENERAL_SWAP_QUOTE_ERROR_CODE","GENERAL_SWAP_BALANCE_ERROR_CODE","LOW_LIQUIDITY_ERROR_CODE","PERMIT2_CONTRACT_ADDRESS","TOO_MANY_REQUESTS_ERROR_CODE","UNCAUGHT_SWAP_QUOTE_ERROR_CODE","UNCAUGHT_SWAP_ERROR_CODE","UNIVERSALROUTER_CONTRACT_ADDRESS","USER_REJECTED_ERROR_CODE","SwapMessage","useCallback","useEffect","useMemo","useCallback","useLayoutEffect","useMemo","useRef","useDebounce","callback","delay","callbackRef","useRef","useLayoutEffect","current","timer","debounce","func","delayMs","args","clearTimeout","setTimeout","useMemo","TextInput","ariaLabel","className","delayMs","disabled","onBlur","onChange","placeholder","setValue","value","inputValidator","handleDebounce","useDebounce","handleChange","useCallback","evt","target","input","aria-label","data-testid","type","useMemo","useValue","object","useMemo","getRoundedAmount","balance","fractionDigits","parsedBalance","Number","parseFloat","result","toFixed","replace","isValidAmount","value","regex","test","useMemo","hashStringToNumber","str","hash","i","length","charCodeAt","numberToRgb","h","Math","abs","s","l","getTokenImageColor","TokenImage","className","size","token","image","name","styles","useMemo","width","height","minWidth","minHeight","placeholderImage","background","getTokenImageColor","div","cn","data-testid","style","img","alt","src","TokenChip","token","onClick","className","componentTheme","useTheme","button","type","data-testid","cn","pressable","secondary","shadow","TokenImage","size","span","text","headline","symbol","memo","formatAmount","amount","options","undefined","locale","minimumFractionDigits","maximumFractionDigits","Number","toLocaleString","TokenRow","memo","className","token","amount","onClick","hideImage","hideSymbol","componentTheme","useTheme","button","data-testid","type","cn","pressable","default","span","TokenImage","size","text","headline","name","body","color","foregroundMuted","symbol","formatAmount","minimumFractionDigits","maximumFractionDigits","Number","useCallback","useState","closeSvg","svg","aria-label","width","height","viewBox","fill","xmlns","title","path","d","className","icon","foreground","searchIconSvg","svg","role","aria-label","width","height","viewBox","fill","xmlns","path","d","className","icon","foreground","useCallback","useEffect","useRef","useState","forwardRef","caretDownSvg","svg","data-testid","role","aria-label","width","height","viewBox","fill","xmlns","path","d","className","icon","foreground","caretUpSvg","svg","data-testid","role","aria-label","width","height","viewBox","fill","xmlns","path","d","className","icon","foreground","TokenSelectButton","forwardRef","onClick","token","isOpen","className","ref","button","type","data-testid","cn","pressable","default","shadow","border","radius","line","div","TokenImage","size","span","text","headline","color","foreground","symbol","caretUpSvg","caretDownSvg","TokenSelectDropdown","options","setToken","token","componentTheme","useTheme","isOpen","setIsOpen","useState","handleToggle","useCallback","dropdownRef","useRef","buttonRef","handleBlur","event","isOutsideDropdown","current","contains","target","isOutsideButton","useEffect","setTimeout","document","addEventListener","removeEventListener","div","className","TokenSelectButton","ref","onClick","data-testid","cn","border","radius","map","TokenRow","background","inverse","key","name","address","useCallback","useEffect","useRef","useState","formatAmount","num","test","coefficient","exponent","toLowerCase","split","exp","Number","parseInt","intPart","decPart","fullNumber","newPosition","length","repeat","Math","abs","slice","createContext","useCallback","useContext","useEffect","useState","base","useAccount","useConfig","useSendTransaction","useSwitchChain","useSendCalls","CDP_GET_SWAP_QUOTE","CDP_GET_SWAP_TRADE","version","POST_METHOD","JSON_HEADERS","version","JSON_RPC_VERSION","getRPCUrl","ONCHAIN_KIT_CONFIG","rpcUrl","apiKey","Error","chain","name","replace","toLowerCase","buildRequestBody","method","params","id","jsonrpc","JSON_RPC_VERSION","sendRequest","body","url","getRPCUrl","response","fetch","JSON","stringify","headers","JSON_HEADERS","POST_METHOD","data","json","error","console","log","message","getSwapErrorCode","context","errorCode","TOO_MANY_REQUESTS_ERROR_CODE","LOW_LIQUIDITY_ERROR_CODE","UNCAUGHT_SWAP_ERROR_CODE","UNCAUGHT_SWAP_QUOTE_ERROR_CODE","GENERAL_SWAP_QUOTE_ERROR_CODE","GENERAL_SWAP_BALANCE_ERROR_CODE","GENERAL_SWAP_ERROR_CODE","fromReadableAmount","amount","decimals","wholePart","fractionalPart","split","paddedFractionalPart","padEnd","trimmedFractionalPart","slice","BigInt","length","toString","toReadableAmount","amount","decimals","includes","wholePart","fractionalPart","split","paddedFractionalPart","padEnd","combinedAmount","bigIntAmount","BigInt","divisor","toString","padStart","trimmedFractionalPart","replace","formatDecimals","amount","inputInDecimals","decimals","result","toReadableAmount","fromReadableAmount","getAPIParamsForToken","params","from","to","amount","amountReference","isAmountInDecimals","fromAddress","decimals","trim","code","error","message","Number","isInteger","test","address","formatDecimals","getSwapTransaction","rawTx","chainId","data","gas","to","value","Number","BigInt","buildSwapTransaction","params","defaultParams","amountReference","isAmountInDecimals","apiParamsOrError","getAPIParamsForToken","error","apiParams","useAggregator","v2Enabled","maxSlippage","slippagePercentage","Number","toString","res","sendRequest","CDP_GET_SWAP_TRADE","code","getSwapErrorCode","message","trade","result","approveTransaction","approveTx","getSwapTransaction","chainId","undefined","fee","quote","transaction","tx","warning","_error","getSwapQuote","params","defaultParams","amountReference","isAmountInDecimals","apiParamsOrError","getAPIParamsForToken","error","apiParams","useAggregator","v2Enabled","maxSlippage","slippagePercentage","Number","toString","res","sendRequest","CDP_GET_SWAP_QUOTE","code","getSwapErrorCode","message","result","_error","useMemo","useAccount","useCapabilities","useCapabilitiesSafe","chainId","isConnected","useAccount","data","capabilities","error","useCapabilities","query","enabled","useMemo","formatTokenAmount","amount","decimals","numberAmount","Number","toString","GENERIC_ERROR_MESSAGE","isUserRejectedRequestError","err","cause","name","shortMessage","includes","useCallback","waitForTransactionReceipt","useCallsStatus","useAwaitCalls","accountConfig","lifecycleStatus","updateLifecycleStatus","callsId","statusName","statusData","undefined","data","useCallsStatus","id","query","refetchInterval","state","status","enabled","useCallback","receipts","transactionReceipt","waitForTransactionReceipt","confirmations","hash","length","transactionHash","useState","useMemo","formatUnits","useBalance","ETH_DECIMALS","useGetETHBalance","address","ethBalanceResponse","useBalance","useMemo","error","code","getSwapErrorCode","message","data","value","convertedBalance","response","roundedBalance","formatUnits","getRoundedAmount","useMemo","erc20Abi","formatUnits","useReadContract","useGetTokenBalance","address","token","tokenBalanceResponse","useReadContract","abi","erc20Abi","functionName","args","query","enabled","useMemo","error","code","getSwapErrorCode","shortMessage","message","data","convertedBalance","roundedBalance","response","formatUnits","decimals","getRoundedAmount","useSwapBalances","address","fromToken","toToken","convertedBalance","convertedEthBalance","error","ethBalanceError","response","ethBalanceResponse","useGetETHBalance","convertedFromBalance","fromBalanceError","_fromTokenResponse","useGetTokenBalance","convertedToBalance","toBalanceError","_toTokenResponse","isFromNativeToken","symbol","isToNativeToken","fromBalanceString","fromTokenBalanceError","toBalanceString","toTokenBalanceError","fromTokenResponse","toTokenResponse","useValue","useFromTo","address","fromAmount","setFromAmount","useState","fromAmountUSD","setFromAmountUSD","fromToken","setFromToken","toAmount","setToAmount","toAmountUSD","setToAmountUSD","toToken","setToToken","toLoading","setToLoading","fromLoading","setFromLoading","fromBalanceString","fromTokenBalanceError","toBalanceString","toTokenBalanceError","fromTokenResponse","toTokenResponse","useSwapBalances","from","useValue","balance","balanceResponse","amount","setAmount","amountUSD","setAmountUSD","token","setToken","loading","setLoading","error","to","useCallback","useState","useLifecycleStatus","initialState","lifecycleStatus","setLifecycleStatus","useState","updateLifecycleStatus","useCallback","newStatus","prevStatus","persistedStatusData","statusName","error","code","message","statusData","useCallback","useResetInputs","from","to","useCallback","Promise","all","balanceResponse","refetch","setAmount","setAmountUSD","isSwapError","response","encodeFunctionData","parseAbi","base","Capabilities","waitForTransactionReceipt","sendSingleTransactions","config","sendTransactionAsync","transactions","updateLifecycleStatus","transactionReceipt","transaction","transactionType","statusName","txHash","statusData","transactionHash","waitForTransactionReceipt","hash","confirmations","sendSwapTransactions","config","isSponsored","paymaster","sendCallsAsync","sendTransactionAsync","updateLifecycleStatus","walletCapabilities","transactions","Capabilities","AtomicBatch","supported","statusName","callsId","calls","map","transaction","capabilities","paymasterService","url","statusData","transactionType","sendSingleTransactions","processSwapTransaction","chainId","config","isSponsored","paymaster","sendCallsAsync","sendTransactionAsync","swapTransaction","switchChainAsync","updateLifecycleStatus","useAggregator","walletCapabilities","transaction","approveTransaction","quote","transactions","data","push","to","value","transactionType","permit2ContractAbi","parseAbi","encodeFunctionData","abi","functionName","args","from","address","UNIVERSALROUTER_CONTRACT_ADDRESS","BigInt","fromAmount","PERMIT2_CONTRACT_ADDRESS","base","id","sendSwapTransactions","emptyContext","SwapContext","createContext","useSwapContext","context","useContext","Error","SwapProvider","children","config","maxSlippage","FALLBACK_DEFAULT_MAX_SLIPPAGE","experimental","isSponsored","onError","onStatus","onSuccess","paymaster","undefined","useOnchainKit","address","chainId","useAccount","switchChainAsync","useSwitchChain","useAggregator","accountConfig","useConfig","walletCapabilities","useCapabilitiesSafe","base","id","lifecycleStatus","updateLifecycleStatus","useLifecycleStatus","statusName","statusData","isMissingRequiredField","isToastVisible","setIsToastVisible","useState","transactionHash","setTransactionHash","hasHandledSuccess","setHasHandledSuccess","from","to","useFromTo","sendTransactionAsync","useSendTransaction","sendCallsAsync","useSendCalls","resetInputs","useResetInputs","awaitCallsStatus","useAwaitCalls","useEffect","transactionReceipt","transactionType","handleToggle","useCallback","setAmount","amount","setToken","token","amountFrom","amountTo","tokenFrom","tokenTo","handleAmountChange","type","sToken","dToken","source","destination","Number","parseFloat","setAmountUSD","setLoading","response","getSwapQuote","amountReference","String","isSwapError","code","error","message","formattedAmount","formatTokenAmount","toAmount","decimals","toAmountUSD","fromAmountUSD","err","JSON","stringify","handleSubmit","buildSwapTransaction","fromAddress","processSwapTransaction","swapTransaction","errorMessage","isUserRejectedRequestError","GENERIC_ERROR_MESSAGE","value","useValue","Provider","SwapAmountInput","className","delayMs","label","token","type","swappableTokens","address","to","from","handleAmountChange","useSwapContext","source","useValue","destination","useEffect","setToken","handleMaxButtonClick","useCallback","balance","setAmount","handleChange","amount","handleSetToken","sourceTokenOptions","useMemo","filter","symbol","hasInsufficientBalance","Number","formatUSD","roundedAmount","getRoundedAmount","toFixed","div","cn","background","secondary","border","radius","data-testid","span","text","label2","color","foregroundMuted","TextInput","error","foreground","placeholder","value","formatAmount","setValue","disabled","loading","onChange","inputValidator","isValidAmount","length","TokenSelectDropdown","options","TokenChip","pressable","inverse","amountUSD","button","onClick","label1","primary","Spinner","className","div","data-testid","cn","ConnectButton","ConnectButtonRainbowKit","Children","isValidElement","useCallback","useMemo","useAccount","useConnect","createContext","useContext","emptyContext","IdentityContext","createContext","IdentityProvider","props","chain","contextChain","useOnchainKit","accountChain","value","useValue","address","schemaId","IdentityContext","Provider","children","ConnectButton","className","connectWalletText","onClick","text","button","type","data-testid","cn","pressable","primary","border","radius","dsText","headline","color","inverse","span","ConnectWalletText","children","className","span","cn","dsText","headline","color","inverse","createContext","useContext","useState","emptyContext","WalletContext","createContext","useWalletContext","useContext","WalletContext","ConnectWallet","children","className","text","withWalletAggregator","isOpen","setIsOpen","useWalletContext","address","accountAddress","status","useAccount","connectors","connect","connectStatus","useConnect","connectWalletText","useMemo","childrenArray","Children","toArray","find","findComponent","ConnectWalletText","childrenWithoutConnectWalletText","map","child","isValidElement","type","connector","isLoading","handleToggle","useCallback","console","log","ConnectButtonRainbowKit","Custom","openConnectModal","div","data-testid","ConnectButton","onClick","button","cn","pressable","primary","dsText","headline","color","inverse","disabled","Spinner","IdentityProvider","secondary","border","radius","foreground","Children","useEffect","useMemo","useRef","Children","cloneElement","isValidElement","useMemo","useAccount","useCallback","Children","useMemo","useCallback","useEffect","useState","useState","Children","useMemo","defaultAvatarSVG","svg","data-testid","role","aria-label","width","height","viewBox","fill","xmlns","className","path","d","icon","foreground","useQuery","mainnet","mainnet","normalize","base","baseSepolia","mainnet","sepolia","http","createPublicClient","base","baseSepolia","RESOLVER_ADDRESSES_BY_CHAIN_ID","id","sha256","useQuery","mainnet","base","mainnet","encodePacked","keccak256","namehash","mainnet","badgeSvg","svg","role","aria-label","width","height","viewBox","fill","xmlns","className","path","d","data-testid","icon","foreground","useEffect","useState","gql","getAddress","GraphQLClient","base","easChainBase","id","easGraphqlAPI","schemaUids","baseSepolia","easChainBaseSepolia","id","easGraphqlAPI","schemaUids","optimism","easChainOptimism","id","easGraphqlAPI","schemaUids","easSupportedChains","easChainBase","id","easChainBaseSepolia","easChainOptimism","attestationQuery","gql","Children","useMemo","useQuery","mainnet","mainnet","normalize","githubSvg","svg","data-testid","role","aria-label","width","height","viewBox","xmlns","fill","className","path","fillRule","clipRule","d","icon","foreground","twitterSvg","svg","data-testid","role","aria-label","width","height","viewBox","xmlns","fill","className","g","clipPath","path","d","icon","foreground","defs","id","rect","warpcastSvg","svg","data-testid","role","aria-label","width","height","viewBox","xmlns","className","icon","foreground","path","d","inverse","websiteSvg","svg","data-testid","role","aria-label","width","height","viewBox","xmlns","fill","className","icon","foreground","path","fillRule","clipRule","d","useEffect","useState","BREAKPOINTS","sm","md","lg","xl","useBreakpoints","currentBreakpoint","setCurrentBreakpoint","useState","undefined","useEffect","getCurrentBreakpoint","entries","Object","key","query","window","matchMedia","matches","handleResize","addEventListener","removeEventListener","Children","cloneElement","isValidElement","useCallback","useMemo","useAccount","mainnet","useQuery","mainnet","useCallback","useDisconnect","disconnectSvg","svg","role","aria-label","width","height","viewBox","fill","xmlns","path","d","className","icon","foreground","isValidElement","useMemo","coinbasePaySvg","svg","role","aria-label","width","height","viewBox","fill","xmlns","path","fillRule","clipRule","d","fundWalletSvg","svg","role","aria-label","width","height","viewBox","fill","xmlns","path","fillRule","clipRule","d","className","icon","foreground","swapSettingsSvg","svg","role","aria-label","width","height","viewBox","fill","xmlns","path","fillRule","clipRule","d","className","icon","foreground","walletSvg","svg","role","aria-label","width","height","viewBox","fill","xmlns","path","fillRule","clipRule","d","className","icon","foreground","useIcon","icon","useMemo","undefined","coinbasePaySvg","fundWalletSvg","swapSettingsSvg","walletSvg","isValidElement","base","useAccount","basenameSvg","svg","data-testid","role","aria-label","width","height","viewBox","xmlns","fill","className","g","id","path","d","icon","foreground","useCallback","useMemo","useMemo","useAccount","useAccount","ENTRYPOINT_ADDRESS_V06","checksumAddress","decodeAbiParameters","SwapButton","className","disabled","address","to","from","lifecycleStatus","statusName","handleSubmit","useSwapContext","isLoading","loading","isDisabled","amount","token","isSwapInvalid","ConnectWallet","button","type","cn","background","primary","border","radius","pressable","text","headline","onClick","data-testid","Spinner","span","color","inverse","getErrorMessage","error","code","TOO_MANY_REQUESTS_ERROR_CODE","SwapMessage","TOO_MANY_REQUESTS","LOW_LIQUIDITY_ERROR_CODE","LOW_LIQUIDITY","USER_REJECTED_ERROR_CODE","USER_REJECTED","message","getSwapMessage","address","from","lifecycleStatus","to","statusName","getErrorMessage","statusData","error","SwapMessage","BALANCE_ERROR","Number","balance","amount","INSUFFICIENT_BALANCE","CONFIRM_IN_WALLET","SWAP_IN_PROGRESS","loading","FETCHING_QUOTE","isMissingRequiredField","INCOMPLETE_FIELD","SwapMessage","className","address","to","from","lifecycleStatus","useSwapContext","message","getSwapMessage","div","cn","text","label2","color","foregroundMuted","data-testid","useCallback","useEffect","useRef","useState","Children","useMemo","SwapSettingsSlippageDescription","children","className","p","cn","text","legal","color","foregroundMuted","useCallback","useState","SLIPPAGE_SETTINGS","AUTO","CUSTOM","SwapSettingsSlippageInput","className","config","maxSlippage","defaultMaxSlippage","updateLifecycleStatus","lifecycleStatus","useSwapContext","slippageSetting","setSlippageSetting","useState","statusData","updateSlippage","useCallback","newSlippage","statusName","handleSlippageChange","e","target","value","parsedSlippage","Number","parseFloat","isValidNumber","isNaN","handleSlippageSettingChange","setting","section","cn","background","default","border","defaultActive","radius","fieldset","legend","Object","values","map","button","key","type","pressable","color","foreground","text","label1","radiusInner","inverse","primary","shadow","foregroundMuted","onClick","div","label","htmlFor","input","id","onChange","disabled","label2","span","SwapSettingsSlippageTitle","children","className","h3","cn","text","headline","color","foreground","SwapSettingsSlippageLayout","children","className","title","description","input","useMemo","childrenArray","Children","toArray","find","findComponent","SwapSettingsSlippageTitle","SwapSettingsSlippageDescription","SwapSettingsSlippageInput","div","cn","background","default","border","radius","line","data-testid","Children","useMemo","SwapSettingsSlippageLayoutBottomSheet","children","className","title","description","input","useMemo","childrenArray","Children","toArray","find","findComponent","SwapSettingsSlippageTitle","SwapSettingsSlippageDescription","SwapSettingsSlippageInput","div","cn","background","default","border","pressable","shadow","data-testid","alternate","h2","color","foreground","inverse","SwapSettings","children","className","icon","text","buttonText","breakpoint","useBreakpoints","isOpen","setIsOpen","useState","dropdownRef","useRef","handleToggle","useCallback","handleClickOutsideComponent","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","iconSvg","useIcon","div","cn","data-testid","span","body","ref","button","type","aria-label","pressable","default","onClick","background","inverse","shadow","SwapSettingsSlippageLayoutBottomSheet","border","radius","SwapSettingsSlippageLayout","useCallback","useEffect","useMemo","useAccount","successSvg","svg","aria-label","width","height","viewBox","fill","xmlns","data-testid","title","path","d","getToastPosition","position","baseSepolia","getChainExplorer","chainId","baseSepolia","id","SwapToast","className","durationMs","position","isToastVisible","setIsToastVisible","setTransactionHash","transactionHash","useSwapContext","chainId","useAccount","chainExplorer","getChainExplorer","closeToast","useCallback","positionClass","useMemo","getToastPosition","useEffect","timer","setTimeout","clearTimeout","div","cn","background","default","data-testid","text","label2","successSvg","label1","p","color","foreground","a","href","target","rel","span","primary","button","onClick","type","closeSvg","toggleSvg","svg","role","aria-label","width","height","viewBox","fill","xmlns","data-testid","g","clipPath","path","d","className","icon","foreground","defs","id","rect","transform","SwapToggleButton","className","handleToggle","useSwapContext","button","type","cn","pressable","alternate","border","default","data-testid","onClick","toggleSvg","Swap","children","config","maxSlippage","FALLBACK_DEFAULT_MAX_SLIPPAGE","className","experimental","useAggregator","isSponsored","onError","onStatus","onSuccess","title","componentTheme","useTheme","inputs","toggleButton","swapButton","swapMessage","swapSettings","swapToast","useMemo","childrenArray","Children","toArray","filter","findComponent","SwapAmountInput","find","SwapToggleButton","SwapButton","SwapMessage","SwapSettings","SwapToast","isMounted","useIsMounted","SwapProvider","div","cn","background","default","border","radius","color","foreground","data-testid","h3","text","title3","SwapDefault","config","className","disabled","experimental","from","isSponsored","onError","onStatus","onSuccess","title","to","Swap","SwapSettings","SwapSettingsSlippageTitle","SwapSettingsSlippageDescription","SwapSettingsSlippageInput","SwapAmountInput","label","swappableTokens","token","type","SwapToggleButton","SwapButton","SwapMessage","SwapToast"]}