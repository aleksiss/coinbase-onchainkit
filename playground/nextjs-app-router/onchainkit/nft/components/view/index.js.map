{"version":3,"sources":["../../../../src/styles/theme.ts","../../../../src/token/utils/formatAmount.ts","../../../../src/nft/components/NFTProvider.tsx","../../../../src/internal/hooks/useValue.ts","../../../../src/nft/components/view/NFTLastSoldPrice.tsx","../../../../src/nft/components/view/NFTMedia.tsx","../../../../src/nft/types.ts","../../../../src/nft/components/NFTLifecycleProvider.tsx","../../../../src/nft/hooks/useLifecycleStatus.ts","../../../../src/nft/components/view/NFTAudio.tsx","../../../../src/nft/components/view/NFTImage.tsx","../../../../src/internal/svg/defaultNFTSvg.tsx","../../../../src/nft/components/view/NFTVideo.tsx","../../../../src/nft/components/view/NFTMintDate.tsx","../../../../src/identity/components/Address.tsx","../../../../src/identity/utils/getSlicedAddress.ts","../../../../src/identity/components/IdentityProvider.tsx","../../../../src/useOnchainKit.tsx","../../../../src/OnchainKitProvider.tsx","../../../../src/OnchainKitConfig.ts","../../../../src/identity/components/Avatar.tsx","../../../../src/internal/svg/defaultAvatarSVG.tsx","../../../../src/internal/svg/defaultLoadingSVG.tsx","../../../../src/internal/utils/findComponent.ts","../../../../src/identity/hooks/useAvatar.ts","../../../../src/identity/utils/getAvatar.ts","../../../../src/isBase.ts","../../../../src/isEthereum.ts","../../../../src/network/getChainPublicClient.ts","../../../../src/identity/constants.ts","../../../../src/identity/utils/getBaseDefaultProfilePictureIndex.tsx","../../../../src/identity/utils/getBaseDefaultProfilePicture.tsx","../../../../src/identity/utils/isBasename.tsx","../../../../src/identity/hooks/useName.ts","../../../../src/identity/utils/getName.ts","../../../../src/identity/abis/L2ResolverAbi.ts","../../../../src/identity/utils/convertReverseNodeToBytes.ts","../../../../src/identity/utils/convertChainIdToCoinType.ts","../../../../src/internal/svg/badgeSvg.tsx","../../../../src/identity/components/Badge.tsx","../../../../src/identity/hooks/useAttestations.ts","../../../../src/network/attestations.ts","../../../../src/network/createEasGraphQLClient.ts","../../../../src/network/definitions/base.ts","../../../../src/network/definitions/baseSepolia.ts","../../../../src/network/definitions/optimism.ts","../../../../src/identity/utils/easSupportedChains.ts","../../../../src/identity/utils/getAttestations.ts","../../../../src/identity/components/DisplayBadge.tsx","../../../../src/internal/utils/getRoundedAmount.ts","../../../../src/wallet/hooks/useGetETHBalance.ts","../../../../src/swap/constants.ts","../../../../src/swap/utils/getSwapErrorCode.ts","../../../../src/identity/components/EthBalance.tsx","../../../../src/identity/components/Identity.tsx","../../../../src/identity/components/IdentityLayout.tsx","../../../../src/internal/hooks/usePreferredColorScheme.ts","../../../../src/useTheme.ts","../../../../src/identity/hooks/usePopover.ts","../../../../src/identity/components/Name.tsx","../../../../src/identity/hooks/useSocials.tsx","../../../../src/identity/utils/getSocials.ts","../../../../src/internal/svg/githubSvg.tsx","../../../../src/internal/svg/twitterSvg.tsx","../../../../src/internal/svg/warpcastSvg.tsx","../../../../src/internal/svg/websiteSvg.tsx","../../../../src/identity/utils/getSocialPlatformDetails.tsx","../../../../src/identity/components/Socials.tsx","../../../../src/identity/utils/getAddress.ts","../../../../src/identity/hooks/useAddress.ts","../../../../src/nft/components/view/NFTOwner.tsx","../../../../src/nft/components/view/NFTTitle.tsx","../../../../src/nft/components/view/NFTNetwork.tsx","../../../../src/internal/svg/baseSvg.tsx"],"sourcesContent":["import { clsx } from 'clsx';\nimport type { ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport const text = {\n  body: 'ock-font-family font-normal leading-normal',\n  caption: 'ock-font-family font-semibold text-xs leading-4',\n  headline: 'ock-font-family font-semibold leading-normal',\n  label1: 'ock-font-family font-semibold text-sm leading-5',\n  label2: 'ock-font-family text-sm leading-5',\n  legal: 'ock-font-family text-xs leading-4',\n  title1: 'ock-font-family font-semibold text-[1.75rem] leading-9',\n  title3: 'ock-font-family font-semibold text-xl leading-7',\n} as const;\n\nexport const pressable = {\n  default:\n    'cursor-pointer ock-bg-default active:bg-[var(--ock-bg-default-active)] hover:bg-[var(--ock-bg-default-hover)]',\n  alternate:\n    'cursor-pointer ock-bg-alternate active:bg-[var(--ock-bg-alternate-active)] hover:[var(--ock-bg-alternate-hover)]',\n  inverse:\n    'cursor-pointer ock-bg-inverse active:bg-[var(--ock-bg-inverse-active)] hover:bg-[var(--ock-bg-inverse-hover)]',\n  primary:\n    'cursor-pointer ock-bg-primary active:bg-[var(--ock-bg-primary-active)] hover:bg-[var(--ock-bg-primary-hover)]',\n  secondary:\n    'cursor-pointer ock-bg-secondary active:bg-[var(--ock-bg-secondary-active)] hover:bg-[var(--ock-bg-secondary-hover)]',\n  coinbaseBranding: 'cursor-pointer bg-[#0052FF] hover:bg-[#0045D8]',\n  shadow: 'ock-shadow-default',\n  disabled: 'opacity-[0.38] pointer-events-none',\n} as const;\n\nexport const background = {\n  default: 'ock-bg-default',\n  alternate: 'ock-bg-alternate',\n  inverse: 'ock-bg-inverse',\n  primary: 'ock-bg-primary',\n  secondary: 'ock-bg-secondary',\n  error: 'ock-bg-error',\n  warning: 'ock-bg-warning',\n  success: 'ock-bg-success',\n  washed: 'ock-bg-primary-washed',\n  disabled: 'ock-bg-primary-disabled',\n  reverse: 'ock-bg-default-reverse',\n} as const;\n\nexport const color = {\n  inverse: 'ock-text-inverse',\n  foreground: 'ock-text-foreground',\n  foregroundMuted: 'ock-text-foreground-muted',\n  error: 'ock-text-error',\n  primary: 'ock-text-primary',\n  success: 'ock-text-success',\n  warning: 'ock-text-warning',\n  disabled: 'ock-text-disabled',\n} as const;\n\nexport const fill = {\n  default: 'ock-fill-default',\n  defaultReverse: 'ock-fill-default-reverse',\n  inverse: 'ock-fill-inverse',\n  alternate: 'ock-fill-alternate',\n} as const;\n\nexport const border = {\n  default: 'ock-border-default',\n  defaultActive: 'ock-border-default-active',\n  radius: 'ock-border-radius',\n  radiusInner: 'ock-border-radius-inner',\n} as const;\n\nexport const placeholder = {\n  default: 'ock-placeholder-default',\n} as const;\n\nexport const icon = {\n  primary: 'ock-icon-color-primary',\n  foreground: 'ock-icon-color-foreground',\n  foregroundMuted: 'ock-icon-color-foreground-muted',\n  inverse: 'ock-icon-color-inverse',\n  error: 'ock-icon-color-error',\n  success: 'ock-icon-color-success',\n  warning: 'ock-icon-color-warning',\n} as const;\n\nexport const line = {\n  primary: 'ock-line-primary border',\n  default: 'ock-line-default border',\n  heavy: 'ock-line-heavy border',\n  inverse: 'ock-line-inverse border',\n} as const;\n","import type { FormatAmountOptions, FormatAmountResponse } from '../types';\n\n/**\n * Retrieves a list of tokens on Base.\n */\nexport function formatAmount(\n  amount: string | undefined,\n  options: FormatAmountOptions = {},\n): FormatAmountResponse {\n  if (amount === undefined) {\n    return '';\n  }\n\n  const { locale, minimumFractionDigits, maximumFractionDigits } = options;\n\n  return Number(amount).toLocaleString(locale, {\n    minimumFractionDigits,\n    maximumFractionDigits,\n  });\n}\n","import { createContext, useCallback, useContext, useState } from 'react';\nimport { useValue } from '../../internal/hooks/useValue';\nimport type { NFTContextType, NFTProviderReact } from '../types';\n\nconst emptyContext = {} as NFTContextType;\n\nexport const NFTContext = createContext<NFTContextType>(emptyContext);\n\nexport function useNFTContext() {\n  const context = useContext(NFTContext);\n  if (context === emptyContext) {\n    throw new Error(\n      'useNFTContext must be used within an NFTView or NFTMint component',\n    );\n  }\n  return context;\n}\n\nexport function NFTProvider({\n  children,\n  contractAddress,\n  tokenId,\n  isSponsored,\n  useNFTData,\n  buildMintTransaction,\n}: NFTProviderReact) {\n  const [quantity, setQuantity] = useState(1);\n\n  const nftData = useNFTData(contractAddress, tokenId);\n\n  const handleSetQuantity = useCallback((quantity: string) => {\n    setQuantity(Number.parseInt(quantity, 10));\n  }, []);\n\n  const value = useValue({\n    contractAddress,\n    tokenId,\n    isSponsored,\n    quantity,\n    setQuantity: handleSetQuantity,\n    buildMintTransaction,\n    ...nftData,\n  });\n\n  return <NFTContext.Provider value={value}>{children}</NFTContext.Provider>;\n}\n","import { useMemo } from 'react';\n\nexport function useValue<T>(object: T): T {\n  return useMemo(() => object, [object]);\n}\n","import type { ReactNode } from 'react';\nimport { cn, color, text } from '../../../styles/theme';\nimport { formatAmount } from '../../../token/utils/formatAmount';\nimport { useNFTContext } from '../NFTProvider';\n\ntype NFTLastSoldPriceReact = {\n  className?: string;\n  label?: ReactNode;\n};\n\nexport function NFTLastSoldPrice({\n  className,\n  label = 'Mint price',\n}: NFTLastSoldPriceReact) {\n  const {\n    lastSoldPrice: { amount, currency, amountUSD },\n  } = useNFTContext();\n\n  if (!amount || !currency || !amountUSD) {\n    return null;\n  }\n\n  return (\n    <div className={cn('flex justify-between py-0.5', text.label2, className)}>\n      <div className={cn(color.foregroundMuted)}>{label}</div>\n      <div className=\"flex\">\n        <div className={text.label1}>\n          {amount} {currency}\n        </div>\n        <div className=\"px-2\">~</div>\n        <div>\n          $\n          {formatAmount(`${amountUSD}`, {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useCallback, useMemo } from 'react';\nimport { LifecycleType, MediaType, type NFTError } from '../../types';\nimport { useNFTLifecycleContext } from '../NFTLifecycleProvider';\nimport { useNFTContext } from '../NFTProvider';\nimport { NFTAudio } from './NFTAudio';\nimport { NFTImage } from './NFTImage';\nimport { NFTVideo } from './NFTVideo';\n\nexport function NFTMedia() {\n  const { mimeType } = useNFTContext();\n  const { type, updateLifecycleStatus } = useNFTLifecycleContext();\n\n  const mediaType = useMemo(() => {\n    if (mimeType?.startsWith('video')) {\n      return MediaType.Video;\n    }\n    if (mimeType?.startsWith('audio') || mimeType?.startsWith('application')) {\n      return MediaType.Audio;\n    }\n    if (mimeType?.startsWith('image')) {\n      return MediaType.Image;\n    }\n    return MediaType.Unknown;\n  }, [mimeType]);\n\n  const handleLoading = useCallback(\n    (mediaUrl: string) => {\n      updateLifecycleStatus({\n        statusName: 'mediaLoading',\n        statusData: {\n          mediaType,\n          mediaUrl,\n        },\n      });\n    },\n    [mediaType, updateLifecycleStatus],\n  );\n\n  const handleLoaded = useCallback(() => {\n    // for Views, this is the success state\n    updateLifecycleStatus({\n      statusName: type === LifecycleType.MINT ? 'mediaLoaded' : 'success',\n    });\n  }, [type, updateLifecycleStatus]);\n\n  const handleError = useCallback(\n    (error: NFTError) => {\n      updateLifecycleStatus({\n        statusName: 'error',\n        statusData: error,\n      });\n    },\n    [updateLifecycleStatus],\n  );\n\n  switch (mediaType) {\n    case MediaType.Video:\n      return (\n        <NFTVideo\n          onLoading={handleLoading}\n          onLoaded={handleLoaded}\n          onError={handleError}\n        />\n      );\n    case MediaType.Audio:\n      return (\n        <div className=\"relative w-full\">\n          <NFTImage />\n          <div className=\"absolute bottom-4 mx-auto w-full\">\n            <NFTAudio />\n          </div>\n        </div>\n      );\n    default:\n      // fallback to image\n      return (\n        <NFTImage\n          onLoading={handleLoading}\n          onLoaded={handleLoaded}\n          onError={handleError}\n        />\n      );\n  }\n}\n","import type { ReactNode } from 'react';\nimport type { Address, Hex, TransactionReceipt } from 'viem';\nimport type { Call, TransactionError } from '../transaction/types';\n\nexport type ContractType = 'ERC721' | 'ERC1155';\n\nexport enum MediaType {\n  Image = 'image',\n  Video = 'video',\n  Audio = 'audio',\n  Unknown = 'unknown',\n}\n\n/* Lifecycle Provider */\n\nexport enum LifecycleType {\n  VIEW = 'view',\n  MINT = 'mint',\n}\n\nexport type NFTLifecycleProviderReact = {\n  type: LifecycleType;\n  onError?: (error: NFTError) => void;\n  onStatus?: (lifecycleStatus: LifecycleStatus) => void;\n  onSuccess?: (transactionReceipt?: TransactionReceipt) => void;\n  children: ReactNode;\n};\n\nexport type NFTLifecycleContextType = {\n  type: LifecycleType;\n  lifecycleStatus: LifecycleStatus;\n  updateLifecycleStatus: (status: LifecycleStatusUpdate) => void;\n};\n\n/* NFT Provider */\n\nexport type NFTContextType = {\n  contractAddress: `0x${string}`;\n  tokenId?: string;\n  isSponsored?: boolean; // Optional boolean to determine if the mint is sponsored by paymaster\n  quantity: number;\n  setQuantity: (quantity: string) => void;\n  buildMintTransaction?: BuildMintTransaction;\n} & NFTData;\n\nexport type NFTProviderReact = {\n  children: ReactNode;\n  contractAddress: `0x${string}`;\n  tokenId?: string;\n  isSponsored?: boolean; // Optional boolean to determine if the mint is sponsored by paymaster\n  useNFTData: UseNFTData;\n  buildMintTransaction?: BuildMintTransaction;\n};\n\nexport type NFTPrice = {\n  amount?: number;\n  currency?: string;\n  amountUSD?: number;\n};\n\ntype UseNFTData = (contractAddress: Hex, tokenId?: string) => NFTData;\n\n/**\n * Note: exported as public Type\n */\nexport type NFTData = {\n  // view components\n  name?: string; // required for NFTTitle and NFTCollectionTitle\n  description?: string; // not currently used\n  imageUrl?: string; // required for NFTMedia\n  animationUrl?: string; // required for NFTMedia (audio and video types)\n  /* supported mimeTypes:\n   * image = image/*\n   * video = video/*\n   * audio = audio/* | application/*\n   */\n  mimeType?: string; // required for NFTMedia (falls back to image)\n\n  // mint components\n  ownerAddress?: `0x${string}`; // required for NFTOwner\n  lastSoldPrice: NFTPrice; // required for NFTLastSoldPrice\n  contractType?: ContractType; // not currently used\n  mintDate?: Date; // required for NFTMintDate\n  price?: NFTPrice; // required for NFTAssetCost, NftTotalCost\n  mintFee?: NFTPrice; // required for NFTTotalCost\n  creatorAddress?: Hex; // required for NFTCreator\n  maxMintsPerWallet?: number; // required for NFTMintButton\n  isEligibleToMint?: boolean; // required for NFTMintButton\n  totalOwners?: number; // required for NFTMinters\n  recentOwners?: Address[]; // required for NFTMinters\n};\n\ntype BuildMintTransaction = (\n  props: BuildMintTransactionDataProps,\n) => Promise<Call[]>;\n\nexport type BuildMintTransactionDataProps = {\n  contractAddress: Hex;\n  takerAddress: Address;\n  tokenId?: string;\n  quantity: number;\n};\n\nexport type NFTReact = {\n  children: ReactNode;\n  className?: string;\n};\n\n/**\n * Note: exported as public Type\n */\nexport type NFTCardReact = {\n  children: React.ReactNode;\n  className?: string;\n  contractAddress: Hex;\n  tokenId: string;\n  useNFTData: UseNFTData; // Optional hook to override the default useNftData hook\n  onError?: (error: NFTError) => void; // An optional callback function that handles errors within the provider.\n  onStatus?: (lifecycleStatus: LifecycleStatus) => void; // An optional callback function that exposes the component lifecycle state\n  onSuccess?: (transactionReceipt?: TransactionReceipt) => void; // view will not pass transactionReceipt\n};\n\n/**\n * Note: exported as public Type\n * NFTMint must be used if the NFTMintButton is included\n */\nexport type NFTMintCardReact = {\n  children: ReactNode;\n  className?: string; // Optional className override for top div element.\n  contractAddress: Hex; // Contract address of the NFT\n  tokenId?: string; // Token ID of the NFT only required for ERC1155\n  isSponsored?: boolean; // Optional boolean to determine if the mint is sponsored by paymaster\n  useNFTData: UseNFTData; // Required hook to supply NFT data\n  buildMintTransaction: BuildMintTransaction; // Required function that builds the mint transaction\n  onError?: (error: NFTError) => void; // An optional callback function that handles errors within the provider.\n  onStatus?: (lifecycleStatus: LifecycleStatus) => void; // An optional callback function that exposes the component lifecycle state\n  onSuccess?: (transactionReceipt?: TransactionReceipt) => void; // mint will pass transactionReceipt\n};\n\n/**\n * Note: exported as public Type\n */\nexport type NFTError =\n  | {\n      code: string; // The error code representing the type of nft error.\n      error: string; // The error message providing details about the nft error.\n      message: string; // The error message providing details about the nft error.\n    }\n  | TransactionError;\n\nexport type LifecycleStatus =\n  | {\n      statusName: 'init';\n      statusData: null;\n    }\n  | {\n      statusName: 'error';\n      statusData: NFTError;\n    }\n  | {\n      statusName: 'mediaLoading';\n      statusData: {\n        mediaType: MediaType;\n        mediaUrl: string;\n      };\n    }\n  | {\n      statusName: 'mediaLoaded';\n      statusData: null;\n    }\n  | {\n      statusName: 'transactionPending'; // if the mutation is currently executing\n      statusData: null;\n    }\n  | {\n      statusName: 'transactionLegacyExecuted';\n      statusData: {\n        transactionHashList: Address[];\n      };\n    }\n  | {\n      statusName: 'success'; // if the last mutation attempt was successful\n      statusData: {\n        transactionReceipts: TransactionReceipt[];\n      };\n    };\n\ntype LifecycleStatusDataShared = Record<string, never>;\n\n// make all keys in T optional if they are in K\ntype PartialKeys<T, K extends keyof T> = Omit<T, K> &\n  Partial<Pick<T, K>> extends infer O\n  ? { [P in keyof O]: O[P] }\n  : never;\n\n// check if all keys in T are a key of LifecycleStatusDataShared\ntype AllKeysInShared<T> = keyof T extends keyof LifecycleStatusDataShared\n  ? true\n  : false;\n\n/**\n * LifecycleStatus updater type\n * Used to type the statuses used to update LifecycleStatus\n * LifecycleStatusData is persisted across state updates allowing SharedData to be optional except for in init step\n */\nexport type LifecycleStatusUpdate = LifecycleStatus extends infer T\n  ? T extends { statusName: infer N; statusData: infer D }\n    ? { statusName: N } & (N extends 'init' // statusData required in statusName \"init\"\n        ? { statusData: D }\n        : AllKeysInShared<D> extends true // is statusData is LifecycleStatusDataShared, make optional\n          ? {\n              statusData?: PartialKeys<\n                D,\n                keyof D & keyof LifecycleStatusDataShared\n              >;\n            } // make all keys in LifecycleStatusDataShared optional\n          : {\n              statusData: PartialKeys<\n                D,\n                keyof D & keyof LifecycleStatusDataShared\n              >;\n            })\n    : never\n  : never;\n","import { createContext, useContext, useEffect } from 'react';\nimport { useValue } from '../../internal/hooks/useValue';\nimport { useLifecycleStatus } from '../hooks/useLifecycleStatus';\nimport type {\n  NFTLifecycleContextType,\n  NFTLifecycleProviderReact,\n} from '../types';\n\nconst emptyContext = {} as NFTLifecycleContextType;\n\nexport const NFTLifecycleContext =\n  createContext<NFTLifecycleContextType>(emptyContext);\n\nexport function useNFTLifecycleContext() {\n  const context = useContext(NFTLifecycleContext);\n  if (context === emptyContext) {\n    throw new Error(\n      'useNFTLifecycleContext must be used within an NFTView or NFTMint component',\n    );\n  }\n  return context;\n}\n\nexport function NFTLifecycleProvider({\n  type,\n  onStatus,\n  onError,\n  onSuccess,\n  children,\n}: NFTLifecycleProviderReact) {\n  const [lifecycleStatus, updateLifecycleStatus] = useLifecycleStatus({\n    statusName: 'init',\n    statusData: null,\n  }); // Component lifecycle\n\n  // Component lifecycle emitters\n  useEffect(() => {\n    // Error\n    if (lifecycleStatus.statusName === 'error') {\n      onError?.(lifecycleStatus.statusData);\n    }\n    // Success\n    if (lifecycleStatus.statusName === 'success') {\n      onSuccess?.(lifecycleStatus.statusData?.transactionReceipts?.[0]);\n    }\n    // Emit Status\n    onStatus?.(lifecycleStatus);\n  }, [\n    onError,\n    onStatus,\n    onSuccess,\n    lifecycleStatus,\n    lifecycleStatus.statusData, // Keep statusData, so that the effect runs when it changes\n    lifecycleStatus.statusName, // Keep statusName, so that the effect runs when it changes\n  ]);\n\n  const value = useValue({\n    lifecycleStatus,\n    type,\n    updateLifecycleStatus,\n  });\n\n  return (\n    <NFTLifecycleContext.Provider value={value}>\n      {children}\n    </NFTLifecycleContext.Provider>\n  );\n}\n","import { useCallback, useState } from 'react';\nimport type { LifecycleStatus, LifecycleStatusUpdate } from '../types';\n\ntype UseLifecycleStatusReturn = [\n  lifecycleStatus: LifecycleStatus,\n  updatelifecycleStatus: (newStatus: LifecycleStatusUpdate) => void,\n];\n\nexport function useLifecycleStatus(\n  initialState: LifecycleStatus,\n): UseLifecycleStatusReturn {\n  const [lifecycleStatus, setLifecycleStatus] =\n    useState<LifecycleStatus>(initialState); // Component lifecycle\n\n  // Update lifecycle status, statusData will be persisted for the full lifecycle\n  const updateLifecycleStatus = useCallback(\n    (newStatus: LifecycleStatusUpdate) => {\n      setLifecycleStatus((prevStatus: LifecycleStatus) => {\n        // do not persist errors\n        const persistedStatusData =\n          prevStatus.statusName === 'error'\n            ? (({ error, code, message, ...statusData }) => statusData)(\n                prevStatus.statusData,\n              )\n            : prevStatus.statusData;\n        return {\n          statusName: newStatus.statusName,\n          statusData: {\n            ...persistedStatusData,\n            ...newStatus.statusData,\n          },\n        } as LifecycleStatus;\n      });\n    },\n    [],\n  );\n\n  return [lifecycleStatus, updateLifecycleStatus];\n}\n","import {\n  type MouseEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { background, cn } from '../../../styles/theme';\nimport type { NFTError } from '../../types';\nimport { useNFTContext } from '../NFTProvider';\n\ntype NFTAudioReact = {\n  className?: string;\n  onLoading?: (mediaUrl: string) => void;\n  onLoaded?: () => void;\n  onError?: (error: NFTError) => void;\n};\n\nexport function NFTAudio({\n  className,\n  onLoading,\n  onLoaded,\n  onError,\n}: NFTAudioReact) {\n  const { animationUrl } = useNFTContext();\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  useEffect(() => {\n    function onEnded() {\n      setIsPlaying(false);\n    }\n\n    if (animationUrl && audioRef?.current) {\n      audioRef.current.onloadstart = () => {\n        onLoading?.(animationUrl);\n      };\n\n      audioRef.current.onloadeddata = () => {\n        onLoaded?.();\n      };\n\n      audioRef.current.addEventListener('ended', onEnded);\n\n      audioRef.current.onerror = (error: string | Event) => {\n        onError?.({\n          error: typeof error === 'string' ? error : error.type,\n          code: 'NmNAc01', // NFT module NFTAudio component 01 error\n          message: 'Error loading audio',\n        });\n      };\n    }\n  }, [animationUrl, onLoading, onLoaded, onError]);\n\n  const handlePlayPause = useCallback(\n    (event: MouseEvent) => {\n      event.stopPropagation();\n      if (isPlaying) {\n        audioRef.current?.pause();\n        setIsPlaying(false);\n      } else {\n        audioRef.current?.play();\n        setIsPlaying(true);\n      }\n    },\n    [isPlaying],\n  );\n\n  if (!animationUrl) {\n    return null;\n  }\n\n  return (\n    <div className={cn('max-h-350 w-350 max-w-350', className)}>\n      <button\n        type=\"button\"\n        className={cn(\n          background.reverse,\n          'ml-6 inline-flex h-[42px] w-[42px] cursor-pointer items-center justify-center rounded-full',\n        )}\n        onClick={handlePlayPause}\n      >\n        <div\n          className={cn(\n            'ml-px box-border h-[18px] transition-all ease-[100ms] will-change-[border-width]',\n            'border-transparent border-l-[var(--ock-bg-default)] hover:border-l-[var(--ock-bg-default-hover)]',\n            {\n              'border-[length:0_0_0_16px] border-double': isPlaying,\n              '-mr-px border-[length:9px_0_9px_16px] border-solid': !isPlaying,\n            },\n          )}\n        />\n      </button>\n      <audio\n        ref={audioRef}\n        data-testid=\"ockNFTAudio\"\n        autoPlay={false}\n        controls={false}\n        src={animationUrl}\n      >\n        <track kind=\"captions\" />\n      </audio>\n    </div>\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { defaultNFTSvg } from '../../../internal/svg/defaultNFTSvg';\nimport { cn } from '../../../styles/theme';\nimport type { NFTError } from '../../types';\nimport { useNFTContext } from '../NFTProvider';\n\ntype NFTImageReact = {\n  className?: string;\n  onLoading?: (mediaUrl: string) => void;\n  onLoaded?: () => void;\n  onError?: (error: NFTError) => void;\n};\n\nexport function NFTImage({\n  className,\n  onLoading,\n  onLoaded,\n  onError,\n}: NFTImageReact) {\n  const { imageUrl, description } = useNFTContext();\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(false);\n  const [transitionEnded, setTransitionEnded] = useState(false);\n\n  const loadImage = useCallback(() => {\n    if (imageUrl) {\n      onLoading?.(imageUrl);\n\n      const img = new Image();\n      img.onload = () => {\n        setLoaded(true);\n        onLoaded?.();\n      };\n\n      img.onerror = (error: string | Event) => {\n        onError?.({\n          error: typeof error === 'string' ? error : error.type,\n          code: 'NmNIc01', // NFT module NFTImage component 01 error\n          message: 'Error loading image',\n        });\n        setError(true);\n      };\n      img.src = imageUrl;\n    }\n  }, [imageUrl, onLoading, onLoaded, onError]);\n\n  useEffect(() => {\n    loadImage();\n  }, [loadImage]);\n\n  const handleRetry = useCallback(async () => {\n    setError(false);\n    loadImage();\n  }, [loadImage]);\n\n  const handleTransitionEnd = useCallback(() => {\n    setTransitionEnded(true);\n  }, []);\n\n  return (\n    <div\n      className={cn(\n        'relative flex h-[450px] max-h-screen items-center justify-center',\n        className,\n      )}\n    >\n      {error && (\n        <div className=\"absolute top-[60%] z-10\">\n          <button type=\"button\" onClick={handleRetry}>\n            retry\n          </button>\n        </div>\n      )}\n      {!transitionEnded && (\n        <div\n          className={`absolute inset-0 ${loaded ? 'opacity-0' : 'opacity-100'} transition-[opacity] duration-500 ease-in-out`}\n        >\n          {defaultNFTSvg}\n        </div>\n      )}\n      <img\n        data-testid=\"ockNFTImage\"\n        src={imageUrl}\n        alt={description}\n        decoding=\"async\"\n        className={`max-h-[450px] transition-[opacity] duration-500 ease-in-out ${loaded ? 'opacity-100' : 'opacity-0'}`}\n        onTransitionEnd={handleTransitionEnd}\n      />\n    </div>\n  );\n}\n","import { fill } from '../../styles/theme';\n\nexport const defaultNFTSvg = (\n  <svg\n    data-testid=\"ock-defaultNFTSvg\"\n    role=\"img\"\n    aria-label=\"loading\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 527.008 525\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <rect\n      fill=\"#F3F4F6\"\n      width=\"100%\"\n      height=\"100%\"\n      className={fill.alternate}\n    />\n    <path\n      d=\"M232.062 258.667C232.062 268.125 236.209 276.614 242.783 282.417H284.675C291.249 276.614 295.396 268.125 295.396 258.667C295.396 241.178 281.218 227 263.729 227C246.24 227 232.062 241.178 232.062 258.667ZM265.697 253.74L276.646 257.792L265.697 261.843L261.646 272.792L257.594 261.843L246.646 257.792L257.594 253.74L261.646 242.792L265.697 253.74ZM274.146 237.792L276.172 243.266L281.646 245.292L276.172 247.317L274.146 252.792L272.12 247.317L266.646 245.292L272.12 243.266L274.146 237.792Z\"\n      fill=\"#6B7280\"\n      className={fill.defaultReverse}\n    />\n    <path\n      d=\"M287.479 288.25H240.813L234.979 297H293.312L287.479 288.25Z\"\n      fill=\"#6B7280\"\n      className={fill.defaultReverse}\n    />\n  </svg>\n);\n","import { useEffect, useRef } from 'react';\nimport { defaultNFTSvg } from '../../../internal/svg/defaultNFTSvg';\nimport { cn } from '../../../styles/theme';\nimport type { NFTError } from '../../types';\nimport { useNFTContext } from '../NFTProvider';\n\ntype NFTVideoReact = {\n  className?: string;\n  onLoading?: (mediaUrl: string) => void;\n  onLoaded?: () => void;\n  onError?: (error: NFTError) => void;\n};\n\nexport function NFTVideo({\n  className,\n  onLoading,\n  onLoaded,\n  onError,\n}: NFTVideoReact) {\n  const { animationUrl, imageUrl } = useNFTContext();\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    if (animationUrl && videoRef?.current) {\n      videoRef.current.onloadstart = () => {\n        onLoading?.(animationUrl);\n      };\n\n      videoRef.current.onloadeddata = () => {\n        onLoaded?.();\n      };\n\n      videoRef.current.onerror = (error: string | Event) => {\n        onError?.({\n          error: typeof error === 'string' ? error : error.type,\n          code: 'NmNVc01', // NFT module NFTVideo component 01 error\n          message: 'Error loading video',\n        });\n      };\n    }\n  }, [animationUrl, onLoading, onLoaded, onError]);\n\n  if (!animationUrl) {\n    return <div className=\"max-h-350 w-350 max-w-350\">{defaultNFTSvg}</div>;\n  }\n\n  return (\n    <div className={cn('max-h-350 w-350 max-w-350', className)}>\n      <video\n        ref={videoRef}\n        data-testid=\"ockNFTVideo\"\n        poster={imageUrl}\n        controls={true}\n        loop={true}\n        src={animationUrl}\n        muted={true}\n        autoPlay={true}\n        playsInline={true}\n        draggable={false}\n        width=\"100%\"\n      />\n    </div>\n  );\n}\n","import { type ReactNode, useMemo } from 'react';\nimport { cn, color, text } from '../../../styles/theme';\nimport { useNFTContext } from '../NFTProvider';\n\nconst DATE_OPTIONS = {\n  year: 'numeric',\n  month: 'short',\n  day: 'numeric',\n} as Intl.DateTimeFormatOptions;\n\ntype NFTMintDateReact = {\n  className?: string;\n  label?: ReactNode;\n};\n\nexport function NFTMintDate({\n  className,\n  label = 'Mint date',\n}: NFTMintDateReact) {\n  const { mintDate } = useNFTContext();\n\n  const formattedDate = useMemo(() => {\n    if (!mintDate) {\n      return null;\n    }\n    const formatter = new Intl.DateTimeFormat(undefined, DATE_OPTIONS);\n    return formatter.format(mintDate);\n  }, [mintDate]);\n\n  if (!formattedDate) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cn(\n        'flex items-center justify-between py-0.5',\n        text.label2,\n        className,\n      )}\n    >\n      <div className={cn(color.foregroundMuted)}>{label}</div>\n      <div>{formattedDate}</div>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { border, cn, color, pressable, text } from '../../styles/theme';\nimport type { AddressReact } from '../types';\nimport { getSlicedAddress } from '../utils/getSlicedAddress';\nimport { useIdentityContext } from './IdentityProvider';\n\nexport function Address({\n  address = null,\n  className,\n  isSliced = true,\n}: AddressReact) {\n  const [copyText, setCopyText] = useState('Copy');\n  const { address: contextAddress } = useIdentityContext();\n  if (!contextAddress && !address) {\n    console.error(\n      'Address: an Ethereum address must be provided to the Identity or Address component.',\n    );\n    return null;\n  }\n\n  const accountAddress = address ?? contextAddress;\n\n  const handleClick = () => {\n    navigator.clipboard\n      .writeText(accountAddress)\n      .then(() => {\n        setCopyText('Copied');\n        setTimeout(() => setCopyText('Copy'), 2000);\n      })\n      .catch((err) => {\n        console.error('Failed to copy address: ', err);\n      });\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      handleClick();\n    }\n  };\n\n  return (\n    <span\n      data-testid=\"ockAddress\"\n      className={cn(\n        color.foregroundMuted,\n        text.label2,\n        className,\n        'group relative cursor-pointer',\n      )}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      tabIndex={0}\n      role=\"button\"\n    >\n      {isSliced ? getSlicedAddress(accountAddress) : accountAddress}\n      <span\n        className={cn(\n          pressable.alternate,\n          text.legal,\n          color.foreground,\n          border.default,\n          border.radius,\n          'absolute top-full left-[0%] z-10 mt-0.5 px-1.5 py-0.5 opacity-0 transition-opacity group-hover:opacity-100',\n        )}\n      >\n        {copyText}\n      </span>\n    </span>\n  );\n}\n","import type { Address } from 'viem';\n\n/**\n * Returns the first 6 and last 4 characters of an address.\n */\nexport const getSlicedAddress = (address: Address) => {\n  return `${address.slice(0, 6)}...${address.slice(-4)}`;\n};\n","import { createContext, useContext } from 'react';\nimport type { Address } from 'viem';\nimport { useValue } from '../../internal/hooks/useValue';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport type { IdentityContextType, IdentityProviderReact } from '../types';\n\nconst emptyContext = {} as IdentityContextType;\n\nexport const IdentityContext = createContext<IdentityContextType>(emptyContext);\n\nexport function useIdentityContext() {\n  return useContext(IdentityContext);\n}\n\nexport function IdentityProvider(props: IdentityProviderReact) {\n  const { chain: contextChain } = useOnchainKit();\n  const accountChain = props.chain ?? contextChain;\n\n  const value = useValue({\n    address: props.address || ('' as Address),\n    chain: accountChain,\n    schemaId: props.schemaId,\n  });\n\n  return (\n    <IdentityContext.Provider value={value}>\n      {props.children}\n    </IdentityContext.Provider>\n  );\n}\n","import { useContext } from 'react';\nimport { OnchainKitContext } from './OnchainKitProvider';\n\nexport function useOnchainKit() {\n  return useContext(OnchainKitContext);\n}\n","import { createContext, useMemo } from 'react';\nimport { ONCHAIN_KIT_CONFIG, setOnchainKitConfig } from './OnchainKitConfig';\nimport { checkHashLength } from './internal/utils/checkHashLength';\nimport type { OnchainKitContextType, OnchainKitProviderReact } from './types';\n\nexport const OnchainKitContext =\n  createContext<OnchainKitContextType>(ONCHAIN_KIT_CONFIG);\n\n/**\n * Provides the OnchainKit React Context to the app.\n */\nexport function OnchainKitProvider({\n  address,\n  apiKey,\n  chain,\n  children,\n  config,\n  projectId,\n  rpcUrl,\n  schemaId,\n}: OnchainKitProviderReact) {\n  if (schemaId && !checkHashLength(schemaId, 64)) {\n    throw Error('EAS schemaId must be 64 characters prefixed with \"0x\"');\n  }\n\n  const value = useMemo(() => {\n    const defaultPaymasterUrl = apiKey\n      ? `https://api.developer.coinbase.com/rpc/v1/${chain.name\n          .replace(' ', '-')\n          .toLowerCase()}/${apiKey}`\n      : null;\n    const onchainKitConfig = {\n      address: address ?? null,\n      apiKey: apiKey ?? null,\n      chain: chain,\n      config: {\n        appearance: {\n          name: config?.appearance?.name,\n          logo: config?.appearance?.logo,\n          mode: config?.appearance?.mode ?? 'auto',\n          theme: config?.appearance?.theme ?? 'default',\n        },\n        paymaster: config?.paymaster || defaultPaymasterUrl,\n      },\n      projectId: projectId ?? null,\n      rpcUrl: rpcUrl ?? null,\n      schemaId: schemaId ?? null,\n    };\n    setOnchainKitConfig(onchainKitConfig);\n    return onchainKitConfig;\n  }, [address, apiKey, chain, config, projectId, rpcUrl, schemaId]);\n\n  return (\n    <OnchainKitContext.Provider value={value}>\n      {children}\n    </OnchainKitContext.Provider>\n  );\n}\n","import { baseSepolia } from 'viem/chains';\nimport type { OnchainKitConfig, SetOnchainKitConfig } from './types';\n\n// The ONCHAIN_KIT_CONFIG is not exported at index.ts,\n// but only acccessed through the get and set functions.\nexport const ONCHAIN_KIT_CONFIG: OnchainKitConfig = {\n  address: null,\n  apiKey: null,\n  chain: baseSepolia,\n  config: {\n    appearance: {\n      name: null,\n      logo: null,\n      mode: null,\n      theme: null,\n    },\n    paymaster: null,\n  },\n  rpcUrl: null,\n  schemaId: null,\n  projectId: null,\n};\n\n/**\n * Access the ONCHAIN_KIT_CONFIG object directly by providing the key.\n * This is powerful when you use OnchainKit utilities outside of the React context.\n */\nexport const getOnchainKitConfig = <K extends keyof typeof ONCHAIN_KIT_CONFIG>(\n  configName: K,\n): (typeof ONCHAIN_KIT_CONFIG)[K] => {\n  return ONCHAIN_KIT_CONFIG[configName];\n};\n\n/**\n * Update the ONCHAIN_KIT_CONFIG object directly by providing the properties to update.\n * This is powerful when you use OnchainKit utilities outside of the React context.\n */\nexport const setOnchainKitConfig = (properties: SetOnchainKitConfig) => {\n  Object.assign(ONCHAIN_KIT_CONFIG, properties);\n  return getOnchainKitConfig;\n};\n","import { Children, useMemo } from 'react';\nimport { defaultAvatarSVG } from '../../internal/svg/defaultAvatarSVG';\nimport { defaultLoadingSVG } from '../../internal/svg/defaultLoadingSVG';\nimport { findComponent } from '../../internal/utils/findComponent';\nimport { cn } from '../../styles/theme';\nimport { useAvatar } from '../hooks/useAvatar';\nimport { useName } from '../hooks/useName';\nimport type { AvatarReact } from '../types';\nimport { Badge } from './Badge';\nimport { DisplayBadge } from './DisplayBadge';\nimport { useIdentityContext } from './IdentityProvider';\n\n/**\n * Represents an Avatar component that displays either a loading indicator,\n * a default avatar, or a custom avatar based on Ethereum Name Service (ENS).\n */\n// biome-ignore lint/complexity/noExcessiveCognitiveComplexity: TODO Refactor this component\nexport function Avatar({\n  address = null,\n  chain,\n  className,\n  defaultComponent,\n  loadingComponent,\n  children,\n  ...props\n}: AvatarReact) {\n  const { address: contextAddress, chain: contextChain } = useIdentityContext();\n\n  const accountAddress = address ?? contextAddress;\n  const accountChain = chain ?? contextChain;\n\n  if (!accountAddress) {\n    console.error(\n      'Avatar: an Ethereum address must be provided to the Identity or Avatar component.',\n    );\n    return null;\n  }\n\n  // The component first attempts to retrieve the ENS name and avatar for the given Ethereum address.\n  const { data: name, isLoading: isLoadingName } = useName({\n    address: accountAddress,\n    chain: accountChain,\n  });\n\n  const { data: avatar, isLoading: isLoadingAvatar } = useAvatar(\n    { ensName: name ?? '', chain: accountChain },\n    { enabled: !!name },\n  );\n\n  const badge = useMemo(() => {\n    return Children.toArray(children).find(findComponent(Badge));\n  }, [children]);\n\n  const defaultAvatar = defaultComponent || defaultAvatarSVG;\n  const loadingAvatar = loadingComponent || defaultLoadingSVG;\n\n  // If the data is still loading, it displays a loading SVG.\n  if (isLoadingName || isLoadingAvatar) {\n    return (\n      <div className={cn('h-8 w-8 overflow-hidden rounded-full', className)}>\n        {loadingAvatar}\n      </div>\n    );\n  }\n\n  const displayAvatarImg = name && avatar;\n\n  // Otherwise, it displays the custom avatar obtained from ENS.\n  return (\n    <div className=\"relative\">\n      <div\n        data-testid=\"ockAvatar_ImageContainer\"\n        className={cn('h-10 w-10 overflow-hidden rounded-full', className)}\n      >\n        {/* biome-ignore lint: alt gets assigned */}\n        {displayAvatarImg ? (\n          <img\n            className=\"min-h-full min-w-full object-cover\"\n            data-testid=\"ockAvatar_Image\"\n            loading=\"lazy\"\n            width=\"100%\"\n            height=\"100%\"\n            decoding=\"async\"\n            src={avatar}\n            alt={name}\n            {...props}\n          />\n        ) : (\n          defaultAvatar\n        )}\n      </div>\n      {badge && (\n        <DisplayBadge address={accountAddress}>\n          <div\n            data-testid=\"ockAvatar_BadgeContainer\"\n            className=\"-bottom-0.5 -right-0.5 absolute flex h-[15px] w-[15px] items-center justify-center rounded-full bg-transparent\"\n          >\n            <div className=\"flex h-3 w-3 items-center justify-center\">\n              {badge}\n            </div>\n          </div>\n        </DisplayBadge>\n      )}\n    </div>\n  );\n}\n","import { icon } from '../../styles/theme';\n\nexport const defaultAvatarSVG = (\n  <svg\n    data-testid=\"ock-defaultAvatarSVG\"\n    role=\"img\"\n    aria-label=\"ock-defaultAvatarSVG\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 40 40\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-full w-full\"\n  >\n    <path\n      d=\"M20 40C8.9543 40 0 31.0457 0 20C0 8.9543 8.9543 0 20 0C31.0457 0 40 8.9543 40 20C40 31.0457 31.0457 40 20 40ZM25.6641 13.9974C25.6641 10.8692 23.1282 8.33333 20.0001 8.33333C16.8719 8.33333 14.336 10.8692 14.336 13.9974C14.336 17.1256 16.8719 19.6615 20.0001 19.6615C23.1282 19.6615 25.6641 17.1256 25.6641 13.9974ZM11.3453 23.362L9.53476 28.1875C12.2141 30.8475 15.9019 32.493 19.974 32.5H20.026C24.0981 32.493 27.7859 30.8475 30.4653 28.1874L28.6547 23.362C28.0052 21.625 26.3589 20.4771 24.5162 20.4318C24.4557 20.4771 22.462 21.9271 20 21.9271C17.538 21.9271 15.5443 20.4771 15.4839 20.4318C13.6412 20.462 11.9948 21.625 11.3453 23.362Z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","export const defaultLoadingSVG = (\n  <svg\n    data-testid=\"ock-defaultLoadingSVG\"\n    role=\"img\"\n    aria-label=\"ock-defaultLoadingSVG\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 100 100\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <circle\n      cx=\"50\"\n      cy=\"50\"\n      r=\"45\"\n      stroke=\"#333\"\n      fill=\"none\"\n      strokeWidth=\"10\"\n      strokeLinecap=\"round\"\n    >\n      <animateTransform\n        attributeName=\"transform\"\n        type=\"rotate\"\n        from=\"0 50 50\"\n        to=\"360 50 50\"\n        dur=\"1s\"\n        repeatCount=\"indefinite\"\n      />\n    </circle>\n  </svg>\n);\n","import { isValidElement } from 'react';\nimport type { ComponentType, ReactElement, ReactNode } from 'react';\n\nexport function findComponent<T>(component: ComponentType<T>) {\n  return (child: ReactNode): child is ReactElement<T> => {\n    return isValidElement(child) && child.type === component;\n  };\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { mainnet } from 'viem/chains';\nimport type {\n  GetAvatarReturnType,\n  UseAvatarOptions,\n  UseQueryOptions,\n} from '../types';\nimport { getAvatar } from '../utils/getAvatar';\n\n/**\n * Gets an ensName and resolves the Avatar\n */\nexport const useAvatar = (\n  { ensName, chain = mainnet }: UseAvatarOptions,\n  queryOptions?: UseQueryOptions,\n) => {\n  const { enabled = true, cacheTime } = queryOptions ?? {};\n  const ensActionKey = `ens-avatar-${ensName}-${chain.id}`;\n  return useQuery<GetAvatarReturnType>({\n    queryKey: ['useAvatar', ensActionKey],\n    queryFn: async () => {\n      return getAvatar({ ensName, chain });\n    },\n    gcTime: cacheTime,\n    enabled,\n    refetchOnWindowFocus: false,\n  });\n};\n","import { mainnet } from 'viem/chains';\nimport { normalize } from 'viem/ens';\nimport { isBase } from '../../isBase';\nimport { isEthereum } from '../../isEthereum';\nimport { getChainPublicClient } from '../../network/getChainPublicClient';\nimport { RESOLVER_ADDRESSES_BY_CHAIN_ID } from '../constants';\nimport type { Basename, GetAvatar, GetAvatarReturnType } from '../types';\nimport { getBaseDefaultProfilePicture } from './getBaseDefaultProfilePicture';\nimport { isBasename } from './isBasename';\n\n/**\n * An asynchronous function to fetch the Ethereum Name Service (ENS)\n * avatar for a given Ethereum name. It returns the ENS name if it exists,\n * or null if it doesn't or in case of an error.\n */\nexport const getAvatar = async ({\n  ensName,\n  chain = mainnet,\n}: GetAvatar): Promise<GetAvatarReturnType> => {\n  const chainIsBase = isBase({ chainId: chain.id });\n  const chainIsEthereum = isEthereum({ chainId: chain.id });\n  const chainSupportsUniversalResolver = chainIsEthereum || chainIsBase;\n  const usernameIsBasename = isBasename(ensName);\n\n  if (!chainSupportsUniversalResolver) {\n    return Promise.reject(\n      'ChainId not supported, avatar resolution is only supported on Ethereum and Base.',\n    );\n  }\n\n  let client = getChainPublicClient(chain);\n  let baseEnsAvatar = null;\n\n  // 1. Try basename\n  if (chainIsBase) {\n    try {\n      baseEnsAvatar = await client.getEnsAvatar({\n        name: normalize(ensName),\n        universalResolverAddress: RESOLVER_ADDRESSES_BY_CHAIN_ID[chain.id],\n      });\n\n      if (baseEnsAvatar) {\n        return baseEnsAvatar;\n      }\n    } catch (_error) {\n      // This is a best effort attempt, so we don't need to do anything here.\n    }\n  }\n\n  // 2. Defaults to mainnet\n  client = getChainPublicClient(mainnet);\n  const mainnetEnsAvatar = await client.getEnsAvatar({\n    name: normalize(ensName),\n  });\n\n  if (mainnetEnsAvatar) {\n    return mainnetEnsAvatar;\n  }\n\n  // 3. If username is a Basename (.base.eth / .basetest.eth), use default Basename avatars\n  if (usernameIsBasename) {\n    return getBaseDefaultProfilePicture(ensName as Basename);\n  }\n\n  // 4. No avatars to display\n  return null;\n};\n","import { base, baseSepolia } from 'viem/chains';\nimport type { isBaseOptions } from './types';\n\n/**\n * isBase\n *  - Checks if the paymaster operations chain id is valid\n *  - Only allows the Base and Base Sepolia chain ids\n */\nexport function isBase({\n  chainId,\n  isMainnetOnly = false,\n}: isBaseOptions): boolean {\n  // If only Base mainnet\n  if (isMainnetOnly && chainId === base.id) {\n    return true;\n  }\n  // If only Base or Base Sepolia\n  if (!isMainnetOnly && (chainId === baseSepolia.id || chainId === base.id)) {\n    return true;\n  }\n  return false;\n}\n","import { mainnet, sepolia } from 'viem/chains';\nimport type { isEthereumOptions } from './types';\n\n/**\n * isEthereum\n *  - Checks if the chain is mainnet or sepolia\n */\nexport function isEthereum({\n  chainId,\n  isMainnetOnly = false,\n}: isEthereumOptions): boolean {\n  // If only ETH mainnet\n  if (isMainnetOnly && chainId === mainnet.id) {\n    return true;\n  }\n  // If only ETH or ETH Sepolia\n  if (!isMainnetOnly && (chainId === sepolia.id || chainId === mainnet.id)) {\n    return true;\n  }\n  return false;\n}\n","import { http, createPublicClient } from 'viem';\nimport type { Chain } from 'viem/chains';\n\nexport function getChainPublicClient(chain: Chain) {\n  return createPublicClient({\n    chain: chain,\n    transport: http(),\n  });\n}\n","import { base, baseSepolia } from 'viem/chains';\nimport type { ResolverAddressesByChainIdMap } from './types';\n\nexport const RESOLVER_ADDRESSES_BY_CHAIN_ID: ResolverAddressesByChainIdMap = {\n  [baseSepolia.id]: '0x6533C94869D28fAA8dF77cc63f9e2b2D6Cf77eBA',\n  [base.id]: '0xC6d566A56A1aFf6508b41f6c90ff131615583BCD',\n};\n\n// Basename default profile pictures\nconst BASE_DEFAULT_PROFILE_PICTURES1 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72801)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2596.93 1721.27C2605.58 1648.75 2610.21 1574.9 2610.21 1500C2610.21 1425.1 2605.58 1351.4 2596.93 1278.73C2770.3 1177.28 2815.96 914.534 2631.1 772.941C2553.96 713.858 2472.05 660.593 2385.96 614.042C2339.26 528.102 2286.14 446.041 2227.06 368.904C2085.47 184.192 1822.72 229.699 1721.27 403.071C1648.75 394.417 1574.9 389.792 1500 389.792C1425.1 389.792 1351.4 394.417 1278.73 403.071C1177.28 229.699 914.534 184.043 772.941 368.904C713.858 446.041 660.593 527.953 614.042 614.042C528.102 660.742 446.041 713.858 368.904 772.941C184.192 914.534 229.699 1177.28 403.071 1278.73C394.417 1351.25 389.792 1425.1 389.792 1500C389.792 1574.9 394.417 1648.6 403.071 1721.27C229.699 1822.72 184.043 2085.47 368.904 2227.06C446.041 2286.14 527.953 2339.41 614.042 2385.96C660.742 2471.9 713.858 2553.96 772.941 2631.1C914.534 2815.81 1177.28 2770.3 1278.73 2596.93C1351.25 2605.58 1425.1 2610.21 1500 2610.21C1574.9 2610.21 1648.6 2605.58 1721.27 2596.93C1822.72 2770.3 2085.47 2815.96 2227.06 2631.1C2286.14 2553.96 2339.41 2472.05 2385.96 2385.96C2471.9 2339.26 2553.96 2286.14 2631.1 2227.06C2815.81 2085.47 2770.3 1822.72 2596.93 1721.27Z\" fill=\"white\"/><path d=\"M1391.06 1500C1391.06 1647.89 1358.4 1781.62 1305.74 1878.28C1253.03 1975.05 1180.69 2034 1101.53 2034C1022.36 2034 950.031 1975.05 897.314 1878.28C844.66 1781.62 812 1647.89 812 1500C812 1352.11 844.66 1218.38 897.314 1121.72C950.031 1024.95 1022.36 966 1101.53 966C1180.69 966 1253.03 1024.95 1305.74 1121.72C1358.4 1218.38 1391.06 1352.11 1391.06 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1102.57\" cy=\"1194.93\" rx=\"126.414\" ry=\"231.934\" fill=\"white\"/><path d=\"M2187.16 1500C2187.16 1647.89 2154.5 1781.62 2101.84 1878.28C2049.13 1975.05 1976.79 2034 1897.63 2034C1818.46 2034 1746.13 1975.05 1693.41 1878.28C1640.76 1781.62 1608.1 1647.89 1608.1 1500C1608.1 1352.11 1640.76 1218.38 1693.41 1121.72C1746.13 1024.95 1818.46 966 1897.63 966C1976.79 966 2049.13 1024.95 2101.84 1121.72C2154.5 1218.38 2187.16 1352.11 2187.16 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1896.58\" cy=\"1194.93\" rx=\"126.414\" ry=\"231.934\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72801\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES2 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72809)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2188.12 1131.95C2691.11 591.187 2356.8 256.94 1815.91 759.826C1767.57 804.826 1737.56 866.494 1733.32 932.403C1733.32 933.767 1733.17 934.979 1733.02 936.343C1722.56 1094.68 1853.35 1225.44 2011.72 1214.98C2013.08 1214.98 2014.29 1214.83 2015.66 1214.68C2081.58 1210.44 2143.26 1180.44 2188.27 1132.1L2188.12 1131.95Z\" fill=\"white\"/><path d=\"M759.879 1816.05C256.885 2356.81 591.204 2691.06 1132.08 2188.17C1180.43 2143.17 1210.44 2081.51 1214.68 2015.6C1214.68 2014.23 1214.83 2013.02 1214.98 2011.66C1225.44 1853.32 1094.65 1722.56 936.283 1733.02C934.919 1733.02 933.706 1733.17 932.342 1733.32C866.418 1737.56 804.738 1767.56 759.727 1815.9L759.879 1816.05Z\" fill=\"white\"/><path d=\"M1131.96 759.922C591.247 256.826 256.881 591.264 759.869 1132.09C804.865 1180.43 866.527 1210.44 932.431 1214.68C933.794 1214.68 935.006 1214.83 936.37 1214.98C1094.69 1225.44 1225.44 1094.66 1214.98 936.309C1214.98 934.946 1214.83 933.733 1214.68 932.369C1210.44 866.452 1180.44 804.777 1132.11 759.771L1131.96 759.922Z\" fill=\"white\"/><path d=\"M1816.05 2188.12C2356.81 2691.11 2691.06 2356.8 2188.17 1815.91C2143.17 1767.57 2081.51 1737.56 2015.6 1733.32C2014.23 1733.32 2013.02 1733.17 2011.66 1733.02C1853.32 1722.56 1722.56 1853.35 1733.02 2011.72C1733.02 2013.08 1733.17 2014.29 1733.32 2015.66C1737.56 2081.58 1767.56 2143.26 1815.9 2188.27L1816.05 2188.12Z\" fill=\"white\"/><path d=\"M1737.18 727.02C1710.36 -10.3398 1237.66 -10.3398 1210.84 727.02C1208.42 792.869 1230.84 857.658 1274.48 907.31C1275.39 908.37 1276.14 909.278 1277.05 910.338C1381.59 1029.62 1566.43 1029.62 1670.97 910.338C1671.88 909.278 1672.63 908.37 1673.54 907.31C1717.18 857.81 1739.45 793.02 1737.18 727.02Z\" fill=\"white\"/><path d=\"M727.02 1210.82C-10.3398 1237.64 -10.3398 1710.34 727.02 1737.16C792.869 1739.58 857.658 1717.16 907.31 1673.52C908.218 1672.62 909.278 1671.86 910.338 1670.95C1029.62 1566.41 1029.62 1381.57 910.338 1277.03C909.278 1276.12 908.37 1275.37 907.31 1274.46C857.81 1230.82 793.02 1208.55 727.02 1210.82Z\" fill=\"white\"/><path d=\"M2040.69 1274.48C2039.63 1275.39 2038.72 1276.14 2037.66 1277.05C1918.38 1381.59 1918.38 1566.43 2037.66 1670.97C2038.72 1671.88 2039.63 1672.63 2040.69 1673.54C2090.19 1717.18 2154.98 1739.45 2220.98 1737.18C2958.34 1710.36 2958.34 1237.66 2220.98 1210.84C2155.13 1208.42 2090.34 1230.84 2040.69 1274.48Z\" fill=\"white\"/><path d=\"M1210.82 2220.98C1237.64 2958.34 1710.34 2958.34 1737.16 2220.98C1739.58 2155.13 1717.16 2090.34 1673.52 2040.69C1672.62 2039.63 1671.86 2038.72 1670.95 2037.66C1566.41 1918.38 1381.57 1918.38 1277.03 2037.66C1276.12 2038.72 1275.37 2039.63 1274.46 2040.69C1230.82 2090.19 1208.55 2154.98 1210.82 2220.98Z\" fill=\"white\"/><circle cx=\"1474.5\" cy=\"1474.5\" r=\"886.5\" fill=\"white\"/><path d=\"M1391.06 1500C1391.06 1352.11 1358.4 1218.38 1305.74 1121.72C1253.03 1024.95 1180.69 966 1101.53 966C1022.36 966 950.031 1024.95 897.314 1121.72C844.66 1218.38 812 1352.11 812 1500C812 1647.89 844.66 1781.62 897.314 1878.28C950.031 1975.05 1022.36 2034 1101.53 2034C1180.69 2034 1253.03 1975.05 1305.74 1878.28C1358.4 1781.62 1391.06 1647.89 1391.06 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"126.414\" cy=\"231.934\" rx=\"126.414\" ry=\"231.934\" transform=\"matrix(1 0 0 -1 976.16 2037)\" fill=\"white\"/><path d=\"M2187.16 1500C2187.16 1352.11 2154.5 1218.38 2101.84 1121.72C2049.12 1024.95 1976.79 966 1897.63 966C1818.46 966 1746.13 1024.95 1693.41 1121.72C1640.76 1218.38 1608.1 1352.11 1608.1 1500C1608.1 1647.89 1640.76 1781.62 1693.41 1878.28C1746.13 1975.05 1818.46 2034 1897.63 2034C1976.79 2034 2049.12 1975.05 2101.84 1878.28C2154.5 1781.62 2187.16 1647.89 2187.16 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"126.414\" cy=\"231.934\" rx=\"126.414\" ry=\"231.934\" transform=\"matrix(1 0 0 -1 1770.17 2037)\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72809\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES3 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72826)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M587.596 2230.75C839.799 2148.27 1126.41 2048.74 1282.85 1934.35C1406.13 1849.79 1458.98 1757.13 1483.16 1651.34C1488.13 1629.73 1511.93 1629.73 1516.8 1651.34C1540.98 1757.01 1593.83 1849.67 1717.11 1934.35C1873.55 2048.74 2160.26 2148.28 2412.36 2230.75C2681.77 2308.44 2735.86 2334.34 2656.73 2207.31C2588.97 2088.63 2388.28 1817.51 2407.39 1489.82C2407.39 1489.21 2407.39 1488.59 2407.39 1487.86C2397.17 1162.25 2598.34 899.36 2662.18 786.079C2737.77 664.821 2675.65 693.54 2406.72 771.597C2154.43 854.195 1870.3 953.362 1715.2 1067.5C1593.25 1151.7 1540.79 1203.99 1516.8 1309.05C1511.83 1330.65 1488.03 1330.65 1483.16 1309.05C1459.17 1203.87 1406.71 1151.7 1284.76 1067.5C1129.66 953.362 845.533 854.195 593.234 771.597C324.307 693.54 262.284 664.821 337.782 786.079C401.621 899.36 602.791 1162.37 592.47 1488.1C592.47 1488.72 592.47 1489.33 592.47 1490.07C611.583 1817.76 410.891 2088.87 343.134 2207.55C264.004 2334.46 318.095 2308.68 587.5 2231L587.596 2230.75Z\" fill=\"white\"/><path d=\"M769.249 587.596C851.725 839.799 951.26 1126.41 1065.65 1282.85C1150.21 1406.13 1242.87 1458.98 1348.66 1483.16C1370.26 1488.13 1370.26 1511.93 1348.66 1516.8C1242.99 1540.98 1150.33 1593.83 1065.65 1717.11C951.26 1873.55 851.725 2160.26 769.249 2412.36C691.56 2681.77 665.664 2735.86 792.691 2656.73C911.372 2588.97 1182.49 2388.28 1510.18 2407.39C1510.79 2407.39 1511.41 2407.39 1512.14 2407.39C1837.75 2397.17 2100.64 2598.34 2213.92 2662.18C2335.18 2737.77 2306.46 2675.65 2228.4 2406.72C2145.8 2154.43 2046.64 1870.3 1932.5 1715.2C1848.3 1593.25 1796.01 1540.79 1690.95 1516.8C1669.35 1511.83 1669.35 1488.03 1690.95 1483.16C1796.13 1459.17 1848.3 1406.71 1932.5 1284.76C2046.64 1129.66 2145.8 845.533 2228.4 593.234C2306.46 324.307 2335.18 262.284 2213.92 337.782C2100.64 401.621 1837.63 602.791 1511.9 592.47C1511.28 592.47 1510.67 592.47 1509.93 592.47C1182.24 611.583 911.127 410.891 792.446 343.134C665.541 264.004 691.315 318.095 769.004 587.5L769.249 587.596Z\" fill=\"white\"/><path d=\"M1391.06 1500C1391.06 1352.11 1358.4 1218.38 1305.74 1121.72C1253.03 1024.95 1180.69 966 1101.53 966C1022.36 966 950.031 1024.95 897.314 1121.72C844.66 1218.38 812 1352.11 812 1500C812 1647.89 844.66 1781.62 897.314 1878.28C950.031 1975.05 1022.36 2034 1101.53 2034C1180.69 2034 1253.03 1975.05 1305.74 1878.28C1358.4 1781.62 1391.06 1647.89 1391.06 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"126.414\" cy=\"231.934\" rx=\"126.414\" ry=\"231.934\" transform=\"matrix(1 0 0 -1 976.159 2037)\" fill=\"white\"/><path d=\"M2187.16 1500C2187.16 1352.11 2154.5 1218.38 2101.84 1121.72C2049.12 1024.95 1976.79 966 1897.63 966C1818.46 966 1746.13 1024.95 1693.41 1121.72C1640.76 1218.38 1608.1 1352.11 1608.1 1500C1608.1 1647.89 1640.76 1781.62 1693.41 1878.28C1746.13 1975.05 1818.46 2034 1897.63 2034C1976.79 2034 2049.12 1975.05 2101.84 1878.28C2154.5 1781.62 2187.16 1647.89 2187.16 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"126.414\" cy=\"231.934\" rx=\"126.414\" ry=\"231.934\" transform=\"matrix(1 0 0 -1 1770.17 2037)\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72826\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES4 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72835)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2713.13 1500C2731.2 1680.92 2615.13 1818.15 2507.78 1924.42C2394.7 2032.13 2290.44 2108.88 2200.88 2200.61C2109.15 2290.16 2032.22 2394.61 1924.51 2507.68C1818.15 2615.04 1680.92 2731.11 1500 2713.13C1319.08 2731.2 1181.85 2615.13 1075.58 2507.78C967.866 2394.7 891.12 2290.44 799.389 2200.88C709.837 2109.15 605.39 2032.22 492.315 1924.51C384.962 1818.15 268.89 1680.92 286.873 1500C268.799 1319.08 384.871 1181.85 492.224 1075.58C605.299 967.866 709.564 891.12 799.116 799.389C890.848 709.837 967.775 605.39 1075.49 492.315C1181.85 384.871 1319.08 268.799 1500 286.873C1680.92 268.799 1818.15 384.871 1924.42 492.224C2032.13 605.299 2108.88 709.564 2200.61 799.116C2290.16 890.848 2394.61 967.775 2507.68 1075.49C2615.04 1181.85 2731.11 1319.08 2713.13 1500Z\" fill=\"white\"/><path d=\"M1391.06 1500C1391.06 1647.89 1358.4 1781.62 1305.74 1878.28C1253.03 1975.05 1180.69 2034 1101.53 2034C1022.36 2034 950.031 1975.05 897.314 1878.28C844.66 1781.62 812 1647.89 812 1500C812 1352.11 844.66 1218.38 897.314 1121.72C950.031 1024.95 1022.36 966 1101.53 966C1180.69 966 1253.03 1024.95 1305.74 1121.72C1358.4 1218.38 1391.06 1352.11 1391.06 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1102.57\" cy=\"1194.93\" rx=\"126.414\" ry=\"231.934\" fill=\"white\"/><path d=\"M2187.16 1500C2187.16 1647.89 2154.5 1781.62 2101.84 1878.28C2049.12 1975.05 1976.79 2034 1897.63 2034C1818.46 2034 1746.13 1975.05 1693.41 1878.28C1640.76 1781.62 1608.1 1647.89 1608.1 1500C1608.1 1352.11 1640.76 1218.38 1693.41 1121.72C1746.13 1024.95 1818.46 966 1897.63 966C1976.79 966 2049.12 1024.95 2101.84 1121.72C2154.5 1218.38 2187.16 1352.11 2187.16 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1896.58\" cy=\"1194.93\" rx=\"126.414\" ry=\"231.934\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72835\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES5 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72843)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2321.64 1500C3048.65 1727.51 2902.59 1900.1 2182.54 1787.44C2625.43 2169.27 2494.23 2265.93 1974.71 1974.53C2266.19 2493.97 2169.44 2625.34 1787.53 2182.54C1900.19 2902.68 1727.6 3048.65 1500 2321.64C1272.49 3048.65 1099.9 2902.59 1212.56 2182.54C830.733 2625.43 734.069 2494.23 1025.47 1974.71C506.03 2266.19 374.655 2169.44 817.464 1787.53C97.3173 1900.19 -48.6455 1727.6 678.356 1500C-48.6455 1272.49 97.4051 1099.9 817.464 1212.56C374.567 830.733 505.767 734.069 1025.29 1025.47C733.806 506.03 830.558 374.655 1212.47 817.464C1099.81 97.3173 1272.4 -48.6455 1500 678.356C1727.51 -48.6455 1900.1 97.4051 1787.44 817.464C2169.27 374.567 2265.93 505.767 1974.53 1025.29C2493.97 733.806 2625.34 830.558 2182.54 1212.47C2902.68 1099.81 3048.65 1272.4 2321.64 1500Z\" fill=\"white\"/><path d=\"M1402.29 1500.15C1402.29 1632.88 1372.98 1752.91 1325.73 1839.64C1278.42 1926.48 1213.56 1979.29 1142.65 1979.29C1071.73 1979.29 1006.87 1926.48 959.562 1839.64C912.315 1752.91 883 1632.88 883 1500.15C883 1367.41 912.315 1247.38 959.562 1160.65C1006.87 1073.81 1071.73 1021 1142.65 1021C1213.56 1021 1278.42 1073.81 1325.73 1160.65C1372.98 1247.38 1402.29 1367.41 1402.29 1500.15Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"998.466\" cy=\"1500.14\" rx=\"113.501\" ry=\"208.242\" fill=\"white\"/><path d=\"M2117.07 1500.15C2117.07 1632.88 2087.76 1752.91 2040.51 1839.64C1993.2 1926.48 1928.34 1979.29 1857.42 1979.29C1786.51 1979.29 1721.65 1926.48 1674.34 1839.64C1627.09 1752.91 1597.78 1632.88 1597.78 1500.15C1597.78 1367.41 1627.09 1247.38 1674.34 1160.65C1721.65 1073.81 1786.51 1021 1857.42 1021C1928.34 1021 1993.2 1073.81 2040.51 1160.65C2087.76 1247.38 2117.07 1367.41 2117.07 1500.15Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1712.74\" cy=\"1498.06\" rx=\"113.501\" ry=\"208.242\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72843\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES6 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72851)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2538.7 1207.34C2483.17 1184.33 2431.23 1159.94 2382.18 1133.9C2398.44 1080.86 2417.87 1026.85 2440.88 971.324C2548.89 711.06 2287.94 450.106 2027.68 558.125C1972.15 581.134 1918.14 600.699 1865.1 616.819C1839.06 567.907 1814.67 515.827 1791.66 460.302C1684.05 199.899 1314.94 199.899 1207.34 460.302C1184.33 515.827 1159.94 567.769 1133.9 616.819C1080.86 600.561 1026.85 581.134 971.324 558.125C711.06 450.106 450.106 711.06 558.125 971.324C581.134 1026.85 600.699 1080.86 616.819 1133.9C567.907 1159.94 515.827 1184.33 460.302 1207.34C199.899 1314.94 199.899 1684.05 460.302 1791.66C515.827 1814.67 567.769 1839.06 616.819 1865.1C600.561 1918.14 581.134 1972.15 558.125 2027.68C450.106 2287.94 711.06 2548.89 971.324 2440.88C1026.85 2417.87 1080.86 2398.3 1133.9 2382.18C1159.94 2431.09 1184.33 2483.17 1207.34 2538.7C1314.94 2799.1 1684.05 2799.1 1791.66 2538.7C1814.67 2483.17 1839.06 2431.23 1865.1 2382.18C1918.14 2398.44 1972.15 2417.87 2027.68 2440.88C2287.94 2548.89 2548.89 2287.94 2440.88 2027.68C2417.87 1972.15 2398.3 1918.14 2382.18 1865.1C2431.09 1839.06 2483.17 1814.67 2538.7 1791.66C2799.1 1684.05 2799.1 1314.94 2538.7 1207.34ZM1735.31 1727.87C1732.83 1730.35 1730.35 1732.83 1727.87 1735.31C1697.42 1766.58 1662.15 1790.01 1624.53 1806.13C1587.47 1820.46 1547.24 1828.17 1504.94 1827.62C1501.36 1827.62 1497.92 1827.62 1494.33 1827.62C1452.04 1828.17 1411.67 1820.32 1374.74 1806.13C1337.13 1790.01 1301.86 1766.58 1271.41 1735.31C1268.93 1732.83 1266.45 1730.35 1263.97 1727.87C1232.69 1697.42 1209.27 1662.15 1193.15 1624.53C1178.82 1587.61 1171.1 1547.24 1171.65 1504.94C1171.65 1501.36 1171.65 1497.92 1171.65 1494.33C1171.1 1452.04 1178.96 1411.67 1193.15 1374.74C1209.27 1337.13 1232.69 1301.86 1263.97 1271.41C1266.45 1268.93 1268.93 1266.45 1271.41 1263.97C1301.86 1232.69 1337.13 1209.27 1374.74 1193.15C1411.67 1178.82 1452.04 1171.1 1494.33 1171.65C1497.92 1171.65 1501.36 1171.65 1504.94 1171.65C1547.24 1171.1 1587.61 1178.96 1624.53 1193.15C1662.15 1209.27 1697.42 1232.69 1727.87 1263.97C1730.35 1266.45 1732.83 1268.93 1735.31 1271.41C1766.58 1301.86 1790.01 1337.13 1806.13 1374.74C1820.46 1411.8 1828.17 1452.04 1827.62 1494.33C1827.62 1497.92 1827.62 1501.36 1827.62 1504.94C1828.17 1547.24 1820.32 1587.61 1806.13 1624.53C1790.01 1662.15 1766.58 1697.42 1735.31 1727.87Z\" fill=\"white\"/><circle cx=\"1476\" cy=\"1442\" r=\"443\" fill=\"white\"/><path d=\"M1400.59 1202.5C1400.59 1334.79 1371.37 1454.31 1324.38 1540.58C1277.28 1627.04 1213.04 1679 1143.3 1679C1073.56 1679 1009.31 1627.04 962.215 1540.58C915.221 1454.31 886 1334.79 886 1202.5C886 1070.21 915.221 950.688 962.215 864.42C1009.31 777.961 1073.56 726 1143.3 726C1213.04 726 1277.28 777.961 1324.38 864.42C1371.37 950.688 1400.59 1070.21 1400.59 1202.5Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"10\"/><ellipse cx=\"1141.26\" cy=\"931.03\" rx=\"113.349\" ry=\"207.963\" fill=\"white\"/><path d=\"M2114.41 1202.5C2114.41 1334.79 2085.19 1454.31 2038.19 1540.58C1991.1 1627.04 1926.85 1679 1857.11 1679C1787.37 1679 1723.13 1627.04 1676.03 1540.58C1629.04 1454.31 1599.82 1334.79 1599.82 1202.5C1599.82 1070.21 1629.04 950.688 1676.03 864.42C1723.13 777.961 1787.37 726 1857.11 726C1926.85 726 1991.1 777.961 2038.19 864.42C2085.19 950.688 2114.41 1070.21 2114.41 1202.5Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"10\"/><ellipse cx=\"1861.96\" cy=\"928.963\" rx=\"113.349\" ry=\"207.963\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72851\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES7 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72860)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M1500.19 1499.87C1365.57 1351.79 1298.1 1205.48 1296.93 988.1C1296.16 779.052 1361.71 498.983 1502.29 274.909C1565.01 170.441 1645.1 119.866 1696.41 125.097C1750.22 129.37 1775.2 189.413 1785.5 284.511C1806.04 473.278 1775.29 803.798 1990.99 1009.07C2196.26 1224.77 2526.78 1194.09 2715.59 1214.68C2810.65 1224.78 2870.69 1249.84 2874.93 1303.61C2880.12 1354.96 2829.55 1435.05 2725.08 1497.77C2501.01 1638.35 2220.94 1703.91 2011.89 1703.13C1794.55 1702 1648.19 1634.49 1500.12 1499.87L1500.19 1499.87Z\" fill=\"white\"/><path d=\"M1499.98 1500.01C1634.61 1648.08 1702.07 1794.4 1703.24 2011.77C1704.02 2220.82 1638.47 2500.89 1497.89 2724.97C1435.16 2829.43 1355.07 2880.01 1303.77 2874.78C1249.96 2870.5 1224.97 2810.46 1214.68 2715.36C1194.13 2526.6 1224.89 2196.08 1009.18 1990.81C803.914 1775.1 473.394 1805.78 284.59 1785.2C189.528 1775.09 129.486 1750.03 125.249 1696.26C120.055 1644.91 170.63 1564.82 275.098 1502.1C499.172 1361.52 779.24 1295.97 988.289 1296.75C1205.63 1297.88 1351.98 1365.38 1500.06 1500.01L1499.98 1500.01Z\" fill=\"white\"/><path d=\"M1481.64 1518.29C1630.16 1383.18 1776.72 1315.24 1994.12 1313.37C2203.19 1311.92 2483.08 1376.57 2706.72 1516.45C2811 1578.84 2861.32 1658.78 2855.93 1710.11C2851.48 1763.93 2791.35 1789.12 2696.21 1799.72C2507.36 1820.87 2176.9 1791.18 1970.91 2007.57C1754.52 2213.55 1784.15 2544.01 1762.95 2732.9C1752.54 2828.01 1727.28 2888.14 1673.49 2892.55C1622.12 2897.91 1542.19 2847.58 1479.79 2743.31C1339.92 2519.66 1275.26 2239.77 1276.71 2030.7C1278.54 1813.33 1346.52 1666.75 1481.64 1518.22L1481.64 1518.29Z\" fill=\"white\"/><path d=\"M1481.81 1518.43C1333.29 1653.54 1186.74 1721.48 969.339 1723.34C760.267 1724.79 480.38 1660.13 256.734 1520.25C152.457 1457.85 102.133 1377.92 107.529 1326.59C111.975 1272.76 172.103 1247.58 267.243 1236.98C456.094 1215.83 786.549 1245.53 992.528 1029.15C1208.91 823.167 1179.28 492.713 1200.47 303.825C1210.92 208.685 1236.11 148.557 1289.93 144.111C1341.3 138.752 1421.23 189.076 1483.63 293.353C1623.51 516.999 1688.17 796.885 1686.72 1005.96C1684.9 1223.32 1616.92 1369.91 1481.81 1518.43Z\" fill=\"white\"/><path d=\"M1403.24 1500C1403.24 1630.77 1374.36 1749 1327.82 1834.44C1281.21 1919.99 1217.33 1972 1147.49 1972C1077.65 1972 1013.76 1919.99 967.153 1834.44C920.611 1749 891.731 1630.77 891.731 1500C891.731 1369.23 920.611 1251 967.153 1165.56C1013.76 1080.01 1077.65 1028 1147.49 1028C1217.33 1028 1281.21 1080.01 1327.82 1165.56C1374.36 1251 1403.24 1369.23 1403.24 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1148.41\" cy=\"1230.16\" rx=\"111.819\" ry=\"205.156\" fill=\"white\"/><path d=\"M2107.42 1500C2107.42 1630.77 2078.55 1749 2032 1834.44C1985.4 1919.99 1921.51 1972 1851.67 1972C1781.83 1972 1717.94 1919.99 1671.34 1834.44C1624.79 1749 1595.92 1630.77 1595.92 1500C1595.92 1369.23 1624.79 1251 1671.34 1165.56C1717.94 1080.01 1781.83 1028 1851.67 1028C1921.51 1028 1985.4 1080.01 2032 1165.56C2078.55 1251 2107.42 1369.23 2107.42 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1850.75\" cy=\"1230.16\" rx=\"111.819\" ry=\"205.156\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72860\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\n\nexport const BASE_DEFAULT_PROFILE_PICTURES = [\n  BASE_DEFAULT_PROFILE_PICTURES1,\n  BASE_DEFAULT_PROFILE_PICTURES2,\n  BASE_DEFAULT_PROFILE_PICTURES3,\n  BASE_DEFAULT_PROFILE_PICTURES4,\n  BASE_DEFAULT_PROFILE_PICTURES5,\n  BASE_DEFAULT_PROFILE_PICTURES6,\n  BASE_DEFAULT_PROFILE_PICTURES7,\n];\n","import { sha256 } from 'viem';\n\n// Will return a an index between 0 and optionsLength\nexport const getBaseDefaultProfilePictureIndex = (\n  name: string,\n  optionsLength: number,\n) => {\n  const nameAsUint8Array = Uint8Array.from(\n    name.split('').map((letter) => letter.charCodeAt(0)),\n  );\n  const hash = sha256(nameAsUint8Array);\n  const hashValue = Number.parseInt(hash, 16);\n  const remainder = hashValue % optionsLength;\n  const index = remainder;\n  return index;\n};\n","import { BASE_DEFAULT_PROFILE_PICTURES } from '../constants';\nimport type { Basename } from '../types';\nimport { getBaseDefaultProfilePictureIndex } from './getBaseDefaultProfilePictureIndex';\n\nexport const getBaseDefaultProfilePicture = (username: Basename) => {\n  const profilePictureIndex = getBaseDefaultProfilePictureIndex(\n    username,\n    BASE_DEFAULT_PROFILE_PICTURES.length,\n  );\n  const selectedProfilePicture =\n    BASE_DEFAULT_PROFILE_PICTURES[profilePictureIndex];\n  const base64Svg = btoa(selectedProfilePicture);\n  const dataUri = `data:image/svg+xml;base64,${base64Svg}`;\n  return dataUri;\n};\n","export const isBasename = (username: string) => {\n  if (username.endsWith('.base.eth')) {\n    return true;\n  }\n  if (username.endsWith('.basetest.eth')) {\n    return true;\n  }\n  return false;\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { mainnet } from 'viem/chains';\nimport type {\n  GetNameReturnType,\n  UseNameOptions,\n  UseQueryOptions,\n} from '../types';\nimport { getName } from '../utils/getName';\n\n/**\n * It leverages the `@tanstack/react-query` hook for fetching and optionally caching the ENS name\n * @returns An object containing:\n *  - `ensName`: The fetched ENS name for the provided address, or null if not found or in case of an error.\n *  - `{UseQueryResult}`: The rest of useQuery return values. including isLoading, isError, error, isFetching, refetch, etc.\n */\nexport const useName = (\n  { address, chain = mainnet }: UseNameOptions,\n  queryOptions?: UseQueryOptions,\n) => {\n  const { enabled = true, cacheTime } = queryOptions ?? {};\n  const ensActionKey = `ens-name-${address}-${chain.id}`;\n  return useQuery<GetNameReturnType>({\n    queryKey: ['useName', ensActionKey],\n    queryFn: async () => {\n      return await getName({ address, chain });\n    },\n    gcTime: cacheTime,\n    enabled,\n    refetchOnWindowFocus: false,\n  });\n};\n","import { base, mainnet } from 'viem/chains';\nimport { isBase } from '../../isBase';\nimport { isEthereum } from '../../isEthereum';\nimport { getChainPublicClient } from '../../network/getChainPublicClient';\nimport L2ResolverAbi from '../abis/L2ResolverAbi';\nimport { RESOLVER_ADDRESSES_BY_CHAIN_ID } from '../constants';\nimport type { Basename, GetName, GetNameReturnType } from '../types';\nimport { convertReverseNodeToBytes } from './convertReverseNodeToBytes';\n\n/**\n * An asynchronous function to fetch the Ethereum Name Service (ENS)\n * name for a given Ethereum address. It returns the ENS name if it exists,\n * or null if it doesn't or in case of an error.\n */\nexport const getName = async ({\n  address,\n  chain = mainnet,\n}: GetName): Promise<GetNameReturnType> => {\n  const chainIsBase = isBase({ chainId: chain.id });\n  const chainIsEthereum = isEthereum({ chainId: chain.id });\n  const chainSupportsUniversalResolver = chainIsEthereum || chainIsBase;\n\n  if (!chainSupportsUniversalResolver) {\n    return Promise.reject(\n      'ChainId not supported, name resolution is only supported on Ethereum and Base.',\n    );\n  }\n\n  let client = getChainPublicClient(chain);\n\n  if (chainIsBase) {\n    const addressReverseNode = convertReverseNodeToBytes(address, base.id);\n    try {\n      const basename = await client.readContract({\n        abi: L2ResolverAbi,\n        address: RESOLVER_ADDRESSES_BY_CHAIN_ID[chain.id],\n        functionName: 'name',\n        args: [addressReverseNode],\n      });\n      if (basename) {\n        return basename as Basename;\n      }\n    } catch (_error) {\n      // This is a best effort attempt, so we don't need to do anything here.\n    }\n  }\n\n  // Default to mainnet\n  client = getChainPublicClient(mainnet);\n  // ENS username\n  const ensName = await client.getEnsName({\n    address,\n  });\n\n  return ensName ?? null;\n};\n","export default [\n  {\n    inputs: [\n      {\n        internalType: 'contract ENS',\n        name: 'ens_',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'registrarController_',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'reverseRegistrar_',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'owner_',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    inputs: [],\n    name: 'AlreadyInitialized',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'CantSetSelfAsDelegate',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'CantSetSelfAsOperator',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'NewOwnerIsZeroAddress',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'NoHandoverRequest',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'Unauthorized',\n    type: 'error',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'contentType',\n        type: 'uint256',\n      },\n    ],\n    name: 'ABIChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'a',\n        type: 'address',\n      },\n    ],\n    name: 'AddrChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'coinType',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'newAddress',\n        type: 'bytes',\n      },\n    ],\n    name: 'AddressChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'ApprovalForAll',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'delegate',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'Approved',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'hash',\n        type: 'bytes',\n      },\n    ],\n    name: 'ContenthashChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'name',\n        type: 'bytes',\n      },\n      {\n        indexed: false,\n        internalType: 'uint16',\n        name: 'resource',\n        type: 'uint16',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'record',\n        type: 'bytes',\n      },\n    ],\n    name: 'DNSRecordChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'name',\n        type: 'bytes',\n      },\n      {\n        indexed: false,\n        internalType: 'uint16',\n        name: 'resource',\n        type: 'uint16',\n      },\n    ],\n    name: 'DNSRecordDeleted',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'lastzonehash',\n        type: 'bytes',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'zonehash',\n        type: 'bytes',\n      },\n    ],\n    name: 'DNSZonehashChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes4',\n        name: 'interfaceID',\n        type: 'bytes4',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'implementer',\n        type: 'address',\n      },\n    ],\n    name: 'InterfaceChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'NameChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'pendingOwner',\n        type: 'address',\n      },\n    ],\n    name: 'OwnershipHandoverCanceled',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'pendingOwner',\n        type: 'address',\n      },\n    ],\n    name: 'OwnershipHandoverRequested',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'oldOwner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'OwnershipTransferred',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes32',\n        name: 'x',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes32',\n        name: 'y',\n        type: 'bytes32',\n      },\n    ],\n    name: 'PubkeyChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newRegistrarController',\n        type: 'address',\n      },\n    ],\n    name: 'RegistrarControllerUpdated',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newReverseRegistrar',\n        type: 'address',\n      },\n    ],\n    name: 'ReverseRegistrarUpdated',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'string',\n        name: 'indexedKey',\n        type: 'string',\n      },\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'key',\n        type: 'string',\n      },\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'value',\n        type: 'string',\n      },\n    ],\n    name: 'TextChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint64',\n        name: 'newVersion',\n        type: 'uint64',\n      },\n    ],\n    name: 'VersionChanged',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: 'contentTypes',\n        type: 'uint256',\n      },\n    ],\n    name: 'ABI',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'addr',\n    outputs: [\n      {\n        internalType: 'address payable',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: 'coinType',\n        type: 'uint256',\n      },\n    ],\n    name: 'addr',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'delegate',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'approve',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'cancelOwnershipHandover',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'clearRecords',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'pendingOwner',\n        type: 'address',\n      },\n    ],\n    name: 'completeOwnershipHandover',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'name',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint16',\n        name: 'resource',\n        type: 'uint16',\n      },\n    ],\n    name: 'dnsRecord',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'ens',\n    outputs: [\n      {\n        internalType: 'contract ENS',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'name',\n        type: 'bytes32',\n      },\n    ],\n    name: 'hasDNSRecords',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes4',\n        name: 'interfaceID',\n        type: 'bytes4',\n      },\n    ],\n    name: 'interfaceImplementer',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'delegate',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedFor',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes[]',\n        name: 'data',\n        type: 'bytes[]',\n      },\n    ],\n    name: 'multicall',\n    outputs: [\n      {\n        internalType: 'bytes[]',\n        name: 'results',\n        type: 'bytes[]',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'nodehash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes[]',\n        name: 'data',\n        type: 'bytes[]',\n      },\n    ],\n    name: 'multicallWithNodeCheck',\n    outputs: [\n      {\n        internalType: 'bytes[]',\n        name: 'results',\n        type: 'bytes[]',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'name',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: 'result',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'pendingOwner',\n        type: 'address',\n      },\n    ],\n    name: 'ownershipHandoverExpiresAt',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'result',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'pubkey',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: 'x',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'y',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    name: 'recordVersions',\n    outputs: [\n      {\n        internalType: 'uint64',\n        name: '',\n        type: 'uint64',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'registrarController',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'requestOwnershipHandover',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'resolve',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'reverseRegistrar',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: 'contentType',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'setABI',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: 'coinType',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: 'a',\n        type: 'bytes',\n      },\n    ],\n    name: 'setAddr',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'a',\n        type: 'address',\n      },\n    ],\n    name: 'setAddr',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: 'hash',\n        type: 'bytes',\n      },\n    ],\n    name: 'setContenthash',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'setDNSRecords',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes4',\n        name: 'interfaceID',\n        type: 'bytes4',\n      },\n      {\n        internalType: 'address',\n        name: 'implementer',\n        type: 'address',\n      },\n    ],\n    name: 'setInterface',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'string',\n        name: 'newName',\n        type: 'string',\n      },\n    ],\n    name: 'setName',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'x',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'y',\n        type: 'bytes32',\n      },\n    ],\n    name: 'setPubkey',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'registrarController_',\n        type: 'address',\n      },\n    ],\n    name: 'setRegistrarController',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'reverseRegistrar_',\n        type: 'address',\n      },\n    ],\n    name: 'setReverseRegistrar',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'string',\n        name: 'key',\n        type: 'string',\n      },\n      {\n        internalType: 'string',\n        name: 'value',\n        type: 'string',\n      },\n    ],\n    name: 'setText',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: 'hash',\n        type: 'bytes',\n      },\n    ],\n    name: 'setZonehash',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes4',\n        name: 'interfaceID',\n        type: 'bytes4',\n      },\n    ],\n    name: 'supportsInterface',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'string',\n        name: 'key',\n        type: 'string',\n      },\n    ],\n    name: 'text',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'zonehash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const;\n","import { encodePacked, keccak256, namehash } from 'viem';\nimport type { Address } from 'viem';\nimport { convertChainIdToCoinType } from './convertChainIdToCoinType';\n\n/**\n * Convert an address to a reverse node for ENS resolution\n */\nexport const convertReverseNodeToBytes = (\n  address: Address,\n  chainId: number,\n) => {\n  const addressFormatted = address.toLocaleLowerCase() as Address;\n  const addressNode = keccak256(addressFormatted.substring(2) as Address);\n  const chainCoinType = convertChainIdToCoinType(chainId);\n  const baseReverseNode = namehash(\n    `${chainCoinType.toLocaleUpperCase()}.reverse`,\n  );\n  const addressReverseNode = keccak256(\n    encodePacked(['bytes32', 'bytes32'], [baseReverseNode, addressNode]),\n  );\n  return addressReverseNode;\n};\n","import { mainnet } from 'viem/chains';\n\n/**\n * Convert an chainId to a coinType hex for reverse chain resolution\n */\nexport const convertChainIdToCoinType = (chainId: number): string => {\n  // L1 resolvers to addr\n  if (chainId === mainnet.id) {\n    return 'addr';\n  }\n\n  const cointype = (0x80000000 | chainId) >>> 0;\n  return cointype.toString(16).toLocaleUpperCase();\n};\n","import { icon } from '../../styles/theme';\n\nexport const badgeSvg = (\n  <svg\n    role=\"img\"\n    aria-label=\"ock-badgeSvg\"\n    width=\"12\"\n    height=\"12\"\n    viewBox=\"0 0 12 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-full w-full\"\n  >\n    <path\n      d=\"M8.12957 3.73002L5.11957 6.74002L3.77957 5.40002C3.49957 5.12002 3.04957 5.12002 2.76957 5.40002C2.48957 5.68002 2.48957 6.13002 2.76957 6.41002L4.10957 7.75002L4.59957 8.24002C4.90957 8.55002 5.41957 8.55002 5.72957 8.24002L9.17957 4.79002C9.45957 4.51002 9.45957 4.06002 9.17957 3.78002L9.12957 3.73002C8.84957 3.45002 8.39957 3.45002 8.11957 3.73002H8.12957Z\"\n      data-testid=\"ock-badgeSvg\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { badgeSvg } from '../../internal/svg/badgeSvg';\nimport { background, cn } from '../../styles/theme';\nimport type { BadgeReact } from '../types';\n\n/**\n * Badge component.\n */\nexport function Badge({ className }: BadgeReact) {\n  // TODO: Implement the Badge component as span and CSS without an SVG element.\n  const badgeSize = '12px';\n  return (\n    <span\n      className={cn(\n        background.primary,\n        'rounded-full border border-transparent',\n        className,\n      )}\n      data-testid=\"ockBadge\"\n      style={{\n        height: badgeSize,\n        width: badgeSize,\n        maxHeight: badgeSize,\n        maxWidth: badgeSize,\n      }}\n    >\n      {badgeSvg}\n    </span>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport type { Attestation, UseAttestations } from '../types';\nimport { getAttestations } from '../utils/getAttestations';\n\n/**\n * Fetches EAS Attestations for a given address, chain, and schemaId.\n */\nexport function useAttestations({\n  address,\n  chain,\n  schemaId,\n}: UseAttestations): Attestation[] {\n  if (!schemaId) {\n    return [];\n  }\n  const [attestations, setAttestations] = useState<Attestation[]>([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const foundAttestations = await getAttestations(address, chain, {\n        schemas: [schemaId],\n      });\n      setAttestations(foundAttestations);\n    };\n    fetchData();\n  }, [address, chain, schemaId]);\n\n  return attestations;\n}\n","import { gql } from 'graphql-request';\nimport { getAddress } from 'viem';\nimport type { Address, Chain } from 'viem';\nimport type { Attestation, EASSchemaUid } from '../identity/types';\nimport { createEasGraphQLClient } from './createEasGraphQLClient';\n\n/**\n * Type representing the filter options used for querying EAS Attestations.\n * @typedef {Object} GetAttestationQueryVariablesFilters\n * @property {number} [expirationTime] - Optional Unix timestamp to filter attestations based on expiration time.\n * @property {number} [limit] - Optional limit for the number of results returned.\n * @property {boolean} [revoked] - Optional boolean to filter attestations based on their revoked status.\n * @property {EASSchemaUid[]} [schemas] - Optional array of schema UIDs to filter attestations.\n */\ntype GetAttestationQueryVariablesFilters = {\n  expirationTime?: number;\n  limit: number;\n  revoked: boolean;\n  schemas?: EASSchemaUid[];\n};\n\n/**\n * Alias type for filter options when fetching attestations by filter.\n */\nexport type GetAttestationsByFilterOptions =\n  GetAttestationQueryVariablesFilters;\n\n/**\n * Type representing the variables passed to the EAS Attestations GraphQL query.\n * @typedef {Object} AttestationsQueryVariables\n * @property {string[]} distinct - Fields for which to get distinct records.\n * @property {number} take - Number of records to retrieve.\n * @property {Record<string, any>} where - Conditions for filtering the attestations.\n */\nexport type AttestationsQueryVariables = {\n  distinct: string[];\n  take: number;\n  /* biome-ignore lint: code needs to be deprecated */\n  where: Record<string, any>;\n};\n\n/**\n * Type representing the response of the EAS Attestation GraphQL query.\n * @typedef {Object} GetAttestationQueryResponse\n * @property {Attestation[]} attestations - Array of attestation objects.\n */\nexport type GetAttestationQueryResponse = {\n  attestations: Attestation[];\n};\n\n/**\n * Type representing the response when fetching attestations by filter.\n */\nexport type GetAttestationsByFilterResponse = Attestation[];\n\n/**\n * GraphQL query definition for fetching EAS Attestations for users.\n */\nexport const attestationQuery = gql`\n  query AttestationsForUsers(\n    $where: AttestationWhereInput\n    $distinct: [AttestationScalarFieldEnum!]\n    $take: Int\n  ) {\n    attestations(where: $where, distinct: $distinct, take: $take) {\n      id\n      txid\n      schemaId\n      attester\n      recipient\n      revoked\n      revocationTime\n      expirationTime\n      time\n      timeCreated\n      decodedDataJson\n    }\n  }\n`;\n\n/**\n * Generates query variables for the EAS Attestation GraphQL query based on the given address and filters.\n *\n * @param {Address} address - The Ethereum address of the recipient.\n * @param {GetAttestationQueryVariablesFilters} filters - Filters to apply to the query.\n * @returns {AttestationsQueryVariables} The query variables for the GraphQL query.\n */\nexport function getAttestationQueryVariables(\n  address: Address,\n  filters: GetAttestationQueryVariablesFilters,\n): AttestationsQueryVariables {\n  const checksummedAddress = getAddress(address);\n  /* biome-ignore lint: code needs to be deprecated */\n  const conditions: Record<string, any> = {\n    recipient: { equals: checksummedAddress },\n    revoked: { equals: filters.revoked },\n  };\n\n  if (typeof filters.expirationTime === 'number') {\n    conditions.OR = [\n      { expirationTime: { equals: 0 } },\n      { expirationTime: { gt: filters.expirationTime } },\n    ];\n  }\n\n  if (filters?.schemas && filters.schemas.length > 0) {\n    conditions.schemaId = { in: filters.schemas };\n  }\n\n  return {\n    where: { AND: [conditions] },\n    distinct: ['schemaId'],\n    take: filters.limit,\n  };\n}\n\n/**\n * Fetches Ethereum Attestation Service (EAS) attestations for a given address and chain,\n * optionally filtered by the provided filter options.\n *\n * @param {Address} address - The Ethereum address for which attestations are being queried.\n * @param {Chain} chain - The blockchain chain of interest.\n * @param {GetAttestationsByFilterOptions} filters - Filter options for querying attestations.\n * @returns {Promise<GetAttestationsByFilterResponse>} A promise that resolves to an array of EAS Attestations.\n */\nexport async function getAttestationsByFilter<TChain extends Chain>(\n  address: Address,\n  chain: TChain,\n  filters: GetAttestationsByFilterOptions,\n): Promise<GetAttestationsByFilterResponse> {\n  const easGraphqlClient = createEasGraphQLClient(chain);\n  const attestationQueryVariables = getAttestationQueryVariables(\n    address,\n    filters,\n  );\n\n  const { attestations } = await easGraphqlClient.request<\n    GetAttestationQueryResponse,\n    AttestationsQueryVariables\n  >(attestationQuery, attestationQueryVariables);\n\n  return attestations;\n}\n","import { GraphQLClient } from 'graphql-request';\nimport type { Chain } from 'viem';\nimport { getChainEASGraphQLAPI } from '../identity/utils/easSupportedChains';\n\nexport function createEasGraphQLClient(chain: Chain): GraphQLClient {\n  const endpoint = getChainEASGraphQLAPI(chain);\n  return new GraphQLClient(endpoint);\n}\n","import { base } from 'viem/chains';\nimport type { EASChainDefinition } from '../../identity/types';\n\nexport const easChainBase: EASChainDefinition = {\n  id: base.id,\n  easGraphqlAPI: 'https://base.easscan.org/graphql',\n  schemaUids: [\n    // VERIFIED_COUNTRY\n    // https://base.easscan.org/schema/view/0x1801901fabd0e6189356b4fb52bb0ab855276d84f7ec140839fbd1f6801ca065\n    '0x1801901fabd0e6189356b4fb52bb0ab855276d84f7ec140839fbd1f6801ca065',\n    // VERIFIED_ACCOUNT\n    // https://base.easscan.org/schema/view/0xf8b05c79f090979bf4a80270aba232dff11a10d9ca55c4f88de95317970f0de9\n    '0xf8b05c79f090979bf4a80270aba232dff11a10d9ca55c4f88de95317970f0de9',\n  ],\n};\n","import { baseSepolia } from 'viem/chains';\nimport type { EASChainDefinition } from '../../identity/types';\n\nexport const easChainBaseSepolia: EASChainDefinition = {\n  id: baseSepolia.id,\n  easGraphqlAPI: 'https://base-sepolia.easscan.org/graphql',\n  schemaUids: [\n    // VERIFIED_COUNTRY\n    // https://base-sepolia.easscan.org/schema/view/0xef54ae90f47a187acc050ce631c55584fd4273c0ca9456ab21750921c3a84028\n    '0xef54ae90f47a187acc050ce631c55584fd4273c0ca9456ab21750921c3a84028',\n    // VERIFIED_ACCOUNT\n    // https://base-sepolia.easscan.org/schema/view/0x2f34a2ffe5f87b2f45fbc7c784896b768d77261e2f24f77341ae43751c765a69\n    '0x2f34a2ffe5f87b2f45fbc7c784896b768d77261e2f24f77341ae43751c765a69',\n  ],\n};\n","import { optimism } from 'viem/chains';\nimport type { EASChainDefinition } from '../../identity/types';\n\n// More details in https://docs.optimism.io/chain/identity/schemas\nexport const easChainOptimism: EASChainDefinition = {\n  id: optimism.id,\n  easGraphqlAPI: 'https://optimism.easscan.org/graphql',\n  schemaUids: [\n    // N_A\n    // https://optimism.easscan.org/schema/view/0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929\n    '0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929',\n    // GITCOIN_PASSPORT_SCORES_V1:\n    // https://optimism.easscan.org/schema/view/0x6ab5d34260fca0cfcf0e76e96d439cace6aa7c3c019d7c4580ed52c6845e9c89\n    '0x6ab5d34260fca0cfcf0e76e96d439cace6aa7c3c019d7c4580ed52c6845e9c89',\n    // OPTIMISM_GOVERNANCE_SEASON_4_CO_GRANT_PARTICIPANT:\n    // https://optimism.easscan.org/schema/view/0x401a80196f3805c57b00482ae2b575a9f270562b6b6de7711af9837f08fa0faf\n    '0x401a80196f3805c57b00482ae2b575a9f270562b6b6de7711af9837f08fa0faf',\n  ],\n};\n","import type { Chain } from 'viem';\nimport { easChainBase } from '../../network/definitions/base';\nimport { easChainBaseSepolia } from '../../network/definitions/baseSepolia';\nimport { easChainOptimism } from '../../network/definitions/optimism';\nimport type { EASChainDefinition } from '../types';\n\nexport type EASSupportedChains = Record<number, EASChainDefinition>;\n\nexport const easSupportedChains: EASSupportedChains = {\n  [easChainBase.id]: easChainBase,\n  [easChainBaseSepolia.id]: easChainBaseSepolia,\n  [easChainOptimism.id]: easChainOptimism,\n};\n\n/**\n * Checks if a given blockchain chain is supported by EAS attestations.\n */\nexport function isChainSupported(chain: Chain): boolean {\n  return chain.id in easSupportedChains;\n}\n\n/**\n * Function to get the EAS GraphQL API endpoint for a given blockchain.\n */\nexport function getChainEASGraphQLAPI(chain: Chain): string {\n  return easSupportedChains[chain.id]?.easGraphqlAPI ?? '';\n}\n","import type { Address, Chain } from 'viem';\nimport { getAttestationsByFilter } from '../../network/attestations';\nimport type { Attestation, GetAttestationsOptions } from '../types';\nimport { isChainSupported } from './easSupportedChains';\n\n/**\n * Fetches Ethereum Attestation Service (EAS) attestations for a given address and chain,\n * optionally filtered by schemas associated with the attestation.\n */\nexport async function getAttestations(\n  address: Address,\n  chain: Chain,\n  options?: GetAttestationsOptions,\n): Promise<Attestation[]> {\n  if (!isChainSupported(chain)) {\n    console.log('Error in getAttestation: Chain is not supported');\n    return [];\n  }\n  try {\n    // Default query filter values\n    const defaultQueryVariablesFilter = {\n      revoked: false,\n      expirationTime: Math.round(Date.now() / 1000),\n      limit: 10,\n    };\n    const queryVariablesFilter = { ...defaultQueryVariablesFilter, ...options };\n    return await getAttestationsByFilter(address, chain, queryVariablesFilter);\n  } catch (error) {\n    console.log(`Error in getAttestation: ${(error as Error).message}`);\n    return [];\n  }\n}\n","import type { ReactNode } from 'react';\nimport type { Address } from 'viem';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport { useAttestations } from '../hooks/useAttestations';\nimport { useIdentityContext } from './IdentityProvider';\n\ntype DisplayBadgeReact = {\n  children: ReactNode;\n  address?: Address;\n};\n\nexport function DisplayBadge({ children, address }: DisplayBadgeReact) {\n  const { chain, schemaId } = useOnchainKit();\n  const { schemaId: contextSchemaId, address: contextAddress } =\n    useIdentityContext();\n  if (!contextSchemaId && !schemaId) {\n    throw new Error(\n      'Name: a SchemaId must be provided to the OnchainKitProvider or Identity component.',\n    );\n  }\n  const attestations = useAttestations({\n    address: address ?? contextAddress,\n    chain: chain,\n    schemaId: contextSchemaId ?? schemaId,\n  });\n\n  if (attestations.length === 0) {\n    return null;\n  }\n\n  return children;\n}\n","export function getRoundedAmount(balance: string, fractionDigits: number) {\n  if (balance === '0') {\n    return balance;\n  }\n  const parsedBalance = Number.parseFloat(balance);\n  const result = Number(parsedBalance)\n    ?.toFixed(fractionDigits)\n    .replace(/0+$/, '');\n\n  // checking if balance is more than 0 but less than fractionDigits\n  // without this prints \"0.\"\n  if (parsedBalance > 0 && Number.parseFloat(result) === 0) {\n    return '0';\n  }\n\n  return result;\n}\n","import { useMemo } from 'react';\nimport { formatUnits } from 'viem';\nimport type { Address } from 'viem';\nimport { useBalance } from 'wagmi';\nimport type { UseBalanceReturnType } from 'wagmi';\nimport { getRoundedAmount } from '../../internal/utils/getRoundedAmount';\nimport type { SwapError } from '../../swap';\nimport { getSwapErrorCode } from '../../swap/utils/getSwapErrorCode';\nimport type { UseGetETHBalanceResponse } from '../types';\n\nconst ETH_DECIMALS = 18;\n\nexport function useGetETHBalance(address?: Address): UseGetETHBalanceResponse {\n  const ethBalanceResponse: UseBalanceReturnType = useBalance({ address });\n\n  return useMemo(() => {\n    let error: SwapError | undefined;\n    if (ethBalanceResponse?.error) {\n      error = {\n        code: getSwapErrorCode('balance'),\n        error: ethBalanceResponse?.error?.message,\n        message: '',\n      };\n    }\n    if (\n      !ethBalanceResponse?.data?.value &&\n      ethBalanceResponse?.data?.value !== 0n\n    ) {\n      return {\n        convertedBalance: '',\n        error,\n        response: ethBalanceResponse,\n        roundedBalance: '',\n      };\n    }\n    const convertedBalance = formatUnits(\n      ethBalanceResponse?.data?.value,\n      ETH_DECIMALS,\n    );\n    const roundedBalance = getRoundedAmount(convertedBalance, 8);\n    return {\n      convertedBalance,\n      error,\n      response: ethBalanceResponse,\n      roundedBalance,\n    };\n  }, [ethBalanceResponse]);\n}\n","export const FALLBACK_DEFAULT_MAX_SLIPPAGE = 3;\nexport const GENERAL_SWAP_ERROR_CODE = 'SWAP_ERROR';\nexport const GENERAL_SWAP_QUOTE_ERROR_CODE = 'SWAP_QUOTE_ERROR';\nexport const GENERAL_SWAP_BALANCE_ERROR_CODE = 'SWAP_BALANCE_ERROR';\nexport const LOW_LIQUIDITY_ERROR_CODE = 'SWAP_QUOTE_LOW_LIQUIDITY_ERROR';\nexport const PERMIT2_CONTRACT_ADDRESS =\n  '0x000000000022D473030F116dDEE9F6B43aC78BA3';\nexport const TOO_MANY_REQUESTS_ERROR_CODE = 'TOO_MANY_REQUESTS_ERROR';\nexport const UNCAUGHT_SWAP_QUOTE_ERROR_CODE = 'UNCAUGHT_SWAP_QUOTE_ERROR';\nexport const UNCAUGHT_SWAP_ERROR_CODE = 'UNCAUGHT_SWAP_ERROR';\nexport const UNIVERSALROUTER_CONTRACT_ADDRESS =\n  '0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD';\nexport const USER_REJECTED_ERROR_CODE = 'USER_REJECTED';\nexport enum SwapMessage {\n  BALANCE_ERROR = 'Error fetching token balance',\n  CONFIRM_IN_WALLET = 'Confirm in wallet',\n  FETCHING_QUOTE = 'Fetching quote...',\n  FETCHING_BALANCE = 'Fetching balance...',\n  INCOMPLETE_FIELD = 'Complete the fields to continue',\n  INSUFFICIENT_BALANCE = 'Insufficient balance',\n  LOW_LIQUIDITY = 'Insufficient liquidity for this trade.',\n  SWAP_IN_PROGRESS = 'Swap in progress...',\n  TOO_MANY_REQUESTS = 'Too many requests. Please try again later.',\n  USER_REJECTED = 'User rejected the transaction',\n}\n","import {\n  GENERAL_SWAP_BALANCE_ERROR_CODE,\n  GENERAL_SWAP_ERROR_CODE,\n  GENERAL_SWAP_QUOTE_ERROR_CODE,\n  LOW_LIQUIDITY_ERROR_CODE,\n  TOO_MANY_REQUESTS_ERROR_CODE,\n  UNCAUGHT_SWAP_ERROR_CODE,\n  UNCAUGHT_SWAP_QUOTE_ERROR_CODE,\n} from '../constants';\n\nexport function getSwapErrorCode(\n  context: 'swap' | 'quote' | 'balance' | 'uncaught-swap' | 'uncaught-quote',\n  errorCode?: number,\n) {\n  // TODO: handle additional error codes\n  if (errorCode === -32001) {\n    return TOO_MANY_REQUESTS_ERROR_CODE;\n  }\n\n  if (errorCode === -32602) {\n    return LOW_LIQUIDITY_ERROR_CODE;\n  }\n\n  if (context === 'uncaught-swap') {\n    return UNCAUGHT_SWAP_ERROR_CODE;\n  }\n\n  if (context === 'uncaught-quote') {\n    return UNCAUGHT_SWAP_QUOTE_ERROR_CODE;\n  }\n\n  if (context === 'quote') {\n    return GENERAL_SWAP_QUOTE_ERROR_CODE;\n  }\n\n  if (context === 'balance') {\n    return GENERAL_SWAP_BALANCE_ERROR_CODE;\n  }\n\n  return GENERAL_SWAP_ERROR_CODE;\n}\n","import { getRoundedAmount } from '../../internal/utils/getRoundedAmount';\nimport { cn, color, text } from '../../styles/theme';\nimport { useGetETHBalance } from '../../wallet/hooks/useGetETHBalance';\nimport type { EthBalanceReact } from '../types';\nimport { useIdentityContext } from './IdentityProvider';\n\nexport function EthBalance({ address, className }: EthBalanceReact) {\n  const { address: contextAddress } = useIdentityContext();\n  if (!contextAddress && !address) {\n    console.error(\n      'Address: an Ethereum address must be provided to the Identity or EthBalance component.',\n    );\n    return null;\n  }\n\n  const { convertedBalance: balance, error } = useGetETHBalance(\n    address ?? contextAddress,\n  );\n\n  if (!balance || error) {\n    return null;\n  }\n\n  return (\n    <span\n      data-testid=\"ockEthBalance\"\n      className={cn(text.label2, color.foregroundMuted, className)}\n    >\n      {getRoundedAmount(balance, 4)} ETH\n    </span>\n  );\n}\n","import { useCallback } from 'react';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport type { IdentityReact } from '../types';\nimport { IdentityLayout } from './IdentityLayout';\nimport { IdentityProvider } from './IdentityProvider';\n\nexport function Identity({\n  address,\n  chain,\n  children,\n  className,\n  hasCopyAddressOnClick = false,\n  schemaId,\n}: IdentityReact) {\n  const { chain: contextChain } = useOnchainKit();\n  const accountChain = chain ?? contextChain;\n\n  const handleCopy = useCallback(async () => {\n    if (!address) {\n      return false;\n    }\n    try {\n      await navigator.clipboard.writeText(address);\n      return true;\n    } catch (e) {\n      console.error('Failed to copy: ', e);\n      return false;\n    }\n  }, [address]);\n\n  const onClick = hasCopyAddressOnClick ? handleCopy : undefined;\n\n  return (\n    <IdentityProvider\n      address={address}\n      schemaId={schemaId}\n      chain={accountChain}\n    >\n      <IdentityLayout className={className} onClick={onClick}>\n        {children}\n      </IdentityLayout>\n    </IdentityProvider>\n  );\n}\n","import { Children, useMemo } from 'react';\nimport type { ReactNode } from 'react';\nimport { findComponent } from '../../internal/utils/findComponent';\nimport { background, cn, color, pressable } from '../../styles/theme';\nimport { useTheme } from '../../useTheme';\nimport { usePopover } from '../hooks/usePopover';\nimport { Address } from './Address';\nimport { Avatar } from './Avatar';\nimport { EthBalance } from './EthBalance';\nimport { Name } from './Name';\nimport { Socials } from './Socials';\n\nconst noop = () => {};\n\ntype IdentityLayoutReact = {\n  children: ReactNode;\n  className?: string;\n  onClick?: () => Promise<boolean>;\n};\n\nexport function IdentityLayout({\n  children,\n  className,\n  onClick,\n}: IdentityLayoutReact) {\n  const componentTheme = useTheme();\n\n  const { avatar, name, address, ethBalance, socials } = useMemo(() => {\n    const childrenArray = Children.toArray(children);\n    return {\n      avatar: childrenArray.find(findComponent(Avatar)),\n      name: childrenArray.find(findComponent(Name)),\n      address: childrenArray.find(findComponent(Address)),\n      ethBalance: childrenArray.find(findComponent(EthBalance)),\n      socials: childrenArray.find(findComponent(Socials)),\n    };\n  }, [children]);\n\n  const {\n    handleClick,\n    handleMouseEnter,\n    handleMouseLeave,\n    showPopover,\n    popoverText,\n  } = usePopover(onClick);\n\n  return (\n    <div\n      className={cn(\n        componentTheme,\n        background.default,\n        'flex flex-col px-4 py-1',\n        onClick && `${pressable.default} relative`,\n        className,\n      )}\n      data-testid=\"ockIdentityLayout_container\"\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onKeyUp={noop}\n      onKeyDown={noop}\n    >\n      <div className=\"flex items-center space-x-3\">\n        <div className=\"flex-shrink-0\">{avatar}</div>\n        <div className=\"flex flex-col\">\n          {name}\n          {address && !ethBalance && address}\n          {!address && ethBalance && ethBalance}\n          {address && ethBalance && (\n            <div className=\"flex items-center gap-1\">\n              {address}\n              <span className={color.foregroundMuted}>·</span>\n              {ethBalance}\n            </div>\n          )}\n        </div>\n      </div>\n      {socials}\n      {showPopover && (\n        <div\n          className={cn(\n            background.inverse,\n            color.foreground,\n            'absolute top-[calc(100%_-_5px)] left-[46px] z-10 rounded px-2 py-1 shadow-[0px_4px_8px_rgba(0,0,0,0.1)]',\n          )}\n          data-testid=\"ockIdentityLayout_copy\"\n        >\n          {popoverText}\n          <div\n            className={cn(\n              'absolute top-[-5px] left-6 h-0 w-0',\n              'border-x-[5px] border-x-transparent border-b-[5px] border-b-[color:var(--ock-bg-inverse)] border-solid',\n            )}\n            data-testid=\"ockIdentityLayout_copyArrow\"\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nexport function usePreferredColorScheme(): 'light' | 'dark' {\n  const [colorScheme, setColorScheme] = useState<'light' | 'dark'>('light');\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setColorScheme(mediaQuery.matches ? 'dark' : 'light');\n\n    function updateColorScheme(event: MediaQueryListEvent) {\n      setColorScheme(event.matches ? 'dark' : 'light');\n    }\n\n    mediaQuery.addEventListener('change', updateColorScheme);\n    return () => mediaQuery.removeEventListener('change', updateColorScheme);\n  }, []);\n\n  return colorScheme;\n}\n","import { usePreferredColorScheme } from './internal/hooks/usePreferredColorScheme';\nimport type { UseThemeReact } from './types';\nimport { useOnchainKit } from './useOnchainKit';\n\nexport function useTheme(): UseThemeReact {\n  const preferredMode = usePreferredColorScheme();\n  const {\n    config: { appearance } = {},\n  } = useOnchainKit();\n  const { theme = 'default', mode = 'auto' } = appearance || {};\n\n  if (theme === 'cyberpunk' || theme === 'base' || theme === 'hacker') {\n    return theme;\n  }\n\n  switch (mode) {\n    case 'auto':\n      return `${theme}-${preferredMode}` as UseThemeReact;\n    case 'dark':\n      return `${theme}-dark` as UseThemeReact;\n    case 'light':\n      return `${theme}-light` as UseThemeReact;\n    default:\n      // If mode is not set or is an invalid value, fall back to preferredMode\n      return `${theme}-${preferredMode}` as UseThemeReact;\n  }\n}\n","import { useCallback, useEffect, useState } from 'react';\n\nexport function usePopover(onClick?: () => Promise<boolean>) {\n  const [popoverText, setPopoverText] = useState('Copy');\n  const [showPopover, setShowPopover] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n\n  const handleMouseEnter = useCallback(() => {\n    setPopoverText('Copy');\n    setIsHovered(true);\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    setIsHovered(false);\n    setShowPopover(false);\n  }, []);\n\n  const handleClick = useCallback(async () => {\n    if (onClick) {\n      const result = await onClick();\n      if (result) {\n        setPopoverText('Copied');\n        setTimeout(() => {\n          setShowPopover(false);\n        }, 1000);\n      }\n    }\n  }, [onClick]);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n    if (isHovered) {\n      timer = setTimeout(() => setShowPopover(true), 200);\n    } else {\n      setShowPopover(false);\n    }\n    return () => clearTimeout(timer);\n  }, [isHovered]);\n\n  if (!onClick) {\n    return {};\n  }\n\n  return {\n    handleClick,\n    handleMouseEnter,\n    handleMouseLeave,\n    showPopover,\n    popoverText,\n  };\n}\n","import { Children, useMemo } from 'react';\nimport { findComponent } from '../../internal/utils/findComponent';\nimport { cn, color, text } from '../../styles/theme';\nimport { useName } from '../hooks/useName';\nimport type { NameReact } from '../types';\nimport { getSlicedAddress } from '../utils/getSlicedAddress';\nimport { Badge } from './Badge';\nimport { DisplayBadge } from './DisplayBadge';\nimport { useIdentityContext } from './IdentityProvider';\n\n/**\n * Name is a React component that renders the user name from an Ethereum address.\n */\nexport function Name({\n  address = null,\n  className,\n  children,\n  chain,\n  ...props\n}: NameReact) {\n  const { address: contextAddress, chain: contextChain } = useIdentityContext();\n  if (!contextAddress && !address) {\n    console.error(\n      'Name: an Ethereum address must be provided to the Identity or Name component.',\n    );\n    return null;\n  }\n\n  const accountAddress = address ?? contextAddress;\n  const accountChain = chain ?? contextChain;\n\n  const { data: name, isLoading } = useName({\n    address: accountAddress,\n    chain: accountChain,\n  });\n\n  const badge = useMemo(() => {\n    return Children.toArray(children).find(findComponent(Badge));\n  }, [children]);\n\n  if (isLoading) {\n    return <span className={className} />;\n  }\n\n  return (\n    <div className=\"flex items-center gap-1\">\n      <span\n        data-testid=\"ockIdentity_Text\"\n        className={cn(text.headline, color.foreground, className)}\n        {...props}\n      >\n        {name || getSlicedAddress(accountAddress)}\n      </span>\n      {badge && <DisplayBadge address={accountAddress}>{badge}</DisplayBadge>}\n    </div>\n  );\n}\n","import { useQuery } from '@tanstack/react-query';\nimport type { Chain } from 'viem';\nimport { mainnet } from 'viem/chains';\nimport type { GetSocialsReturnType, UseQueryOptions } from '../types';\nimport { getSocials } from '../utils/getSocials';\n\ntype UseSocialsOptions = {\n  ensName: string;\n  chain?: Chain;\n};\n\nexport const useSocials = (\n  { ensName, chain = mainnet }: UseSocialsOptions,\n  queryOptions?: UseQueryOptions,\n) => {\n  const { enabled = true, cacheTime } = queryOptions ?? {};\n  const ensActionKey = `ens-socials-${ensName}-${chain.id}`;\n  return useQuery<GetSocialsReturnType>({\n    queryKey: ['useSocials', ensActionKey],\n    queryFn: async () => {\n      return getSocials({ ensName, chain });\n    },\n    gcTime: cacheTime,\n    enabled,\n    refetchOnWindowFocus: false,\n  });\n};\n","import type { Chain } from 'viem';\nimport { mainnet } from 'viem/chains';\nimport { normalize } from 'viem/ens';\nimport { isBase } from '../../isBase';\nimport { isEthereum } from '../../isEthereum';\nimport { getChainPublicClient } from '../../network/getChainPublicClient';\nimport { RESOLVER_ADDRESSES_BY_CHAIN_ID } from '../constants';\nimport type { GetSocialsReturnType } from '../types';\n\nexport type GetSocials = {\n  ensName: string;\n  chain?: Chain;\n};\n\nexport const getSocials = async ({\n  ensName,\n  chain = mainnet,\n}: GetSocials): Promise<GetSocialsReturnType> => {\n  const chainIsBase = isBase({ chainId: chain.id });\n  const chainIsEthereum = isEthereum({ chainId: chain.id });\n  const chainSupportsUniversalResolver = chainIsEthereum || chainIsBase;\n\n  if (!chainSupportsUniversalResolver) {\n    return Promise.reject(\n      'ChainId not supported, socials resolution is only supported on Ethereum and Base.',\n    );\n  }\n\n  const client = getChainPublicClient(chain);\n  const normalizedName = normalize(ensName);\n\n  const fetchTextRecord = async (key: string) => {\n    try {\n      const result = await client.getEnsText({\n        name: normalizedName,\n        key,\n        universalResolverAddress: RESOLVER_ADDRESSES_BY_CHAIN_ID[chain.id],\n      });\n      return result || null;\n    } catch (error) {\n      console.warn(`Failed to fetch ENS text record for ${key}:`, error);\n      return null;\n    }\n  };\n\n  const [twitter, github, farcaster, website] = await Promise.all([\n    fetchTextRecord('com.twitter'),\n    fetchTextRecord('com.github'),\n    fetchTextRecord('xyz.farcaster'),\n    fetchTextRecord('url'),\n  ]);\n\n  return { twitter, github, farcaster, website };\n};\n","import { icon } from '../../styles/theme';\n\nexport const githubSvg = (\n  <svg\n    data-testid=\"ock-githubSvg\"\n    role=\"img\"\n    aria-label=\"ock-githubSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    className=\"h-full w-full\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { icon } from '../../styles/theme';\n\nexport const twitterSvg = (\n  <svg\n    data-testid=\"ock-twitterSvg\"\n    role=\"img\"\n    aria-label=\"ock-twitterSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"-1 -1 14 14\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    className=\"h-full w-full\"\n  >\n    <g clipPath=\"url(#clip0_6998_47)\">\n      <path\n        d=\"M7.14163 5.07857L11.6089 0H10.5503L6.67137 4.40965L3.57328 0H0L4.68492 6.66817L0 11.9938H1.05866L5.15491 7.33709L8.42672 11.9938H12L7.14137 5.07857H7.14163ZM5.69165 6.72692L5.21697 6.06292L1.44011 0.779407H3.06615L6.11412 5.04337L6.5888 5.70737L10.5508 11.2499H8.92476L5.69165 6.72718V6.72692Z\"\n        className={icon.foreground}\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_6998_47\">\n        <rect width=\"12\" height=\"12\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\n","import { icon } from '../../styles/theme';\n\nexport const warpcastSvg = (\n  <svg\n    data-testid=\"ock-warpcastSvg\"\n    role=\"img\"\n    aria-label=\"ock-warpcastSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"9 9 14 14\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={`h-full w-full ${icon.foreground}`}\n  >\n    <path\n      d=\"M0 8C0 3.58172 3.58172 0 8 0H24C28.4183 0 32 3.58172 32 8V24C32 28.4183 28.4183 32 24 32H8C3.58172 32 0 28.4183 0 24V8Z\"\n      className={icon.inverse}\n    />\n    <path\n      d=\"M11.7305 10H20.115V22H18.8843V16.5032H18.8722C18.7362 14.984 17.4676 13.7935 15.9227 13.7935C14.3779 13.7935 13.1093 14.984 12.9733 16.5032H12.9612V22H11.7305V10Z\"\n      className={icon.foreground}\n    />\n    <path\n      d=\"M9.5 11.7031L10 13.4064H10.4231V20.2967C10.2106 20.2967 10.0385 20.47 10.0385 20.6838V21.1483H9.96154C9.74913 21.1483 9.57691 21.3216 9.57691 21.5354V21.9999H13.8846V21.5354C13.8846 21.3216 13.7124 21.1483 13.5 21.1483H13.4231V20.6838C13.4231 20.47 13.2508 20.2967 13.0384 20.2967H12.5769V11.7031H9.5Z\"\n      className={icon.foreground}\n    />\n    <path\n      d=\"M18.9614 20.2967C18.749 20.2967 18.5768 20.47 18.5768 20.6838V21.1483H18.4998C18.2874 21.1483 18.1152 21.3216 18.1152 21.5354V21.9999H22.4229V21.5354C22.4229 21.3216 22.2507 21.1483 22.0383 21.1483H21.9614V20.6838C21.9614 20.47 21.7892 20.2967 21.5768 20.2967V13.4064H21.9998L22.4998 11.7031H19.4229V20.2967H18.9614Z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { icon } from '../../styles/theme';\n\nexport const websiteSvg = (\n  <svg\n    data-testid=\"ock-websiteSvg\"\n    role=\"img\"\n    aria-label=\"ock-websiteSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 12 12\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    className={`h-full w-full ${icon.foreground}`}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M6 0C9.31356 0 12 2.68644 12 6C12 9.31356 9.31356 12 6 12C2.69689 12 0.0245556 9.35356 0 6C0.0244789 2.64689 2.69689 0 6 0ZM9.34844 9.97867C9.15053 9.88544 8.9422 9.80002 8.72553 9.72346C8.56251 10.0854 8.36772 10.4313 8.13856 10.7412C8.57762 10.5427 8.98439 10.2854 9.34844 9.97867ZM7.95156 9.49742C7.46353 9.38284 6.9427 9.30992 6.4 9.28597V11.1381C7.04791 10.9365 7.58233 10.2766 7.95156 9.49742ZM5.6 9.28597C5.05729 9.30993 4.53646 9.38284 4.04844 9.49742C4.41771 10.2766 4.95209 10.936 5.6 11.1375V9.28597ZM3.27456 9.72347C3.05737 9.80003 2.84956 9.88544 2.65164 9.97868C3.01571 10.2854 3.42248 10.5427 3.86153 10.7412C3.63237 10.4313 3.43758 10.0854 3.27456 9.72347ZM2.05267 9.38492C2.34486 9.2318 2.65736 9.09534 2.98809 8.97763C2.73913 8.21044 2.58288 7.33386 2.54799 6.40008H0.815211C0.901669 7.53597 1.35323 8.5703 2.05277 9.38497L2.05267 9.38492ZM3.75156 8.74742C4.33229 8.60263 4.95367 8.512 5.6 8.48545V6.4H3.34844C3.3823 7.25677 3.52553 8.05522 3.75157 8.74733L3.75156 8.74742ZM6.4 8.48545C7.04636 8.51201 7.66767 8.60263 8.24844 8.74794C8.47449 8.05523 8.61771 7.25728 8.65157 6.40061L6.40001 6.40009L6.4 8.48545ZM9.012 8.97763C9.34273 9.09534 9.65576 9.2318 9.94742 9.38492C10.6469 8.56982 11.0984 7.53603 11.185 6.40003H9.4522C9.4173 7.33389 9.26106 8.21048 9.0121 8.97759L9.012 8.97763ZM9.94742 2.61508C9.65523 2.7682 9.34273 2.90466 9.012 3.02237C9.26096 3.78956 9.41721 4.66614 9.4521 5.59992H11.1849C11.0984 4.46403 10.6469 3.4297 9.94732 2.61503L9.94742 2.61508ZM8.24853 3.25258C7.6678 3.39737 7.04642 3.488 6.40009 3.51456V5.6H8.65164C8.61779 4.74323 8.47456 3.94478 8.24852 3.25267L8.24853 3.25258ZM5.60009 3.51456C4.95373 3.48799 4.33242 3.39737 3.75164 3.25206C3.5256 3.94477 3.38238 4.74328 3.34852 5.59994H5.60008L5.60009 3.51456ZM2.98809 3.02237C2.65736 2.90466 2.34433 2.7682 2.05267 2.61508C1.35319 3.43018 0.901667 4.46397 0.815111 5.59997H2.54789C2.58278 4.66611 2.73903 3.78952 2.98799 3.02241L2.98809 3.02237ZM2.65163 2.02132C2.84954 2.11455 3.05788 2.19997 3.27454 2.27653C3.43757 1.91456 3.63236 1.56872 3.86152 1.25882C3.42246 1.45726 3.01569 1.71456 2.65163 2.02132ZM4.04852 2.50257C4.53654 2.61714 5.05738 2.69007 5.60008 2.71402V0.861911C4.95217 1.06348 4.41774 1.72337 4.04852 2.50258V2.50257ZM6.40008 2.71402C6.94279 2.69006 7.46362 2.61715 7.95163 2.50257C7.58237 1.7234 7.04747 1.06346 6.40008 0.8619V2.71402ZM8.72552 2.27652C8.94271 2.19996 9.15052 2.11454 9.34843 2.02131C8.98437 1.71454 8.5776 1.45724 8.13855 1.25881C8.36771 1.56923 8.5625 1.91454 8.72552 2.27652Z\"\n    />\n  </svg>\n);\n","import { githubSvg } from '../../internal/svg/githubSvg';\nimport { twitterSvg } from '../../internal/svg/twitterSvg';\nimport { warpcastSvg } from '../../internal/svg/warpcastSvg';\nimport { websiteSvg } from '../../internal/svg/websiteSvg';\nimport { border, cn, pressable } from '../../styles/theme';\n\nexport type SocialPlatform = 'twitter' | 'github' | 'farcaster' | 'website';\n\nexport const PLATFORM_CONFIG: Record<\n  SocialPlatform,\n  { href: (value: string) => string; icon: React.ReactNode }\n> = {\n  twitter: {\n    href: (value) => `https://x.com/${value}`,\n    icon: twitterSvg,\n  },\n  github: {\n    href: (value) => `https://github.com/${value}`,\n    icon: githubSvg,\n  },\n  farcaster: {\n    href: (value) => `https://warpcast.com/${value}`,\n    icon: warpcastSvg,\n  },\n  website: {\n    href: (value) => value,\n    icon: websiteSvg,\n  },\n};\n\nexport function GetSocialPlatformDetails({\n  platform,\n  value,\n}: {\n  platform: SocialPlatform;\n  value: string;\n}) {\n  const config = PLATFORM_CONFIG[platform];\n  return (\n    <a\n      href={config.href(value)}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className={cn(\n        pressable.default,\n        border.radius,\n        border.default,\n        'flex items-center justify-center p-2',\n      )}\n      data-testid={`ockSocials_${\n        platform.charAt(0).toUpperCase() + platform.slice(1)\n      }`}\n    >\n      <span className=\"sr-only\">{platform}</span>\n      <div className={cn('flex h-4 w-4 items-center justify-center')}>\n        {config.icon}\n      </div>\n    </a>\n  );\n}\n","import type { Address, Chain } from 'viem';\nimport { border, cn } from '../../styles/theme';\nimport { useName } from '../hooks/useName';\nimport { useSocials } from '../hooks/useSocials';\nimport { GetSocialPlatformDetails } from '../utils/getSocialPlatformDetails';\nimport type { SocialPlatform } from '../utils/getSocialPlatformDetails';\nimport { useIdentityContext } from './IdentityProvider';\n\ntype SocialsReact = {\n  address?: Address | null;\n  ensName?: string;\n  chain?: Chain;\n  className?: string;\n};\n\nexport function Socials({ address, chain, className }: SocialsReact) {\n  const { address: contextAddress, chain: contextChain } = useIdentityContext();\n\n  const accountAddress = address ?? contextAddress;\n  const accountChain = chain ?? contextChain;\n\n  if (!accountAddress) {\n    console.error(\n      'Socials: an Ethereum address must be provided to the Socials component.',\n    );\n    return null;\n  }\n\n  const { data: name, isLoading: isLoadingName } = useName({\n    address: accountAddress,\n    chain: accountChain,\n  });\n\n  const { data: socials, isLoading: isLoadingSocials } = useSocials(\n    {\n      ensName: name ?? '',\n      chain: accountChain,\n    },\n    { enabled: !!name },\n  );\n\n  if (isLoadingName || isLoadingSocials) {\n    return <span className={className} />;\n  }\n\n  if (!socials || Object.values(socials).every((value) => !value)) {\n    return null;\n  }\n\n  return (\n    <div className={cn(border.default, 'mt-2 w-full pl-1', className)}>\n      <div className={'left-4 flex space-x-2'}>\n        {Object.entries(socials).map(\n          ([platform, value]) =>\n            value && (\n              <GetSocialPlatformDetails\n                key={platform}\n                platform={platform as SocialPlatform}\n                value={value}\n              />\n            ),\n        )}\n      </div>\n    </div>\n  );\n}\n","import { mainnet } from 'viem/chains';\nimport { getChainPublicClient } from '../../network/getChainPublicClient';\nimport type { GetAddress, GetAddressReturnType } from '../types';\n\n/**\n * Get address from ENS name or Basename.\n */\nexport const getAddress = async ({\n  name,\n  chain = mainnet,\n}: GetAddress): Promise<GetAddressReturnType> => {\n  const client = getChainPublicClient(chain);\n  // Gets address for ENS name.\n  const address = await client.getEnsAddress({\n    name,\n  });\n  return address ?? null;\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { mainnet } from 'viem/chains';\nimport type {\n  GetAddressReturnType,\n  UseAddressOptions,\n  UseQueryOptions,\n} from '../types';\nimport { getAddress } from '../utils/getAddress';\n\nexport const useAddress = (\n  { name, chain = mainnet }: UseAddressOptions,\n  queryOptions?: UseQueryOptions,\n) => {\n  const { enabled = true, cacheTime } = queryOptions ?? {};\n  const actionKey = `useAddress-${name}-${chain.id}`;\n  return useQuery<GetAddressReturnType>({\n    queryKey: ['useAddress', actionKey],\n    queryFn: async () => {\n      return await getAddress({ name, chain });\n    },\n    gcTime: cacheTime,\n    enabled,\n    refetchOnWindowFocus: false,\n  });\n};\n","import type { ReactNode } from 'react';\nimport { Avatar, Badge, Identity, Name } from '../../../identity';\nimport { cn, color, text } from '../../../styles/theme';\nimport { useOnchainKit } from '../../../useOnchainKit';\nimport { useNFTContext } from '../NFTProvider';\n\ntype NFTOwnerReact = {\n  className?: string;\n  label?: ReactNode;\n};\n\nexport function NFTOwner({ className, label = 'Owned by' }: NFTOwnerReact) {\n  const { schemaId } = useOnchainKit();\n  const { ownerAddress } = useNFTContext();\n\n  if (!ownerAddress) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cn(\n        'flex items-center justify-between',\n        text.label2,\n        className,\n      )}\n    >\n      <div className={cn(color.foregroundMuted)}>{label}</div>\n      <Identity\n        className={cn('!bg-inherit space-x-1 px-0')}\n        address={ownerAddress}\n        schemaId={schemaId}\n      >\n        <Avatar className=\"h-4 w-4\" />\n        <Name>\n          <Badge />\n        </Name>\n      </Identity>\n    </div>\n  );\n}\n","import { cn, text } from '../../../styles/theme';\nimport { useNFTContext } from '../NFTProvider';\n\ntype NFTTitleReact = {\n  className?: string;\n};\n\nexport function NFTTitle({ className }: NFTTitleReact) {\n  const { name } = useNFTContext();\n\n  if (!name) {\n    return null;\n  }\n\n  return <div className={cn('pt-3 pb-1', text.title3, className)}>{name}</div>;\n}\n","import type { ReactNode } from 'react';\nimport { useAccount } from 'wagmi';\nimport { baseSvg } from '../../../internal/svg/baseSvg';\nimport { cn, color, text } from '../../../styles/theme';\n\ntype NFTNetworkReact = {\n  className?: string;\n  label?: ReactNode;\n};\n\nconst networkMap = {\n  Base: baseSvg,\n} as Record<string, ReactNode>;\n\nexport function NFTNetwork({ className, label = 'Network' }: NFTNetworkReact) {\n  const { chain } = useAccount();\n\n  if (!chain || !networkMap[chain.name]) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cn(\n        'flex items-center justify-between py-0.5',\n        text.label2,\n        className,\n      )}\n    >\n      <div className={cn(color.foregroundMuted)}>{label}</div>\n      <div className=\"flex items-center gap-1\">\n        <div className=\"h-4 w-4 object-cover\">{networkMap[chain.name]}</div>\n        <div>{chain.name}</div>\n      </div>\n    </div>\n  );\n}\n","export const baseSvg = (\n  <svg\n    data-testid=\"ock-baseSvg\"\n    role=\"img\"\n    aria-label=\"base\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 146 146\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <circle cx=\"73\" cy=\"73\" r=\"73\" fill=\"#0052FF\" />\n    <path\n      d=\"M73.323 123.729C101.617 123.729 124.553 100.832 124.553 72.5875C124.553 44.343 101.617 21.4463 73.323 21.4463C46.4795 21.4463 24.4581 42.0558 22.271 68.2887H89.9859V76.8864H22.271C24.4581 103.119 46.4795 123.729 73.323 123.729Z\"\n      fill=\"white\"\n    />\n  </svg>\n);\n"],"mappings":"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,CAAA;IACRE,MAAM;IACNC,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,M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","names":["clsx","twMerge","cn","inputs","twMerge","clsx","text","body","caption","headline","label1","label2","legal","title1","title3","pressable","default","alternate","inverse","primary","secondary","coinbaseBranding","shadow","disabled","background","error","warning","success","washed","reverse","color","foreground","foregroundMuted","fill","defaultReverse","border","defaultActive","radius","radiusInner","icon","primary","foreground","foregroundMuted","inverse","error","success","warning","formatAmount","amount","options","undefined","locale","minimumFractionDigits","maximumFractionDigits","Number","toLocaleString","createContext","useCallback","useContext","useState","useMemo","useValue","object","useMemo","emptyContext","NFTContext","createContext","useNFTContext","context","useContext","Error","NFTLastSoldPrice","className","label","lastSoldPrice","amount","currency","amountUSD","useNFTContext","div","cn","text","label2","color","foregroundMuted","label1","formatAmount","minimumFractionDigits","maximumFractionDigits","useCallback","useMemo","MediaType","LifecycleType","createContext","useContext","useEffect","useCallback","useState","emptyContext","NFTLifecycleContext","createContext","useNFTLifecycleContext","context","useContext","Error","useCallback","useEffect","useRef","useState","NFTAudio","className","onLoading","onLoaded","onError","animationUrl","useNFTContext","audioRef","useRef","isPlaying","setIsPlaying","useState","useEffect","onEnded","current","onloadstart","onloadeddata","addEventListener","onerror","error","type","code","message","handlePlayPause","useCallback","event","stopPropagation","pause","play","div","cn","button","background","reverse","onClick","audio","ref","data-testid","autoPlay","controls","src","track","kind","useCallback","useEffect","useState","defaultNFTSvg","svg","data-testid","role","aria-label","width","height","viewBox","xmlns","rect","fill","className","alternate","path","d","defaultReverse","NFTImage","className","onLoading","onLoaded","onError","imageUrl","description","useNFTContext","loaded","setLoaded","useState","error","setError","transitionEnded","setTransitionEnded","loadImage","useCallback","img","Image","onload","onerror","type","code","message","src","useEffect","handleRetry","handleTransitionEnd","div","cn","button","onClick","defaultNFTSvg","data-testid","alt","decoding","onTransitionEnd","useEffect","useRef","NFTVideo","className","onLoading","onLoaded","onError","animationUrl","imageUrl","useNFTContext","videoRef","useRef","useEffect","current","onloadstart","onloadeddata","onerror","error","type","code","message","div","defaultNFTSvg","cn","video","ref","data-testid","poster","controls","loop","src","muted","autoPlay","playsInline","draggable","width","NFTMedia","mimeType","useNFTContext","type","updateLifecycleStatus","useNFTLifecycleContext","mediaType","useMemo","startsWith","MediaType","Video","Audio","Image","Unknown","handleLoading","useCallback","mediaUrl","statusName","statusData","handleLoaded","LifecycleType","MINT","handleError","error","NFTVideo","onLoading","onLoaded","onError","div","className","NFTImage","NFTAudio","useMemo","DATE_OPTIONS","year","month","day","NFTMintDate","className","label","mintDate","useNFTContext","formattedDate","useMemo","formatter","Intl","DateTimeFormat","undefined","format","div","cn","text","label2","color","foregroundMuted","useState","getSlicedAddress","address","slice","createContext","useContext","useContext","createContext","useMemo","baseSepolia","ONCHAIN_KIT_CONFIG","address","apiKey","chain","baseSepolia","config","appearance","name","logo","mode","theme","paymaster","rpcUrl","schemaId","projectId","OnchainKitContext","createContext","ONCHAIN_KIT_CONFIG","useOnchainKit","useContext","OnchainKitContext","emptyContext","IdentityContext","createContext","useIdentityContext","useContext","IdentityProvider","props","chain","contextChain","useOnchainKit","accountChain","value","useValue","address","schemaId","Provider","children","Address","address","className","isSliced","copyText","setCopyText","useState","contextAddress","useIdentityContext","console","error","accountAddress","handleClick","navigator","clipboard","writeText","then","setTimeout","catch","err","handleKeyDown","e","key","preventDefault","span","data-testid","cn","color","foregroundMuted","text","label2","onClick","onKeyDown","tabIndex","role","getSlicedAddress","pressable","alternate","legal","foreground","border","default","radius","Children","useMemo","defaultAvatarSVG","svg","data-testid","role","aria-label","width","height","viewBox","fill","xmlns","className","path","d","icon","foreground","defaultLoadingSVG","svg","data-testid","role","aria-label","width","height","viewBox","xmlns","circle","cx","cy","r","stroke","fill","strokeWidth","strokeLinecap","animateTransform","attributeName","type","from","to","dur","repeatCount","isValidElement","findComponent","component","child","isValidElement","type","useQuery","mainnet","mainnet","normalize","base","baseSepolia","isBase","chainId","isMainnetOnly","base","id","baseSepolia","mainnet","sepolia","isEthereum","chainId","isMainnetOnly","mainnet","id","sepolia","http","createPublicClient","getChainPublicClient","chain","createPublicClient","transport","http","base","baseSepolia","RESOLVER_ADDRESSES_BY_CHAIN_ID","id","BASE_DEFAULT_PROFILE_PICTURES1","BASE_DEFAULT_PROFILE_PICTURES2","BASE_DEFAULT_PROFILE_PICTURES3","BASE_DEFAULT_PROFILE_PICTURES4","BASE_DEFAULT_PROFILE_PICTURES5","BASE_DEFAULT_PROFILE_PICTURES6","BASE_DEFAULT_PROFILE_PICTURES7","BASE_DEFAULT_PROFILE_PICTURES","sha256","getBaseDefaultProfilePictureIndex","name","optionsLength","nameAsUint8Array","Uint8Array","from","split","map","letter","charCodeAt","hash","sha256","hashValue","Number","parseInt","remainder","index","getBaseDefaultProfilePicture","username","profilePictureIndex","getBaseDefaultProfilePictureIndex","BASE_DEFAULT_PROFILE_PICTURES","length","selectedProfilePicture","base64Svg","btoa","dataUri","isBasename","username","endsWith","getAvatar","ensName","chain","mainnet","chainIsBase","isBase","chainId","id","chainIsEthereum","isEthereum","chainSupportsUniversalResolver","usernameIsBasename","isBasename","Promise","reject","client","getChainPublicClient","baseEnsAvatar","getEnsAvatar","name","normalize","universalResolverAddress","RESOLVER_ADDRESSES_BY_CHAIN_ID","_error","mainnetEnsAvatar","getBaseDefaultProfilePicture","useAvatar","ensName","chain","mainnet","queryOptions","enabled","cacheTime","ensActionKey","id","useQuery","queryKey","queryFn","getAvatar","gcTime","refetchOnWindowFocus","useQuery","mainnet","base","mainnet","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","encodePacked","keccak256","namehash","mainnet","convertChainIdToCoinType","chainId","mainnet","id","cointype","toString","toLocaleUpperCase","convertReverseNodeToBytes","address","chainId","addressFormatted","toLocaleLowerCase","addressNode","keccak256","substring","chainCoinType","convertChainIdToCoinType","baseReverseNode","namehash","toLocaleUpperCase","addressReverseNode","encodePacked","getName","address","chain","mainnet","chainIsBase","isBase","chainId","id","chainIsEthereum","isEthereum","chainSupportsUniversalResolver","Promise","reject","client","getChainPublicClient","addressReverseNode","convertReverseNodeToBytes","base","basename","readContract","abi","L2ResolverAbi","RESOLVER_ADDRESSES_BY_CHAIN_ID","functionName","args","_error","ensName","getEnsName","useName","address","chain","mainnet","queryOptions","enabled","cacheTime","ensActionKey","id","useQuery","queryKey","queryFn","getName","gcTime","refetchOnWindowFocus","badgeSvg","svg","role","aria-label","width","height","viewBox","fill","xmlns","className","path","d","data-testid","icon","foreground","Badge","className","badgeSize","span","cn","background","primary","data-testid","style","height","width","maxHeight","maxWidth","badgeSvg","useEffect","useState","gql","getAddress","GraphQLClient","base","easChainBase","id","easGraphqlAPI","schemaUids","baseSepolia","easChainBaseSepolia","id","easGraphqlAPI","schemaUids","optimism","easChainOptimism","id","easGraphqlAPI","schemaUids","easSupportedChains","easChainBase","id","easChainBaseSepolia","easChainOptimism","isChainSupported","chain","getChainEASGraphQLAPI","easGraphqlAPI","createEasGraphQLClient","chain","endpoint","getChainEASGraphQLAPI","GraphQLClient","attestationQuery","gql","getAttestationQueryVariables","address","filters","checksummedAddress","getAddress","conditions","recipient","equals","revoked","expirationTime","OR","gt","schemas","length","schemaId","in","where","AND","distinct","take","limit","getAttestationsByFilter","chain","easGraphqlClient","createEasGraphQLClient","attestationQueryVariables","attestations","request","getAttestations","address","chain","options","isChainSupported","console","log","defaultQueryVariablesFilter","revoked","expirationTime","Math","round","Date","now","limit","queryVariablesFilter","getAttestationsByFilter","error","message","useAttestations","address","chain","schemaId","attestations","setAttestations","useState","useEffect","fetchData","foundAttestations","getAttestations","schemas","DisplayBadge","children","address","chain","schemaId","useOnchainKit","contextSchemaId","contextAddress","useIdentityContext","Error","attestations","useAttestations","length","Avatar","address","chain","className","defaultComponent","loadingComponent","children","props","contextAddress","contextChain","useIdentityContext","accountAddress","accountChain","console","error","data","name","isLoading","isLoadingName","useName","avatar","isLoadingAvatar","useAvatar","ensName","enabled","badge","useMemo","Children","toArray","find","findComponent","Badge","defaultAvatar","defaultAvatarSVG","loadingAvatar","defaultLoadingSVG","div","cn","displayAvatarImg","data-testid","img","loading","width","height","decoding","src","alt","DisplayBadge","getRoundedAmount","balance","fractionDigits","parsedBalance","Number","parseFloat","result","toFixed","replace","useMemo","formatUnits","useBalance","GENERAL_SWAP_ERROR_CODE","GENERAL_SWAP_QUOTE_ERROR_CODE","GENERAL_SWAP_BALANCE_ERROR_CODE","LOW_LIQUIDITY_ERROR_CODE","TOO_MANY_REQUESTS_ERROR_CODE","UNCAUGHT_SWAP_QUOTE_ERROR_CODE","UNCAUGHT_SWAP_ERROR_CODE","getSwapErrorCode","context","errorCode","TOO_MANY_REQUESTS_ERROR_CODE","LOW_LIQUIDITY_ERROR_CODE","UNCAUGHT_SWAP_ERROR_CODE","UNCAUGHT_SWAP_QUOTE_ERROR_CODE","GENERAL_SWAP_QUOTE_ERROR_CODE","GENERAL_SWAP_BALANCE_ERROR_CODE","GENERAL_SWAP_ERROR_CODE","ETH_DECIMALS","useGetETHBalance","address","ethBalanceResponse","useBalance","useMemo","error","code","getSwapErrorCode","message","data","value","convertedBalance","response","roundedBalance","formatUnits","getRoundedAmount","EthBalance","address","className","contextAddress","useIdentityContext","console","error","convertedBalance","balance","useGetETHBalance","span","data-testid","cn","text","label2","color","foregroundMuted","getRoundedAmount","useCallback","Children","useMemo","useEffect","useState","usePreferredColorScheme","colorScheme","setColorScheme","useState","useEffect","mediaQuery","window","matchMedia","matches","updateColorScheme","event","addEventListener","removeEventListener","useTheme","preferredMode","usePreferredColorScheme","config","appearance","useOnchainKit","theme","mode","useCallback","useEffect","useState","usePopover","onClick","popoverText","setPopoverText","useState","showPopover","setShowPopover","isHovered","setIsHovered","handleMouseEnter","useCallback","handleMouseLeave","handleClick","result","setTimeout","useEffect","timer","clearTimeout","Children","useMemo","Name","address","className","children","chain","props","contextAddress","contextChain","useIdentityContext","console","error","accountAddress","accountChain","data","name","isLoading","useName","badge","useMemo","Children","toArray","find","findComponent","Badge","span","div","data-testid","cn","text","headline","color","foreground","getSlicedAddress","DisplayBadge","useQuery","mainnet","mainnet","normalize","getSocials","ensName","chain","mainnet","chainIsBase","isBase","chainId","id","chainIsEthereum","isEthereum","chainSupportsUniversalResolver","Promise","reject","client","getChainPublicClient","normalizedName","normalize","fetchTextRecord","key","result","getEnsText","name","universalResolverAddress","RESOLVER_ADDRESSES_BY_CHAIN_ID","error","console","warn","twitter","github","farcaster","website","all","useSocials","ensName","chain","mainnet","queryOptions","enabled","cacheTime","ensActionKey","id","useQuery","queryKey","queryFn","getSocials","gcTime","refetchOnWindowFocus","githubSvg","svg","data-testid","role","aria-label","width","height","viewBox","xmlns","fill","className","path","fillRule","clipRule","d","icon","foreground","twitterSvg","svg","data-testid","role","aria-label","width","height","viewBox","xmlns","fill","className","g","clipPath","path","d","icon","foreground","defs","id","rect","warpcastSvg","svg","data-testid","role","aria-label","width","height","viewBox","xmlns","className","icon","foreground","path","d","inverse","websiteSvg","svg","data-testid","role","aria-label","width","height","viewBox","xmlns","fill","className","icon","foreground","path","fillRule","clipRule","d","PLATFORM_CONFIG","twitter","href","value","icon","twitterSvg","github","githubSvg","farcaster","warpcastSvg","website","websiteSvg","GetSocialPlatformDetails","platform","config","a","target","rel","className","cn","pressable","default","border","radius","data-testid","charAt","toUpperCase","slice","span","div","Socials","address","chain","className","contextAddress","contextChain","useIdentityContext","accountAddress","accountChain","console","error","data","name","isLoading","isLoadingName","useName","socials","isLoadingSocials","useSocials","ensName","enabled","span","Object","values","every","value","div","cn","border","default","entries","map","platform","GetSocialPlatformDetails","key","noop","IdentityLayout","children","className","onClick","componentTheme","useTheme","avatar","name","address","ethBalance","socials","useMemo","childrenArray","Children","toArray","find","findComponent","Avatar","Name","Address","EthBalance","Socials","handleClick","handleMouseEnter","handleMouseLeave","showPopover","popoverText","usePopover","div","cn","background","default","pressable","data-testid","onMouseEnter","onMouseLeave","onKeyUp","onKeyDown","span","color","foregroundMuted","inverse","foreground","Identity","address","chain","children","className","hasCopyAddressOnClick","schemaId","contextChain","useOnchainKit","accountChain","handleCopy","useCallback","navigator","clipboard","writeText","e","console","error","onClick","undefined","IdentityProvider","IdentityLayout","mainnet","useQuery","mainnet","NFTOwner","className","label","schemaId","useOnchainKit","ownerAddress","useNFTContext","div","cn","text","label2","color","foregroundMuted","Identity","address","Avatar","Name","Badge","NFTTitle","className","name","useNFTContext","div","cn","text","title3","useAccount","baseSvg","svg","data-testid","role","aria-label","width","height","viewBox","fill","xmlns","circle","cx","cy","r","path","d","networkMap","Base","baseSvg","NFTNetwork","className","label","chain","useAccount","name","div","cn","text","label2","color","foregroundMuted"]}