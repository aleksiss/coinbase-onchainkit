{"version":3,"sources":["../../../src/identity/components/Address.tsx","../../../src/styles/theme.ts","../../../src/identity/utils/getSlicedAddress.ts","../../../src/identity/components/IdentityProvider.tsx","../../../src/internal/hooks/useValue.ts","../../../src/useOnchainKit.tsx","../../../src/OnchainKitProvider.tsx","../../../src/OnchainKitConfig.ts","../../../src/identity/components/Avatar.tsx","../../../src/internal/svg/defaultAvatarSVG.tsx","../../../src/internal/svg/defaultLoadingSVG.tsx","../../../src/internal/utils/findComponent.ts","../../../src/identity/hooks/useAvatar.ts","../../../src/identity/utils/getAvatar.ts","../../../src/isBase.ts","../../../src/isEthereum.ts","../../../src/network/getChainPublicClient.ts","../../../src/identity/constants.ts","../../../src/identity/utils/getBaseDefaultProfilePictureIndex.tsx","../../../src/identity/utils/getBaseDefaultProfilePicture.tsx","../../../src/identity/utils/isBasename.tsx","../../../src/identity/hooks/useName.ts","../../../src/identity/utils/getName.ts","../../../src/identity/abis/L2ResolverAbi.ts","../../../src/identity/utils/convertReverseNodeToBytes.ts","../../../src/identity/utils/convertChainIdToCoinType.ts","../../../src/internal/svg/badgeSvg.tsx","../../../src/identity/components/Badge.tsx","../../../src/identity/hooks/useAttestations.ts","../../../src/network/attestations.ts","../../../src/network/createEasGraphQLClient.ts","../../../src/network/definitions/base.ts","../../../src/network/definitions/baseSepolia.ts","../../../src/network/definitions/optimism.ts","../../../src/identity/utils/easSupportedChains.ts","../../../src/identity/utils/getAttestations.ts","../../../src/identity/components/DisplayBadge.tsx","../../../src/internal/utils/getRoundedAmount.ts","../../../src/wallet/hooks/useGetETHBalance.ts","../../../src/swap/constants.ts","../../../src/swap/utils/getSwapErrorCode.ts","../../../src/identity/components/EthBalance.tsx","../../../src/identity/components/Identity.tsx","../../../src/identity/components/IdentityLayout.tsx","../../../src/internal/hooks/usePreferredColorScheme.ts","../../../src/useTheme.ts","../../../src/identity/hooks/usePopover.ts","../../../src/identity/components/Name.tsx","../../../src/identity/hooks/useSocials.tsx","../../../src/identity/utils/getSocials.ts","../../../src/internal/svg/githubSvg.tsx","../../../src/internal/svg/twitterSvg.tsx","../../../src/internal/svg/warpcastSvg.tsx","../../../src/internal/svg/websiteSvg.tsx","../../../src/identity/utils/getSocialPlatformDetails.tsx","../../../src/identity/components/Socials.tsx","../../../src/identity/utils/getAddress.ts","../../../src/identity/hooks/useAddress.ts","../../../src/nft/components/NFTProvider.tsx","../../../src/nft/components/mint/NFTCreator.tsx","../../../src/nft/components/mint/NFTMintButton.tsx","../../../src/internal/components/Spinner.tsx","../../../src/useIsMounted.ts","../../../src/transaction/components/TransactionProvider.tsx","../../../src/constants.ts","../../../src/internal/hooks/useCapabilitiesSafe.ts","../../../src/transaction/constants.ts","../../../src/transaction/hooks/useCallsStatus.ts","../../../src/transaction/hooks/useSendCall.ts","../../../src/transaction/utils/isUserRejectedRequestError.ts","../../../src/transaction/hooks/useSendCalls.ts","../../../src/transaction/hooks/useSendWalletTransactions.tsx","../../../src/transaction/utils/sendBatchedTransactions.ts","../../../src/transaction/utils/sendSingleTransactions.ts","../../../src/transaction/hooks/useWriteContract.ts","../../../src/transaction/hooks/useWriteContracts.ts","../../../src/transaction/utils/getPaymasterUrl.ts","../../../src/transaction/components/Transaction.tsx","../../../src/transaction/components/TransactionButton.tsx","../../../src/network/getChainExplorer.ts","../../../src/transaction/utils/isSpinnerDisplayed.ts","../../../src/transaction/components/TransactionToast.tsx","../../../src/internal/svg/closeSvg.tsx","../../../src/transaction/hooks/useGetTransactionToastAction.tsx","../../../src/transaction/components/TransactionToastIcon.tsx","../../../src/transaction/hooks/useGetTransactionToastLabel.tsx","../../../src/transaction/components/TransactionSponsor.tsx","../../../src/transaction/components/TransactionStatus.tsx","../../../src/transaction/hooks/useGetTransactionStatusAction.tsx","../../../src/transaction/components/TransactionStatusAction.tsx","../../../src/transaction/hooks/useGetTransactionStatusLabel.tsx","../../../src/transaction/components/TransactionStatusLabel.tsx","../../../src/wallet/components/ConnectWallet.tsx","../../../src/wallet/components/ConnectButton.tsx","../../../src/wallet/components/ConnectWalletText.tsx","../../../src/wallet/components/WalletProvider.tsx","../../../src/wallet/components/Wallet.tsx","../../../src/wallet/components/WalletDropdown.tsx","../../../src/useBreakpoints.ts","../../../src/wallet/components/WalletBottomSheet.tsx","../../../src/wallet/components/WalletDropdownDisconnect.tsx","../../../src/internal/svg/disconnectSvg.tsx","../../../src/internal/hooks/useIcon.tsx","../../../src/internal/svg/fundWallet.tsx","../../../src/internal/svg/swapSettings.tsx","../../../src/internal/svg/walletSvg.tsx","../../../src/wallet/components/WalletDropdownBasename.tsx","../../../src/internal/svg/basenameSvg.tsx","../../../src/wallet/components/WalletDropdownFundLink.tsx","../../../src/fund/hooks/useGetFundingUrl.ts","../../../src/wallet/hooks/useIsWalletACoinbaseSmartWallet.ts","../../../src/wallet/utils/isValidAAEntrypoint.ts","../../../src/wallet/utils/isWalletACoinbaseSmartWallet.ts","../../../src/nft/components/NFTLifecycleProvider.tsx","../../../src/nft/hooks/useLifecycleStatus.ts","../../../src/nft/components/mint/NFTMinters.tsx","../../../src/internal/components/QuantitySelector.tsx","../../../src/internal/components/TextInput.tsx","../../../src/internal/hooks/useDebounce.ts","../../../src/nft/components/mint/NFTQuantitySelector.tsx","../../../src/internal/utils/multiplyFloats.ts","../../../src/token/utils/formatAmount.ts","../../../src/nft/components/mint/NFTAssetCost.tsx","../../../src/nft/components/mint/NFTTotalCost.tsx","../../../src/internal/svg/infoSvg.tsx","../../../src/nft/components/mint/NFTCollectionTitle.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { border, cn, color, pressable, text } from '../../styles/theme';\nimport type { AddressReact } from '../types';\nimport { getSlicedAddress } from '../utils/getSlicedAddress';\nimport { useIdentityContext } from './IdentityProvider';\n\nexport function Address({\n  address = null,\n  className,\n  isSliced = true,\n}: AddressReact) {\n  const [copyText, setCopyText] = useState('Copy');\n  const { address: contextAddress } = useIdentityContext();\n  if (!contextAddress && !address) {\n    console.error(\n      'Address: an Ethereum address must be provided to the Identity or Address component.',\n    );\n    return null;\n  }\n\n  const accountAddress = address ?? contextAddress;\n\n  const handleClick = () => {\n    navigator.clipboard\n      .writeText(accountAddress)\n      .then(() => {\n        setCopyText('Copied');\n        setTimeout(() => setCopyText('Copy'), 2000);\n      })\n      .catch((err) => {\n        console.error('Failed to copy address: ', err);\n      });\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      handleClick();\n    }\n  };\n\n  return (\n    <span\n      data-testid=\"ockAddress\"\n      className={cn(\n        color.foregroundMuted,\n        text.label2,\n        className,\n        'group relative cursor-pointer',\n      )}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      tabIndex={0}\n      role=\"button\"\n    >\n      {isSliced ? getSlicedAddress(accountAddress) : accountAddress}\n      <span\n        className={cn(\n          pressable.alternate,\n          text.legal,\n          color.foreground,\n          border.default,\n          border.radius,\n          'absolute top-full left-[0%] z-10 mt-0.5 px-1.5 py-0.5 opacity-0 transition-opacity group-hover:opacity-100',\n        )}\n      >\n        {copyText}\n      </span>\n    </span>\n  );\n}\n","import { clsx } from 'clsx';\nimport type { ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport const text = {\n  body: 'ock-font-family font-normal leading-normal',\n  caption: 'ock-font-family font-semibold text-xs leading-4',\n  headline: 'ock-font-family font-semibold leading-normal',\n  label1: 'ock-font-family font-semibold text-sm leading-5',\n  label2: 'ock-font-family text-sm leading-5',\n  legal: 'ock-font-family text-xs leading-4',\n  title1: 'ock-font-family font-semibold text-[1.75rem] leading-9',\n  title3: 'ock-font-family font-semibold text-xl leading-7',\n} as const;\n\nexport const pressable = {\n  default:\n    'cursor-pointer ock-bg-default active:bg-[var(--ock-bg-default-active)] hover:bg-[var(--ock-bg-default-hover)]',\n  alternate:\n    'cursor-pointer ock-bg-alternate active:bg-[var(--ock-bg-alternate-active)] hover:[var(--ock-bg-alternate-hover)]',\n  inverse:\n    'cursor-pointer ock-bg-inverse active:bg-[var(--ock-bg-inverse-active)] hover:bg-[var(--ock-bg-inverse-hover)]',\n  primary:\n    'cursor-pointer ock-bg-primary active:bg-[var(--ock-bg-primary-active)] hover:bg-[var(--ock-bg-primary-hover)]',\n  secondary:\n    'cursor-pointer ock-bg-secondary active:bg-[var(--ock-bg-secondary-active)] hover:bg-[var(--ock-bg-secondary-hover)]',\n  coinbaseBranding: 'cursor-pointer bg-[#0052FF] hover:bg-[#0045D8]',\n  shadow: 'ock-shadow-default',\n  disabled: 'opacity-[0.38] pointer-events-none',\n} as const;\n\nexport const background = {\n  default: 'ock-bg-default',\n  alternate: 'ock-bg-alternate',\n  inverse: 'ock-bg-inverse',\n  primary: 'ock-bg-primary',\n  secondary: 'ock-bg-secondary',\n  error: 'ock-bg-error',\n  warning: 'ock-bg-warning',\n  success: 'ock-bg-success',\n  washed: 'ock-bg-primary-washed',\n  disabled: 'ock-bg-primary-disabled',\n  reverse: 'ock-bg-default-reverse',\n} as const;\n\nexport const color = {\n  inverse: 'ock-text-inverse',\n  foreground: 'ock-text-foreground',\n  foregroundMuted: 'ock-text-foreground-muted',\n  error: 'ock-text-error',\n  primary: 'ock-text-primary',\n  success: 'ock-text-success',\n  warning: 'ock-text-warning',\n  disabled: 'ock-text-disabled',\n} as const;\n\nexport const fill = {\n  default: 'ock-fill-default',\n  defaultReverse: 'ock-fill-default-reverse',\n  inverse: 'ock-fill-inverse',\n  alternate: 'ock-fill-alternate',\n} as const;\n\nexport const border = {\n  default: 'ock-border-default',\n  defaultActive: 'ock-border-default-active',\n  radius: 'ock-border-radius',\n  radiusInner: 'ock-border-radius-inner',\n} as const;\n\nexport const placeholder = {\n  default: 'ock-placeholder-default',\n} as const;\n\nexport const icon = {\n  primary: 'ock-icon-color-primary',\n  foreground: 'ock-icon-color-foreground',\n  foregroundMuted: 'ock-icon-color-foreground-muted',\n  inverse: 'ock-icon-color-inverse',\n  error: 'ock-icon-color-error',\n  success: 'ock-icon-color-success',\n  warning: 'ock-icon-color-warning',\n} as const;\n\nexport const line = {\n  primary: 'ock-line-primary border',\n  default: 'ock-line-default border',\n  heavy: 'ock-line-heavy border',\n  inverse: 'ock-line-inverse border',\n} as const;\n","import type { Address } from 'viem';\n\n/**\n * Returns the first 6 and last 4 characters of an address.\n */\nexport const getSlicedAddress = (address: Address) => {\n  return `${address.slice(0, 6)}...${address.slice(-4)}`;\n};\n","import { createContext, useContext } from 'react';\nimport type { Address } from 'viem';\nimport { useValue } from '../../internal/hooks/useValue';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport type { IdentityContextType, IdentityProviderReact } from '../types';\n\nconst emptyContext = {} as IdentityContextType;\n\nexport const IdentityContext = createContext<IdentityContextType>(emptyContext);\n\nexport function useIdentityContext() {\n  return useContext(IdentityContext);\n}\n\nexport function IdentityProvider(props: IdentityProviderReact) {\n  const { chain: contextChain } = useOnchainKit();\n  const accountChain = props.chain ?? contextChain;\n\n  const value = useValue({\n    address: props.address || ('' as Address),\n    chain: accountChain,\n    schemaId: props.schemaId,\n  });\n\n  return (\n    <IdentityContext.Provider value={value}>\n      {props.children}\n    </IdentityContext.Provider>\n  );\n}\n","import { useMemo } from 'react';\n\nexport function useValue<T>(object: T): T {\n  return useMemo(() => object, [object]);\n}\n","import { useContext } from 'react';\nimport { OnchainKitContext } from './OnchainKitProvider';\n\nexport function useOnchainKit() {\n  return useContext(OnchainKitContext);\n}\n","import { createContext, useMemo } from 'react';\nimport { ONCHAIN_KIT_CONFIG, setOnchainKitConfig } from './OnchainKitConfig';\nimport { checkHashLength } from './internal/utils/checkHashLength';\nimport type { OnchainKitContextType, OnchainKitProviderReact } from './types';\n\nexport const OnchainKitContext =\n  createContext<OnchainKitContextType>(ONCHAIN_KIT_CONFIG);\n\n/**\n * Provides the OnchainKit React Context to the app.\n */\nexport function OnchainKitProvider({\n  address,\n  apiKey,\n  chain,\n  children,\n  config,\n  projectId,\n  rpcUrl,\n  schemaId,\n}: OnchainKitProviderReact) {\n  if (schemaId && !checkHashLength(schemaId, 64)) {\n    throw Error('EAS schemaId must be 64 characters prefixed with \"0x\"');\n  }\n\n  const value = useMemo(() => {\n    const defaultPaymasterUrl = apiKey\n      ? `https://api.developer.coinbase.com/rpc/v1/${chain.name\n          .replace(' ', '-')\n          .toLowerCase()}/${apiKey}`\n      : null;\n    const onchainKitConfig = {\n      address: address ?? null,\n      apiKey: apiKey ?? null,\n      chain: chain,\n      config: {\n        appearance: {\n          name: config?.appearance?.name,\n          logo: config?.appearance?.logo,\n          mode: config?.appearance?.mode ?? 'auto',\n          theme: config?.appearance?.theme ?? 'default',\n        },\n        paymaster: config?.paymaster || defaultPaymasterUrl,\n      },\n      projectId: projectId ?? null,\n      rpcUrl: rpcUrl ?? null,\n      schemaId: schemaId ?? null,\n    };\n    setOnchainKitConfig(onchainKitConfig);\n    return onchainKitConfig;\n  }, [address, apiKey, chain, config, projectId, rpcUrl, schemaId]);\n\n  return (\n    <OnchainKitContext.Provider value={value}>\n      {children}\n    </OnchainKitContext.Provider>\n  );\n}\n","import { baseSepolia } from 'viem/chains';\nimport type { OnchainKitConfig, SetOnchainKitConfig } from './types';\n\n// The ONCHAIN_KIT_CONFIG is not exported at index.ts,\n// but only acccessed through the get and set functions.\nexport const ONCHAIN_KIT_CONFIG: OnchainKitConfig = {\n  address: null,\n  apiKey: null,\n  chain: baseSepolia,\n  config: {\n    appearance: {\n      name: null,\n      logo: null,\n      mode: null,\n      theme: null,\n    },\n    paymaster: null,\n  },\n  rpcUrl: null,\n  schemaId: null,\n  projectId: null,\n};\n\n/**\n * Access the ONCHAIN_KIT_CONFIG object directly by providing the key.\n * This is powerful when you use OnchainKit utilities outside of the React context.\n */\nexport const getOnchainKitConfig = <K extends keyof typeof ONCHAIN_KIT_CONFIG>(\n  configName: K,\n): (typeof ONCHAIN_KIT_CONFIG)[K] => {\n  return ONCHAIN_KIT_CONFIG[configName];\n};\n\n/**\n * Update the ONCHAIN_KIT_CONFIG object directly by providing the properties to update.\n * This is powerful when you use OnchainKit utilities outside of the React context.\n */\nexport const setOnchainKitConfig = (properties: SetOnchainKitConfig) => {\n  Object.assign(ONCHAIN_KIT_CONFIG, properties);\n  return getOnchainKitConfig;\n};\n","import { Children, useMemo } from 'react';\nimport { defaultAvatarSVG } from '../../internal/svg/defaultAvatarSVG';\nimport { defaultLoadingSVG } from '../../internal/svg/defaultLoadingSVG';\nimport { findComponent } from '../../internal/utils/findComponent';\nimport { cn } from '../../styles/theme';\nimport { useAvatar } from '../hooks/useAvatar';\nimport { useName } from '../hooks/useName';\nimport type { AvatarReact } from '../types';\nimport { Badge } from './Badge';\nimport { DisplayBadge } from './DisplayBadge';\nimport { useIdentityContext } from './IdentityProvider';\n\n/**\n * Represents an Avatar component that displays either a loading indicator,\n * a default avatar, or a custom avatar based on Ethereum Name Service (ENS).\n */\n// biome-ignore lint/complexity/noExcessiveCognitiveComplexity: TODO Refactor this component\nexport function Avatar({\n  address = null,\n  chain,\n  className,\n  defaultComponent,\n  loadingComponent,\n  children,\n  ...props\n}: AvatarReact) {\n  const { address: contextAddress, chain: contextChain } = useIdentityContext();\n\n  const accountAddress = address ?? contextAddress;\n  const accountChain = chain ?? contextChain;\n\n  if (!accountAddress) {\n    console.error(\n      'Avatar: an Ethereum address must be provided to the Identity or Avatar component.',\n    );\n    return null;\n  }\n\n  // The component first attempts to retrieve the ENS name and avatar for the given Ethereum address.\n  const { data: name, isLoading: isLoadingName } = useName({\n    address: accountAddress,\n    chain: accountChain,\n  });\n\n  const { data: avatar, isLoading: isLoadingAvatar } = useAvatar(\n    { ensName: name ?? '', chain: accountChain },\n    { enabled: !!name },\n  );\n\n  const badge = useMemo(() => {\n    return Children.toArray(children).find(findComponent(Badge));\n  }, [children]);\n\n  const defaultAvatar = defaultComponent || defaultAvatarSVG;\n  const loadingAvatar = loadingComponent || defaultLoadingSVG;\n\n  // If the data is still loading, it displays a loading SVG.\n  if (isLoadingName || isLoadingAvatar) {\n    return (\n      <div className={cn('h-8 w-8 overflow-hidden rounded-full', className)}>\n        {loadingAvatar}\n      </div>\n    );\n  }\n\n  const displayAvatarImg = name && avatar;\n\n  // Otherwise, it displays the custom avatar obtained from ENS.\n  return (\n    <div className=\"relative\">\n      <div\n        data-testid=\"ockAvatar_ImageContainer\"\n        className={cn('h-10 w-10 overflow-hidden rounded-full', className)}\n      >\n        {/* biome-ignore lint: alt gets assigned */}\n        {displayAvatarImg ? (\n          <img\n            className=\"min-h-full min-w-full object-cover\"\n            data-testid=\"ockAvatar_Image\"\n            loading=\"lazy\"\n            width=\"100%\"\n            height=\"100%\"\n            decoding=\"async\"\n            src={avatar}\n            alt={name}\n            {...props}\n          />\n        ) : (\n          defaultAvatar\n        )}\n      </div>\n      {badge && (\n        <DisplayBadge address={accountAddress}>\n          <div\n            data-testid=\"ockAvatar_BadgeContainer\"\n            className=\"-bottom-0.5 -right-0.5 absolute flex h-[15px] w-[15px] items-center justify-center rounded-full bg-transparent\"\n          >\n            <div className=\"flex h-3 w-3 items-center justify-center\">\n              {badge}\n            </div>\n          </div>\n        </DisplayBadge>\n      )}\n    </div>\n  );\n}\n","import { icon } from '../../styles/theme';\n\nexport const defaultAvatarSVG = (\n  <svg\n    data-testid=\"ock-defaultAvatarSVG\"\n    role=\"img\"\n    aria-label=\"ock-defaultAvatarSVG\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 40 40\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-full w-full\"\n  >\n    <path\n      d=\"M20 40C8.9543 40 0 31.0457 0 20C0 8.9543 8.9543 0 20 0C31.0457 0 40 8.9543 40 20C40 31.0457 31.0457 40 20 40ZM25.6641 13.9974C25.6641 10.8692 23.1282 8.33333 20.0001 8.33333C16.8719 8.33333 14.336 10.8692 14.336 13.9974C14.336 17.1256 16.8719 19.6615 20.0001 19.6615C23.1282 19.6615 25.6641 17.1256 25.6641 13.9974ZM11.3453 23.362L9.53476 28.1875C12.2141 30.8475 15.9019 32.493 19.974 32.5H20.026C24.0981 32.493 27.7859 30.8475 30.4653 28.1874L28.6547 23.362C28.0052 21.625 26.3589 20.4771 24.5162 20.4318C24.4557 20.4771 22.462 21.9271 20 21.9271C17.538 21.9271 15.5443 20.4771 15.4839 20.4318C13.6412 20.462 11.9948 21.625 11.3453 23.362Z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","export const defaultLoadingSVG = (\n  <svg\n    data-testid=\"ock-defaultLoadingSVG\"\n    role=\"img\"\n    aria-label=\"ock-defaultLoadingSVG\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 100 100\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <circle\n      cx=\"50\"\n      cy=\"50\"\n      r=\"45\"\n      stroke=\"#333\"\n      fill=\"none\"\n      strokeWidth=\"10\"\n      strokeLinecap=\"round\"\n    >\n      <animateTransform\n        attributeName=\"transform\"\n        type=\"rotate\"\n        from=\"0 50 50\"\n        to=\"360 50 50\"\n        dur=\"1s\"\n        repeatCount=\"indefinite\"\n      />\n    </circle>\n  </svg>\n);\n","import { isValidElement } from 'react';\nimport type { ComponentType, ReactElement, ReactNode } from 'react';\n\nexport function findComponent<T>(component: ComponentType<T>) {\n  return (child: ReactNode): child is ReactElement<T> => {\n    return isValidElement(child) && child.type === component;\n  };\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { mainnet } from 'viem/chains';\nimport type {\n  GetAvatarReturnType,\n  UseAvatarOptions,\n  UseQueryOptions,\n} from '../types';\nimport { getAvatar } from '../utils/getAvatar';\n\n/**\n * Gets an ensName and resolves the Avatar\n */\nexport const useAvatar = (\n  { ensName, chain = mainnet }: UseAvatarOptions,\n  queryOptions?: UseQueryOptions,\n) => {\n  const { enabled = true, cacheTime } = queryOptions ?? {};\n  const ensActionKey = `ens-avatar-${ensName}-${chain.id}`;\n  return useQuery<GetAvatarReturnType>({\n    queryKey: ['useAvatar', ensActionKey],\n    queryFn: async () => {\n      return getAvatar({ ensName, chain });\n    },\n    gcTime: cacheTime,\n    enabled,\n    refetchOnWindowFocus: false,\n  });\n};\n","import { mainnet } from 'viem/chains';\nimport { normalize } from 'viem/ens';\nimport { isBase } from '../../isBase';\nimport { isEthereum } from '../../isEthereum';\nimport { getChainPublicClient } from '../../network/getChainPublicClient';\nimport { RESOLVER_ADDRESSES_BY_CHAIN_ID } from '../constants';\nimport type { Basename, GetAvatar, GetAvatarReturnType } from '../types';\nimport { getBaseDefaultProfilePicture } from './getBaseDefaultProfilePicture';\nimport { isBasename } from './isBasename';\n\n/**\n * An asynchronous function to fetch the Ethereum Name Service (ENS)\n * avatar for a given Ethereum name. It returns the ENS name if it exists,\n * or null if it doesn't or in case of an error.\n */\nexport const getAvatar = async ({\n  ensName,\n  chain = mainnet,\n}: GetAvatar): Promise<GetAvatarReturnType> => {\n  const chainIsBase = isBase({ chainId: chain.id });\n  const chainIsEthereum = isEthereum({ chainId: chain.id });\n  const chainSupportsUniversalResolver = chainIsEthereum || chainIsBase;\n  const usernameIsBasename = isBasename(ensName);\n\n  if (!chainSupportsUniversalResolver) {\n    return Promise.reject(\n      'ChainId not supported, avatar resolution is only supported on Ethereum and Base.',\n    );\n  }\n\n  let client = getChainPublicClient(chain);\n  let baseEnsAvatar = null;\n\n  // 1. Try basename\n  if (chainIsBase) {\n    try {\n      baseEnsAvatar = await client.getEnsAvatar({\n        name: normalize(ensName),\n        universalResolverAddress: RESOLVER_ADDRESSES_BY_CHAIN_ID[chain.id],\n      });\n\n      if (baseEnsAvatar) {\n        return baseEnsAvatar;\n      }\n    } catch (_error) {\n      // This is a best effort attempt, so we don't need to do anything here.\n    }\n  }\n\n  // 2. Defaults to mainnet\n  client = getChainPublicClient(mainnet);\n  const mainnetEnsAvatar = await client.getEnsAvatar({\n    name: normalize(ensName),\n  });\n\n  if (mainnetEnsAvatar) {\n    return mainnetEnsAvatar;\n  }\n\n  // 3. If username is a Basename (.base.eth / .basetest.eth), use default Basename avatars\n  if (usernameIsBasename) {\n    return getBaseDefaultProfilePicture(ensName as Basename);\n  }\n\n  // 4. No avatars to display\n  return null;\n};\n","import { base, baseSepolia } from 'viem/chains';\nimport type { isBaseOptions } from './types';\n\n/**\n * isBase\n *  - Checks if the paymaster operations chain id is valid\n *  - Only allows the Base and Base Sepolia chain ids\n */\nexport function isBase({\n  chainId,\n  isMainnetOnly = false,\n}: isBaseOptions): boolean {\n  // If only Base mainnet\n  if (isMainnetOnly && chainId === base.id) {\n    return true;\n  }\n  // If only Base or Base Sepolia\n  if (!isMainnetOnly && (chainId === baseSepolia.id || chainId === base.id)) {\n    return true;\n  }\n  return false;\n}\n","import { mainnet, sepolia } from 'viem/chains';\nimport type { isEthereumOptions } from './types';\n\n/**\n * isEthereum\n *  - Checks if the chain is mainnet or sepolia\n */\nexport function isEthereum({\n  chainId,\n  isMainnetOnly = false,\n}: isEthereumOptions): boolean {\n  // If only ETH mainnet\n  if (isMainnetOnly && chainId === mainnet.id) {\n    return true;\n  }\n  // If only ETH or ETH Sepolia\n  if (!isMainnetOnly && (chainId === sepolia.id || chainId === mainnet.id)) {\n    return true;\n  }\n  return false;\n}\n","import { http, createPublicClient } from 'viem';\nimport type { Chain } from 'viem/chains';\n\nexport function getChainPublicClient(chain: Chain) {\n  return createPublicClient({\n    chain: chain,\n    transport: http(),\n  });\n}\n","import { base, baseSepolia } from 'viem/chains';\nimport type { ResolverAddressesByChainIdMap } from './types';\n\nexport const RESOLVER_ADDRESSES_BY_CHAIN_ID: ResolverAddressesByChainIdMap = {\n  [baseSepolia.id]: '0x6533C94869D28fAA8dF77cc63f9e2b2D6Cf77eBA',\n  [base.id]: '0xC6d566A56A1aFf6508b41f6c90ff131615583BCD',\n};\n\n// Basename default profile pictures\nconst BASE_DEFAULT_PROFILE_PICTURES1 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72801)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2596.93 1721.27C2605.58 1648.75 2610.21 1574.9 2610.21 1500C2610.21 1425.1 2605.58 1351.4 2596.93 1278.73C2770.3 1177.28 2815.96 914.534 2631.1 772.941C2553.96 713.858 2472.05 660.593 2385.96 614.042C2339.26 528.102 2286.14 446.041 2227.06 368.904C2085.47 184.192 1822.72 229.699 1721.27 403.071C1648.75 394.417 1574.9 389.792 1500 389.792C1425.1 389.792 1351.4 394.417 1278.73 403.071C1177.28 229.699 914.534 184.043 772.941 368.904C713.858 446.041 660.593 527.953 614.042 614.042C528.102 660.742 446.041 713.858 368.904 772.941C184.192 914.534 229.699 1177.28 403.071 1278.73C394.417 1351.25 389.792 1425.1 389.792 1500C389.792 1574.9 394.417 1648.6 403.071 1721.27C229.699 1822.72 184.043 2085.47 368.904 2227.06C446.041 2286.14 527.953 2339.41 614.042 2385.96C660.742 2471.9 713.858 2553.96 772.941 2631.1C914.534 2815.81 1177.28 2770.3 1278.73 2596.93C1351.25 2605.58 1425.1 2610.21 1500 2610.21C1574.9 2610.21 1648.6 2605.58 1721.27 2596.93C1822.72 2770.3 2085.47 2815.96 2227.06 2631.1C2286.14 2553.96 2339.41 2472.05 2385.96 2385.96C2471.9 2339.26 2553.96 2286.14 2631.1 2227.06C2815.81 2085.47 2770.3 1822.72 2596.93 1721.27Z\" fill=\"white\"/><path d=\"M1391.06 1500C1391.06 1647.89 1358.4 1781.62 1305.74 1878.28C1253.03 1975.05 1180.69 2034 1101.53 2034C1022.36 2034 950.031 1975.05 897.314 1878.28C844.66 1781.62 812 1647.89 812 1500C812 1352.11 844.66 1218.38 897.314 1121.72C950.031 1024.95 1022.36 966 1101.53 966C1180.69 966 1253.03 1024.95 1305.74 1121.72C1358.4 1218.38 1391.06 1352.11 1391.06 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1102.57\" cy=\"1194.93\" rx=\"126.414\" ry=\"231.934\" fill=\"white\"/><path d=\"M2187.16 1500C2187.16 1647.89 2154.5 1781.62 2101.84 1878.28C2049.13 1975.05 1976.79 2034 1897.63 2034C1818.46 2034 1746.13 1975.05 1693.41 1878.28C1640.76 1781.62 1608.1 1647.89 1608.1 1500C1608.1 1352.11 1640.76 1218.38 1693.41 1121.72C1746.13 1024.95 1818.46 966 1897.63 966C1976.79 966 2049.13 1024.95 2101.84 1121.72C2154.5 1218.38 2187.16 1352.11 2187.16 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1896.58\" cy=\"1194.93\" rx=\"126.414\" ry=\"231.934\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72801\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES2 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72809)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2188.12 1131.95C2691.11 591.187 2356.8 256.94 1815.91 759.826C1767.57 804.826 1737.56 866.494 1733.32 932.403C1733.32 933.767 1733.17 934.979 1733.02 936.343C1722.56 1094.68 1853.35 1225.44 2011.72 1214.98C2013.08 1214.98 2014.29 1214.83 2015.66 1214.68C2081.58 1210.44 2143.26 1180.44 2188.27 1132.1L2188.12 1131.95Z\" fill=\"white\"/><path d=\"M759.879 1816.05C256.885 2356.81 591.204 2691.06 1132.08 2188.17C1180.43 2143.17 1210.44 2081.51 1214.68 2015.6C1214.68 2014.23 1214.83 2013.02 1214.98 2011.66C1225.44 1853.32 1094.65 1722.56 936.283 1733.02C934.919 1733.02 933.706 1733.17 932.342 1733.32C866.418 1737.56 804.738 1767.56 759.727 1815.9L759.879 1816.05Z\" fill=\"white\"/><path d=\"M1131.96 759.922C591.247 256.826 256.881 591.264 759.869 1132.09C804.865 1180.43 866.527 1210.44 932.431 1214.68C933.794 1214.68 935.006 1214.83 936.37 1214.98C1094.69 1225.44 1225.44 1094.66 1214.98 936.309C1214.98 934.946 1214.83 933.733 1214.68 932.369C1210.44 866.452 1180.44 804.777 1132.11 759.771L1131.96 759.922Z\" fill=\"white\"/><path d=\"M1816.05 2188.12C2356.81 2691.11 2691.06 2356.8 2188.17 1815.91C2143.17 1767.57 2081.51 1737.56 2015.6 1733.32C2014.23 1733.32 2013.02 1733.17 2011.66 1733.02C1853.32 1722.56 1722.56 1853.35 1733.02 2011.72C1733.02 2013.08 1733.17 2014.29 1733.32 2015.66C1737.56 2081.58 1767.56 2143.26 1815.9 2188.27L1816.05 2188.12Z\" fill=\"white\"/><path d=\"M1737.18 727.02C1710.36 -10.3398 1237.66 -10.3398 1210.84 727.02C1208.42 792.869 1230.84 857.658 1274.48 907.31C1275.39 908.37 1276.14 909.278 1277.05 910.338C1381.59 1029.62 1566.43 1029.62 1670.97 910.338C1671.88 909.278 1672.63 908.37 1673.54 907.31C1717.18 857.81 1739.45 793.02 1737.18 727.02Z\" fill=\"white\"/><path d=\"M727.02 1210.82C-10.3398 1237.64 -10.3398 1710.34 727.02 1737.16C792.869 1739.58 857.658 1717.16 907.31 1673.52C908.218 1672.62 909.278 1671.86 910.338 1670.95C1029.62 1566.41 1029.62 1381.57 910.338 1277.03C909.278 1276.12 908.37 1275.37 907.31 1274.46C857.81 1230.82 793.02 1208.55 727.02 1210.82Z\" fill=\"white\"/><path d=\"M2040.69 1274.48C2039.63 1275.39 2038.72 1276.14 2037.66 1277.05C1918.38 1381.59 1918.38 1566.43 2037.66 1670.97C2038.72 1671.88 2039.63 1672.63 2040.69 1673.54C2090.19 1717.18 2154.98 1739.45 2220.98 1737.18C2958.34 1710.36 2958.34 1237.66 2220.98 1210.84C2155.13 1208.42 2090.34 1230.84 2040.69 1274.48Z\" fill=\"white\"/><path d=\"M1210.82 2220.98C1237.64 2958.34 1710.34 2958.34 1737.16 2220.98C1739.58 2155.13 1717.16 2090.34 1673.52 2040.69C1672.62 2039.63 1671.86 2038.72 1670.95 2037.66C1566.41 1918.38 1381.57 1918.38 1277.03 2037.66C1276.12 2038.72 1275.37 2039.63 1274.46 2040.69C1230.82 2090.19 1208.55 2154.98 1210.82 2220.98Z\" fill=\"white\"/><circle cx=\"1474.5\" cy=\"1474.5\" r=\"886.5\" fill=\"white\"/><path d=\"M1391.06 1500C1391.06 1352.11 1358.4 1218.38 1305.74 1121.72C1253.03 1024.95 1180.69 966 1101.53 966C1022.36 966 950.031 1024.95 897.314 1121.72C844.66 1218.38 812 1352.11 812 1500C812 1647.89 844.66 1781.62 897.314 1878.28C950.031 1975.05 1022.36 2034 1101.53 2034C1180.69 2034 1253.03 1975.05 1305.74 1878.28C1358.4 1781.62 1391.06 1647.89 1391.06 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"126.414\" cy=\"231.934\" rx=\"126.414\" ry=\"231.934\" transform=\"matrix(1 0 0 -1 976.16 2037)\" fill=\"white\"/><path d=\"M2187.16 1500C2187.16 1352.11 2154.5 1218.38 2101.84 1121.72C2049.12 1024.95 1976.79 966 1897.63 966C1818.46 966 1746.13 1024.95 1693.41 1121.72C1640.76 1218.38 1608.1 1352.11 1608.1 1500C1608.1 1647.89 1640.76 1781.62 1693.41 1878.28C1746.13 1975.05 1818.46 2034 1897.63 2034C1976.79 2034 2049.12 1975.05 2101.84 1878.28C2154.5 1781.62 2187.16 1647.89 2187.16 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"126.414\" cy=\"231.934\" rx=\"126.414\" ry=\"231.934\" transform=\"matrix(1 0 0 -1 1770.17 2037)\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72809\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES3 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72826)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M587.596 2230.75C839.799 2148.27 1126.41 2048.74 1282.85 1934.35C1406.13 1849.79 1458.98 1757.13 1483.16 1651.34C1488.13 1629.73 1511.93 1629.73 1516.8 1651.34C1540.98 1757.01 1593.83 1849.67 1717.11 1934.35C1873.55 2048.74 2160.26 2148.28 2412.36 2230.75C2681.77 2308.44 2735.86 2334.34 2656.73 2207.31C2588.97 2088.63 2388.28 1817.51 2407.39 1489.82C2407.39 1489.21 2407.39 1488.59 2407.39 1487.86C2397.17 1162.25 2598.34 899.36 2662.18 786.079C2737.77 664.821 2675.65 693.54 2406.72 771.597C2154.43 854.195 1870.3 953.362 1715.2 1067.5C1593.25 1151.7 1540.79 1203.99 1516.8 1309.05C1511.83 1330.65 1488.03 1330.65 1483.16 1309.05C1459.17 1203.87 1406.71 1151.7 1284.76 1067.5C1129.66 953.362 845.533 854.195 593.234 771.597C324.307 693.54 262.284 664.821 337.782 786.079C401.621 899.36 602.791 1162.37 592.47 1488.1C592.47 1488.72 592.47 1489.33 592.47 1490.07C611.583 1817.76 410.891 2088.87 343.134 2207.55C264.004 2334.46 318.095 2308.68 587.5 2231L587.596 2230.75Z\" fill=\"white\"/><path d=\"M769.249 587.596C851.725 839.799 951.26 1126.41 1065.65 1282.85C1150.21 1406.13 1242.87 1458.98 1348.66 1483.16C1370.26 1488.13 1370.26 1511.93 1348.66 1516.8C1242.99 1540.98 1150.33 1593.83 1065.65 1717.11C951.26 1873.55 851.725 2160.26 769.249 2412.36C691.56 2681.77 665.664 2735.86 792.691 2656.73C911.372 2588.97 1182.49 2388.28 1510.18 2407.39C1510.79 2407.39 1511.41 2407.39 1512.14 2407.39C1837.75 2397.17 2100.64 2598.34 2213.92 2662.18C2335.18 2737.77 2306.46 2675.65 2228.4 2406.72C2145.8 2154.43 2046.64 1870.3 1932.5 1715.2C1848.3 1593.25 1796.01 1540.79 1690.95 1516.8C1669.35 1511.83 1669.35 1488.03 1690.95 1483.16C1796.13 1459.17 1848.3 1406.71 1932.5 1284.76C2046.64 1129.66 2145.8 845.533 2228.4 593.234C2306.46 324.307 2335.18 262.284 2213.92 337.782C2100.64 401.621 1837.63 602.791 1511.9 592.47C1511.28 592.47 1510.67 592.47 1509.93 592.47C1182.24 611.583 911.127 410.891 792.446 343.134C665.541 264.004 691.315 318.095 769.004 587.5L769.249 587.596Z\" fill=\"white\"/><path d=\"M1391.06 1500C1391.06 1352.11 1358.4 1218.38 1305.74 1121.72C1253.03 1024.95 1180.69 966 1101.53 966C1022.36 966 950.031 1024.95 897.314 1121.72C844.66 1218.38 812 1352.11 812 1500C812 1647.89 844.66 1781.62 897.314 1878.28C950.031 1975.05 1022.36 2034 1101.53 2034C1180.69 2034 1253.03 1975.05 1305.74 1878.28C1358.4 1781.62 1391.06 1647.89 1391.06 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"126.414\" cy=\"231.934\" rx=\"126.414\" ry=\"231.934\" transform=\"matrix(1 0 0 -1 976.159 2037)\" fill=\"white\"/><path d=\"M2187.16 1500C2187.16 1352.11 2154.5 1218.38 2101.84 1121.72C2049.12 1024.95 1976.79 966 1897.63 966C1818.46 966 1746.13 1024.95 1693.41 1121.72C1640.76 1218.38 1608.1 1352.11 1608.1 1500C1608.1 1647.89 1640.76 1781.62 1693.41 1878.28C1746.13 1975.05 1818.46 2034 1897.63 2034C1976.79 2034 2049.12 1975.05 2101.84 1878.28C2154.5 1781.62 2187.16 1647.89 2187.16 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"126.414\" cy=\"231.934\" rx=\"126.414\" ry=\"231.934\" transform=\"matrix(1 0 0 -1 1770.17 2037)\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72826\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES4 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72835)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2713.13 1500C2731.2 1680.92 2615.13 1818.15 2507.78 1924.42C2394.7 2032.13 2290.44 2108.88 2200.88 2200.61C2109.15 2290.16 2032.22 2394.61 1924.51 2507.68C1818.15 2615.04 1680.92 2731.11 1500 2713.13C1319.08 2731.2 1181.85 2615.13 1075.58 2507.78C967.866 2394.7 891.12 2290.44 799.389 2200.88C709.837 2109.15 605.39 2032.22 492.315 1924.51C384.962 1818.15 268.89 1680.92 286.873 1500C268.799 1319.08 384.871 1181.85 492.224 1075.58C605.299 967.866 709.564 891.12 799.116 799.389C890.848 709.837 967.775 605.39 1075.49 492.315C1181.85 384.871 1319.08 268.799 1500 286.873C1680.92 268.799 1818.15 384.871 1924.42 492.224C2032.13 605.299 2108.88 709.564 2200.61 799.116C2290.16 890.848 2394.61 967.775 2507.68 1075.49C2615.04 1181.85 2731.11 1319.08 2713.13 1500Z\" fill=\"white\"/><path d=\"M1391.06 1500C1391.06 1647.89 1358.4 1781.62 1305.74 1878.28C1253.03 1975.05 1180.69 2034 1101.53 2034C1022.36 2034 950.031 1975.05 897.314 1878.28C844.66 1781.62 812 1647.89 812 1500C812 1352.11 844.66 1218.38 897.314 1121.72C950.031 1024.95 1022.36 966 1101.53 966C1180.69 966 1253.03 1024.95 1305.74 1121.72C1358.4 1218.38 1391.06 1352.11 1391.06 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1102.57\" cy=\"1194.93\" rx=\"126.414\" ry=\"231.934\" fill=\"white\"/><path d=\"M2187.16 1500C2187.16 1647.89 2154.5 1781.62 2101.84 1878.28C2049.12 1975.05 1976.79 2034 1897.63 2034C1818.46 2034 1746.13 1975.05 1693.41 1878.28C1640.76 1781.62 1608.1 1647.89 1608.1 1500C1608.1 1352.11 1640.76 1218.38 1693.41 1121.72C1746.13 1024.95 1818.46 966 1897.63 966C1976.79 966 2049.12 1024.95 2101.84 1121.72C2154.5 1218.38 2187.16 1352.11 2187.16 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1896.58\" cy=\"1194.93\" rx=\"126.414\" ry=\"231.934\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72835\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES5 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72843)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2321.64 1500C3048.65 1727.51 2902.59 1900.1 2182.54 1787.44C2625.43 2169.27 2494.23 2265.93 1974.71 1974.53C2266.19 2493.97 2169.44 2625.34 1787.53 2182.54C1900.19 2902.68 1727.6 3048.65 1500 2321.64C1272.49 3048.65 1099.9 2902.59 1212.56 2182.54C830.733 2625.43 734.069 2494.23 1025.47 1974.71C506.03 2266.19 374.655 2169.44 817.464 1787.53C97.3173 1900.19 -48.6455 1727.6 678.356 1500C-48.6455 1272.49 97.4051 1099.9 817.464 1212.56C374.567 830.733 505.767 734.069 1025.29 1025.47C733.806 506.03 830.558 374.655 1212.47 817.464C1099.81 97.3173 1272.4 -48.6455 1500 678.356C1727.51 -48.6455 1900.1 97.4051 1787.44 817.464C2169.27 374.567 2265.93 505.767 1974.53 1025.29C2493.97 733.806 2625.34 830.558 2182.54 1212.47C2902.68 1099.81 3048.65 1272.4 2321.64 1500Z\" fill=\"white\"/><path d=\"M1402.29 1500.15C1402.29 1632.88 1372.98 1752.91 1325.73 1839.64C1278.42 1926.48 1213.56 1979.29 1142.65 1979.29C1071.73 1979.29 1006.87 1926.48 959.562 1839.64C912.315 1752.91 883 1632.88 883 1500.15C883 1367.41 912.315 1247.38 959.562 1160.65C1006.87 1073.81 1071.73 1021 1142.65 1021C1213.56 1021 1278.42 1073.81 1325.73 1160.65C1372.98 1247.38 1402.29 1367.41 1402.29 1500.15Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"998.466\" cy=\"1500.14\" rx=\"113.501\" ry=\"208.242\" fill=\"white\"/><path d=\"M2117.07 1500.15C2117.07 1632.88 2087.76 1752.91 2040.51 1839.64C1993.2 1926.48 1928.34 1979.29 1857.42 1979.29C1786.51 1979.29 1721.65 1926.48 1674.34 1839.64C1627.09 1752.91 1597.78 1632.88 1597.78 1500.15C1597.78 1367.41 1627.09 1247.38 1674.34 1160.65C1721.65 1073.81 1786.51 1021 1857.42 1021C1928.34 1021 1993.2 1073.81 2040.51 1160.65C2087.76 1247.38 2117.07 1367.41 2117.07 1500.15Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1712.74\" cy=\"1498.06\" rx=\"113.501\" ry=\"208.242\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72843\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES6 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72851)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2538.7 1207.34C2483.17 1184.33 2431.23 1159.94 2382.18 1133.9C2398.44 1080.86 2417.87 1026.85 2440.88 971.324C2548.89 711.06 2287.94 450.106 2027.68 558.125C1972.15 581.134 1918.14 600.699 1865.1 616.819C1839.06 567.907 1814.67 515.827 1791.66 460.302C1684.05 199.899 1314.94 199.899 1207.34 460.302C1184.33 515.827 1159.94 567.769 1133.9 616.819C1080.86 600.561 1026.85 581.134 971.324 558.125C711.06 450.106 450.106 711.06 558.125 971.324C581.134 1026.85 600.699 1080.86 616.819 1133.9C567.907 1159.94 515.827 1184.33 460.302 1207.34C199.899 1314.94 199.899 1684.05 460.302 1791.66C515.827 1814.67 567.769 1839.06 616.819 1865.1C600.561 1918.14 581.134 1972.15 558.125 2027.68C450.106 2287.94 711.06 2548.89 971.324 2440.88C1026.85 2417.87 1080.86 2398.3 1133.9 2382.18C1159.94 2431.09 1184.33 2483.17 1207.34 2538.7C1314.94 2799.1 1684.05 2799.1 1791.66 2538.7C1814.67 2483.17 1839.06 2431.23 1865.1 2382.18C1918.14 2398.44 1972.15 2417.87 2027.68 2440.88C2287.94 2548.89 2548.89 2287.94 2440.88 2027.68C2417.87 1972.15 2398.3 1918.14 2382.18 1865.1C2431.09 1839.06 2483.17 1814.67 2538.7 1791.66C2799.1 1684.05 2799.1 1314.94 2538.7 1207.34ZM1735.31 1727.87C1732.83 1730.35 1730.35 1732.83 1727.87 1735.31C1697.42 1766.58 1662.15 1790.01 1624.53 1806.13C1587.47 1820.46 1547.24 1828.17 1504.94 1827.62C1501.36 1827.62 1497.92 1827.62 1494.33 1827.62C1452.04 1828.17 1411.67 1820.32 1374.74 1806.13C1337.13 1790.01 1301.86 1766.58 1271.41 1735.31C1268.93 1732.83 1266.45 1730.35 1263.97 1727.87C1232.69 1697.42 1209.27 1662.15 1193.15 1624.53C1178.82 1587.61 1171.1 1547.24 1171.65 1504.94C1171.65 1501.36 1171.65 1497.92 1171.65 1494.33C1171.1 1452.04 1178.96 1411.67 1193.15 1374.74C1209.27 1337.13 1232.69 1301.86 1263.97 1271.41C1266.45 1268.93 1268.93 1266.45 1271.41 1263.97C1301.86 1232.69 1337.13 1209.27 1374.74 1193.15C1411.67 1178.82 1452.04 1171.1 1494.33 1171.65C1497.92 1171.65 1501.36 1171.65 1504.94 1171.65C1547.24 1171.1 1587.61 1178.96 1624.53 1193.15C1662.15 1209.27 1697.42 1232.69 1727.87 1263.97C1730.35 1266.45 1732.83 1268.93 1735.31 1271.41C1766.58 1301.86 1790.01 1337.13 1806.13 1374.74C1820.46 1411.8 1828.17 1452.04 1827.62 1494.33C1827.62 1497.92 1827.62 1501.36 1827.62 1504.94C1828.17 1547.24 1820.32 1587.61 1806.13 1624.53C1790.01 1662.15 1766.58 1697.42 1735.31 1727.87Z\" fill=\"white\"/><circle cx=\"1476\" cy=\"1442\" r=\"443\" fill=\"white\"/><path d=\"M1400.59 1202.5C1400.59 1334.79 1371.37 1454.31 1324.38 1540.58C1277.28 1627.04 1213.04 1679 1143.3 1679C1073.56 1679 1009.31 1627.04 962.215 1540.58C915.221 1454.31 886 1334.79 886 1202.5C886 1070.21 915.221 950.688 962.215 864.42C1009.31 777.961 1073.56 726 1143.3 726C1213.04 726 1277.28 777.961 1324.38 864.42C1371.37 950.688 1400.59 1070.21 1400.59 1202.5Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"10\"/><ellipse cx=\"1141.26\" cy=\"931.03\" rx=\"113.349\" ry=\"207.963\" fill=\"white\"/><path d=\"M2114.41 1202.5C2114.41 1334.79 2085.19 1454.31 2038.19 1540.58C1991.1 1627.04 1926.85 1679 1857.11 1679C1787.37 1679 1723.13 1627.04 1676.03 1540.58C1629.04 1454.31 1599.82 1334.79 1599.82 1202.5C1599.82 1070.21 1629.04 950.688 1676.03 864.42C1723.13 777.961 1787.37 726 1857.11 726C1926.85 726 1991.1 777.961 2038.19 864.42C2085.19 950.688 2114.41 1070.21 2114.41 1202.5Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"10\"/><ellipse cx=\"1861.96\" cy=\"928.963\" rx=\"113.349\" ry=\"207.963\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72851\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES7 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72860)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M1500.19 1499.87C1365.57 1351.79 1298.1 1205.48 1296.93 988.1C1296.16 779.052 1361.71 498.983 1502.29 274.909C1565.01 170.441 1645.1 119.866 1696.41 125.097C1750.22 129.37 1775.2 189.413 1785.5 284.511C1806.04 473.278 1775.29 803.798 1990.99 1009.07C2196.26 1224.77 2526.78 1194.09 2715.59 1214.68C2810.65 1224.78 2870.69 1249.84 2874.93 1303.61C2880.12 1354.96 2829.55 1435.05 2725.08 1497.77C2501.01 1638.35 2220.94 1703.91 2011.89 1703.13C1794.55 1702 1648.19 1634.49 1500.12 1499.87L1500.19 1499.87Z\" fill=\"white\"/><path d=\"M1499.98 1500.01C1634.61 1648.08 1702.07 1794.4 1703.24 2011.77C1704.02 2220.82 1638.47 2500.89 1497.89 2724.97C1435.16 2829.43 1355.07 2880.01 1303.77 2874.78C1249.96 2870.5 1224.97 2810.46 1214.68 2715.36C1194.13 2526.6 1224.89 2196.08 1009.18 1990.81C803.914 1775.1 473.394 1805.78 284.59 1785.2C189.528 1775.09 129.486 1750.03 125.249 1696.26C120.055 1644.91 170.63 1564.82 275.098 1502.1C499.172 1361.52 779.24 1295.97 988.289 1296.75C1205.63 1297.88 1351.98 1365.38 1500.06 1500.01L1499.98 1500.01Z\" fill=\"white\"/><path d=\"M1481.64 1518.29C1630.16 1383.18 1776.72 1315.24 1994.12 1313.37C2203.19 1311.92 2483.08 1376.57 2706.72 1516.45C2811 1578.84 2861.32 1658.78 2855.93 1710.11C2851.48 1763.93 2791.35 1789.12 2696.21 1799.72C2507.36 1820.87 2176.9 1791.18 1970.91 2007.57C1754.52 2213.55 1784.15 2544.01 1762.95 2732.9C1752.54 2828.01 1727.28 2888.14 1673.49 2892.55C1622.12 2897.91 1542.19 2847.58 1479.79 2743.31C1339.92 2519.66 1275.26 2239.77 1276.71 2030.7C1278.54 1813.33 1346.52 1666.75 1481.64 1518.22L1481.64 1518.29Z\" fill=\"white\"/><path d=\"M1481.81 1518.43C1333.29 1653.54 1186.74 1721.48 969.339 1723.34C760.267 1724.79 480.38 1660.13 256.734 1520.25C152.457 1457.85 102.133 1377.92 107.529 1326.59C111.975 1272.76 172.103 1247.58 267.243 1236.98C456.094 1215.83 786.549 1245.53 992.528 1029.15C1208.91 823.167 1179.28 492.713 1200.47 303.825C1210.92 208.685 1236.11 148.557 1289.93 144.111C1341.3 138.752 1421.23 189.076 1483.63 293.353C1623.51 516.999 1688.17 796.885 1686.72 1005.96C1684.9 1223.32 1616.92 1369.91 1481.81 1518.43Z\" fill=\"white\"/><path d=\"M1403.24 1500C1403.24 1630.77 1374.36 1749 1327.82 1834.44C1281.21 1919.99 1217.33 1972 1147.49 1972C1077.65 1972 1013.76 1919.99 967.153 1834.44C920.611 1749 891.731 1630.77 891.731 1500C891.731 1369.23 920.611 1251 967.153 1165.56C1013.76 1080.01 1077.65 1028 1147.49 1028C1217.33 1028 1281.21 1080.01 1327.82 1165.56C1374.36 1251 1403.24 1369.23 1403.24 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1148.41\" cy=\"1230.16\" rx=\"111.819\" ry=\"205.156\" fill=\"white\"/><path d=\"M2107.42 1500C2107.42 1630.77 2078.55 1749 2032 1834.44C1985.4 1919.99 1921.51 1972 1851.67 1972C1781.83 1972 1717.94 1919.99 1671.34 1834.44C1624.79 1749 1595.92 1630.77 1595.92 1500C1595.92 1369.23 1624.79 1251 1671.34 1165.56C1717.94 1080.01 1781.83 1028 1851.67 1028C1921.51 1028 1985.4 1080.01 2032 1165.56C2078.55 1251 2107.42 1369.23 2107.42 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1850.75\" cy=\"1230.16\" rx=\"111.819\" ry=\"205.156\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72860\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\n\nexport const BASE_DEFAULT_PROFILE_PICTURES = [\n  BASE_DEFAULT_PROFILE_PICTURES1,\n  BASE_DEFAULT_PROFILE_PICTURES2,\n  BASE_DEFAULT_PROFILE_PICTURES3,\n  BASE_DEFAULT_PROFILE_PICTURES4,\n  BASE_DEFAULT_PROFILE_PICTURES5,\n  BASE_DEFAULT_PROFILE_PICTURES6,\n  BASE_DEFAULT_PROFILE_PICTURES7,\n];\n","import { sha256 } from 'viem';\n\n// Will return a an index between 0 and optionsLength\nexport const getBaseDefaultProfilePictureIndex = (\n  name: string,\n  optionsLength: number,\n) => {\n  const nameAsUint8Array = Uint8Array.from(\n    name.split('').map((letter) => letter.charCodeAt(0)),\n  );\n  const hash = sha256(nameAsUint8Array);\n  const hashValue = Number.parseInt(hash, 16);\n  const remainder = hashValue % optionsLength;\n  const index = remainder;\n  return index;\n};\n","import { BASE_DEFAULT_PROFILE_PICTURES } from '../constants';\nimport type { Basename } from '../types';\nimport { getBaseDefaultProfilePictureIndex } from './getBaseDefaultProfilePictureIndex';\n\nexport const getBaseDefaultProfilePicture = (username: Basename) => {\n  const profilePictureIndex = getBaseDefaultProfilePictureIndex(\n    username,\n    BASE_DEFAULT_PROFILE_PICTURES.length,\n  );\n  const selectedProfilePicture =\n    BASE_DEFAULT_PROFILE_PICTURES[profilePictureIndex];\n  const base64Svg = btoa(selectedProfilePicture);\n  const dataUri = `data:image/svg+xml;base64,${base64Svg}`;\n  return dataUri;\n};\n","export const isBasename = (username: string) => {\n  if (username.endsWith('.base.eth')) {\n    return true;\n  }\n  if (username.endsWith('.basetest.eth')) {\n    return true;\n  }\n  return false;\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { mainnet } from 'viem/chains';\nimport type {\n  GetNameReturnType,\n  UseNameOptions,\n  UseQueryOptions,\n} from '../types';\nimport { getName } from '../utils/getName';\n\n/**\n * It leverages the `@tanstack/react-query` hook for fetching and optionally caching the ENS name\n * @returns An object containing:\n *  - `ensName`: The fetched ENS name for the provided address, or null if not found or in case of an error.\n *  - `{UseQueryResult}`: The rest of useQuery return values. including isLoading, isError, error, isFetching, refetch, etc.\n */\nexport const useName = (\n  { address, chain = mainnet }: UseNameOptions,\n  queryOptions?: UseQueryOptions,\n) => {\n  const { enabled = true, cacheTime } = queryOptions ?? {};\n  const ensActionKey = `ens-name-${address}-${chain.id}`;\n  return useQuery<GetNameReturnType>({\n    queryKey: ['useName', ensActionKey],\n    queryFn: async () => {\n      return await getName({ address, chain });\n    },\n    gcTime: cacheTime,\n    enabled,\n    refetchOnWindowFocus: false,\n  });\n};\n","import { base, mainnet } from 'viem/chains';\nimport { isBase } from '../../isBase';\nimport { isEthereum } from '../../isEthereum';\nimport { getChainPublicClient } from '../../network/getChainPublicClient';\nimport L2ResolverAbi from '../abis/L2ResolverAbi';\nimport { RESOLVER_ADDRESSES_BY_CHAIN_ID } from '../constants';\nimport type { Basename, GetName, GetNameReturnType } from '../types';\nimport { convertReverseNodeToBytes } from './convertReverseNodeToBytes';\n\n/**\n * An asynchronous function to fetch the Ethereum Name Service (ENS)\n * name for a given Ethereum address. It returns the ENS name if it exists,\n * or null if it doesn't or in case of an error.\n */\nexport const getName = async ({\n  address,\n  chain = mainnet,\n}: GetName): Promise<GetNameReturnType> => {\n  const chainIsBase = isBase({ chainId: chain.id });\n  const chainIsEthereum = isEthereum({ chainId: chain.id });\n  const chainSupportsUniversalResolver = chainIsEthereum || chainIsBase;\n\n  if (!chainSupportsUniversalResolver) {\n    return Promise.reject(\n      'ChainId not supported, name resolution is only supported on Ethereum and Base.',\n    );\n  }\n\n  let client = getChainPublicClient(chain);\n\n  if (chainIsBase) {\n    const addressReverseNode = convertReverseNodeToBytes(address, base.id);\n    try {\n      const basename = await client.readContract({\n        abi: L2ResolverAbi,\n        address: RESOLVER_ADDRESSES_BY_CHAIN_ID[chain.id],\n        functionName: 'name',\n        args: [addressReverseNode],\n      });\n      if (basename) {\n        return basename as Basename;\n      }\n    } catch (_error) {\n      // This is a best effort attempt, so we don't need to do anything here.\n    }\n  }\n\n  // Default to mainnet\n  client = getChainPublicClient(mainnet);\n  // ENS username\n  const ensName = await client.getEnsName({\n    address,\n  });\n\n  return ensName ?? null;\n};\n","export default [\n  {\n    inputs: [\n      {\n        internalType: 'contract ENS',\n        name: 'ens_',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'registrarController_',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'reverseRegistrar_',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'owner_',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    inputs: [],\n    name: 'AlreadyInitialized',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'CantSetSelfAsDelegate',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'CantSetSelfAsOperator',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'NewOwnerIsZeroAddress',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'NoHandoverRequest',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'Unauthorized',\n    type: 'error',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'contentType',\n        type: 'uint256',\n      },\n    ],\n    name: 'ABIChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'a',\n        type: 'address',\n      },\n    ],\n    name: 'AddrChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'coinType',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'newAddress',\n        type: 'bytes',\n      },\n    ],\n    name: 'AddressChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'ApprovalForAll',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'delegate',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'Approved',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'hash',\n        type: 'bytes',\n      },\n    ],\n    name: 'ContenthashChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'name',\n        type: 'bytes',\n      },\n      {\n        indexed: false,\n        internalType: 'uint16',\n        name: 'resource',\n        type: 'uint16',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'record',\n        type: 'bytes',\n      },\n    ],\n    name: 'DNSRecordChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'name',\n        type: 'bytes',\n      },\n      {\n        indexed: false,\n        internalType: 'uint16',\n        name: 'resource',\n        type: 'uint16',\n      },\n    ],\n    name: 'DNSRecordDeleted',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'lastzonehash',\n        type: 'bytes',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'zonehash',\n        type: 'bytes',\n      },\n    ],\n    name: 'DNSZonehashChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes4',\n        name: 'interfaceID',\n        type: 'bytes4',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'implementer',\n        type: 'address',\n      },\n    ],\n    name: 'InterfaceChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'NameChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'pendingOwner',\n        type: 'address',\n      },\n    ],\n    name: 'OwnershipHandoverCanceled',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'pendingOwner',\n        type: 'address',\n      },\n    ],\n    name: 'OwnershipHandoverRequested',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'oldOwner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'OwnershipTransferred',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes32',\n        name: 'x',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes32',\n        name: 'y',\n        type: 'bytes32',\n      },\n    ],\n    name: 'PubkeyChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newRegistrarController',\n        type: 'address',\n      },\n    ],\n    name: 'RegistrarControllerUpdated',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newReverseRegistrar',\n        type: 'address',\n      },\n    ],\n    name: 'ReverseRegistrarUpdated',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'string',\n        name: 'indexedKey',\n        type: 'string',\n      },\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'key',\n        type: 'string',\n      },\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'value',\n        type: 'string',\n      },\n    ],\n    name: 'TextChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint64',\n        name: 'newVersion',\n        type: 'uint64',\n      },\n    ],\n    name: 'VersionChanged',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: 'contentTypes',\n        type: 'uint256',\n      },\n    ],\n    name: 'ABI',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'addr',\n    outputs: [\n      {\n        internalType: 'address payable',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: 'coinType',\n        type: 'uint256',\n      },\n    ],\n    name: 'addr',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'delegate',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'approve',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'cancelOwnershipHandover',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'clearRecords',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'pendingOwner',\n        type: 'address',\n      },\n    ],\n    name: 'completeOwnershipHandover',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'name',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint16',\n        name: 'resource',\n        type: 'uint16',\n      },\n    ],\n    name: 'dnsRecord',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'ens',\n    outputs: [\n      {\n        internalType: 'contract ENS',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'name',\n        type: 'bytes32',\n      },\n    ],\n    name: 'hasDNSRecords',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes4',\n        name: 'interfaceID',\n        type: 'bytes4',\n      },\n    ],\n    name: 'interfaceImplementer',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'delegate',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedFor',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes[]',\n        name: 'data',\n        type: 'bytes[]',\n      },\n    ],\n    name: 'multicall',\n    outputs: [\n      {\n        internalType: 'bytes[]',\n        name: 'results',\n        type: 'bytes[]',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'nodehash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes[]',\n        name: 'data',\n        type: 'bytes[]',\n      },\n    ],\n    name: 'multicallWithNodeCheck',\n    outputs: [\n      {\n        internalType: 'bytes[]',\n        name: 'results',\n        type: 'bytes[]',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'name',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: 'result',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'pendingOwner',\n        type: 'address',\n      },\n    ],\n    name: 'ownershipHandoverExpiresAt',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'result',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'pubkey',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: 'x',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'y',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    name: 'recordVersions',\n    outputs: [\n      {\n        internalType: 'uint64',\n        name: '',\n        type: 'uint64',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'registrarController',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'requestOwnershipHandover',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'resolve',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'reverseRegistrar',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: 'contentType',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'setABI',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: 'coinType',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: 'a',\n        type: 'bytes',\n      },\n    ],\n    name: 'setAddr',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'a',\n        type: 'address',\n      },\n    ],\n    name: 'setAddr',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: 'hash',\n        type: 'bytes',\n      },\n    ],\n    name: 'setContenthash',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'setDNSRecords',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes4',\n        name: 'interfaceID',\n        type: 'bytes4',\n      },\n      {\n        internalType: 'address',\n        name: 'implementer',\n        type: 'address',\n      },\n    ],\n    name: 'setInterface',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'string',\n        name: 'newName',\n        type: 'string',\n      },\n    ],\n    name: 'setName',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'x',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'y',\n        type: 'bytes32',\n      },\n    ],\n    name: 'setPubkey',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'registrarController_',\n        type: 'address',\n      },\n    ],\n    name: 'setRegistrarController',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'reverseRegistrar_',\n        type: 'address',\n      },\n    ],\n    name: 'setReverseRegistrar',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'string',\n        name: 'key',\n        type: 'string',\n      },\n      {\n        internalType: 'string',\n        name: 'value',\n        type: 'string',\n      },\n    ],\n    name: 'setText',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: 'hash',\n        type: 'bytes',\n      },\n    ],\n    name: 'setZonehash',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes4',\n        name: 'interfaceID',\n        type: 'bytes4',\n      },\n    ],\n    name: 'supportsInterface',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'string',\n        name: 'key',\n        type: 'string',\n      },\n    ],\n    name: 'text',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'zonehash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const;\n","import { encodePacked, keccak256, namehash } from 'viem';\nimport type { Address } from 'viem';\nimport { convertChainIdToCoinType } from './convertChainIdToCoinType';\n\n/**\n * Convert an address to a reverse node for ENS resolution\n */\nexport const convertReverseNodeToBytes = (\n  address: Address,\n  chainId: number,\n) => {\n  const addressFormatted = address.toLocaleLowerCase() as Address;\n  const addressNode = keccak256(addressFormatted.substring(2) as Address);\n  const chainCoinType = convertChainIdToCoinType(chainId);\n  const baseReverseNode = namehash(\n    `${chainCoinType.toLocaleUpperCase()}.reverse`,\n  );\n  const addressReverseNode = keccak256(\n    encodePacked(['bytes32', 'bytes32'], [baseReverseNode, addressNode]),\n  );\n  return addressReverseNode;\n};\n","import { mainnet } from 'viem/chains';\n\n/**\n * Convert an chainId to a coinType hex for reverse chain resolution\n */\nexport const convertChainIdToCoinType = (chainId: number): string => {\n  // L1 resolvers to addr\n  if (chainId === mainnet.id) {\n    return 'addr';\n  }\n\n  const cointype = (0x80000000 | chainId) >>> 0;\n  return cointype.toString(16).toLocaleUpperCase();\n};\n","import { icon } from '../../styles/theme';\n\nexport const badgeSvg = (\n  <svg\n    role=\"img\"\n    aria-label=\"ock-badgeSvg\"\n    width=\"12\"\n    height=\"12\"\n    viewBox=\"0 0 12 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-full w-full\"\n  >\n    <path\n      d=\"M8.12957 3.73002L5.11957 6.74002L3.77957 5.40002C3.49957 5.12002 3.04957 5.12002 2.76957 5.40002C2.48957 5.68002 2.48957 6.13002 2.76957 6.41002L4.10957 7.75002L4.59957 8.24002C4.90957 8.55002 5.41957 8.55002 5.72957 8.24002L9.17957 4.79002C9.45957 4.51002 9.45957 4.06002 9.17957 3.78002L9.12957 3.73002C8.84957 3.45002 8.39957 3.45002 8.11957 3.73002H8.12957Z\"\n      data-testid=\"ock-badgeSvg\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { badgeSvg } from '../../internal/svg/badgeSvg';\nimport { background, cn } from '../../styles/theme';\nimport type { BadgeReact } from '../types';\n\n/**\n * Badge component.\n */\nexport function Badge({ className }: BadgeReact) {\n  // TODO: Implement the Badge component as span and CSS without an SVG element.\n  const badgeSize = '12px';\n  return (\n    <span\n      className={cn(\n        background.primary,\n        'rounded-full border border-transparent',\n        className,\n      )}\n      data-testid=\"ockBadge\"\n      style={{\n        height: badgeSize,\n        width: badgeSize,\n        maxHeight: badgeSize,\n        maxWidth: badgeSize,\n      }}\n    >\n      {badgeSvg}\n    </span>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport type { Attestation, UseAttestations } from '../types';\nimport { getAttestations } from '../utils/getAttestations';\n\n/**\n * Fetches EAS Attestations for a given address, chain, and schemaId.\n */\nexport function useAttestations({\n  address,\n  chain,\n  schemaId,\n}: UseAttestations): Attestation[] {\n  if (!schemaId) {\n    return [];\n  }\n  const [attestations, setAttestations] = useState<Attestation[]>([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const foundAttestations = await getAttestations(address, chain, {\n        schemas: [schemaId],\n      });\n      setAttestations(foundAttestations);\n    };\n    fetchData();\n  }, [address, chain, schemaId]);\n\n  return attestations;\n}\n","import { gql } from 'graphql-request';\nimport { getAddress } from 'viem';\nimport type { Address, Chain } from 'viem';\nimport type { Attestation, EASSchemaUid } from '../identity/types';\nimport { createEasGraphQLClient } from './createEasGraphQLClient';\n\n/**\n * Type representing the filter options used for querying EAS Attestations.\n * @typedef {Object} GetAttestationQueryVariablesFilters\n * @property {number} [expirationTime] - Optional Unix timestamp to filter attestations based on expiration time.\n * @property {number} [limit] - Optional limit for the number of results returned.\n * @property {boolean} [revoked] - Optional boolean to filter attestations based on their revoked status.\n * @property {EASSchemaUid[]} [schemas] - Optional array of schema UIDs to filter attestations.\n */\ntype GetAttestationQueryVariablesFilters = {\n  expirationTime?: number;\n  limit: number;\n  revoked: boolean;\n  schemas?: EASSchemaUid[];\n};\n\n/**\n * Alias type for filter options when fetching attestations by filter.\n */\nexport type GetAttestationsByFilterOptions =\n  GetAttestationQueryVariablesFilters;\n\n/**\n * Type representing the variables passed to the EAS Attestations GraphQL query.\n * @typedef {Object} AttestationsQueryVariables\n * @property {string[]} distinct - Fields for which to get distinct records.\n * @property {number} take - Number of records to retrieve.\n * @property {Record<string, any>} where - Conditions for filtering the attestations.\n */\nexport type AttestationsQueryVariables = {\n  distinct: string[];\n  take: number;\n  /* biome-ignore lint: code needs to be deprecated */\n  where: Record<string, any>;\n};\n\n/**\n * Type representing the response of the EAS Attestation GraphQL query.\n * @typedef {Object} GetAttestationQueryResponse\n * @property {Attestation[]} attestations - Array of attestation objects.\n */\nexport type GetAttestationQueryResponse = {\n  attestations: Attestation[];\n};\n\n/**\n * Type representing the response when fetching attestations by filter.\n */\nexport type GetAttestationsByFilterResponse = Attestation[];\n\n/**\n * GraphQL query definition for fetching EAS Attestations for users.\n */\nexport const attestationQuery = gql`\n  query AttestationsForUsers(\n    $where: AttestationWhereInput\n    $distinct: [AttestationScalarFieldEnum!]\n    $take: Int\n  ) {\n    attestations(where: $where, distinct: $distinct, take: $take) {\n      id\n      txid\n      schemaId\n      attester\n      recipient\n      revoked\n      revocationTime\n      expirationTime\n      time\n      timeCreated\n      decodedDataJson\n    }\n  }\n`;\n\n/**\n * Generates query variables for the EAS Attestation GraphQL query based on the given address and filters.\n *\n * @param {Address} address - The Ethereum address of the recipient.\n * @param {GetAttestationQueryVariablesFilters} filters - Filters to apply to the query.\n * @returns {AttestationsQueryVariables} The query variables for the GraphQL query.\n */\nexport function getAttestationQueryVariables(\n  address: Address,\n  filters: GetAttestationQueryVariablesFilters,\n): AttestationsQueryVariables {\n  const checksummedAddress = getAddress(address);\n  /* biome-ignore lint: code needs to be deprecated */\n  const conditions: Record<string, any> = {\n    recipient: { equals: checksummedAddress },\n    revoked: { equals: filters.revoked },\n  };\n\n  if (typeof filters.expirationTime === 'number') {\n    conditions.OR = [\n      { expirationTime: { equals: 0 } },\n      { expirationTime: { gt: filters.expirationTime } },\n    ];\n  }\n\n  if (filters?.schemas && filters.schemas.length > 0) {\n    conditions.schemaId = { in: filters.schemas };\n  }\n\n  return {\n    where: { AND: [conditions] },\n    distinct: ['schemaId'],\n    take: filters.limit,\n  };\n}\n\n/**\n * Fetches Ethereum Attestation Service (EAS) attestations for a given address and chain,\n * optionally filtered by the provided filter options.\n *\n * @param {Address} address - The Ethereum address for which attestations are being queried.\n * @param {Chain} chain - The blockchain chain of interest.\n * @param {GetAttestationsByFilterOptions} filters - Filter options for querying attestations.\n * @returns {Promise<GetAttestationsByFilterResponse>} A promise that resolves to an array of EAS Attestations.\n */\nexport async function getAttestationsByFilter<TChain extends Chain>(\n  address: Address,\n  chain: TChain,\n  filters: GetAttestationsByFilterOptions,\n): Promise<GetAttestationsByFilterResponse> {\n  const easGraphqlClient = createEasGraphQLClient(chain);\n  const attestationQueryVariables = getAttestationQueryVariables(\n    address,\n    filters,\n  );\n\n  const { attestations } = await easGraphqlClient.request<\n    GetAttestationQueryResponse,\n    AttestationsQueryVariables\n  >(attestationQuery, attestationQueryVariables);\n\n  return attestations;\n}\n","import { GraphQLClient } from 'graphql-request';\nimport type { Chain } from 'viem';\nimport { getChainEASGraphQLAPI } from '../identity/utils/easSupportedChains';\n\nexport function createEasGraphQLClient(chain: Chain): GraphQLClient {\n  const endpoint = getChainEASGraphQLAPI(chain);\n  return new GraphQLClient(endpoint);\n}\n","import { base } from 'viem/chains';\nimport type { EASChainDefinition } from '../../identity/types';\n\nexport const easChainBase: EASChainDefinition = {\n  id: base.id,\n  easGraphqlAPI: 'https://base.easscan.org/graphql',\n  schemaUids: [\n    // VERIFIED_COUNTRY\n    // https://base.easscan.org/schema/view/0x1801901fabd0e6189356b4fb52bb0ab855276d84f7ec140839fbd1f6801ca065\n    '0x1801901fabd0e6189356b4fb52bb0ab855276d84f7ec140839fbd1f6801ca065',\n    // VERIFIED_ACCOUNT\n    // https://base.easscan.org/schema/view/0xf8b05c79f090979bf4a80270aba232dff11a10d9ca55c4f88de95317970f0de9\n    '0xf8b05c79f090979bf4a80270aba232dff11a10d9ca55c4f88de95317970f0de9',\n  ],\n};\n","import { baseSepolia } from 'viem/chains';\nimport type { EASChainDefinition } from '../../identity/types';\n\nexport const easChainBaseSepolia: EASChainDefinition = {\n  id: baseSepolia.id,\n  easGraphqlAPI: 'https://base-sepolia.easscan.org/graphql',\n  schemaUids: [\n    // VERIFIED_COUNTRY\n    // https://base-sepolia.easscan.org/schema/view/0xef54ae90f47a187acc050ce631c55584fd4273c0ca9456ab21750921c3a84028\n    '0xef54ae90f47a187acc050ce631c55584fd4273c0ca9456ab21750921c3a84028',\n    // VERIFIED_ACCOUNT\n    // https://base-sepolia.easscan.org/schema/view/0x2f34a2ffe5f87b2f45fbc7c784896b768d77261e2f24f77341ae43751c765a69\n    '0x2f34a2ffe5f87b2f45fbc7c784896b768d77261e2f24f77341ae43751c765a69',\n  ],\n};\n","import { optimism } from 'viem/chains';\nimport type { EASChainDefinition } from '../../identity/types';\n\n// More details in https://docs.optimism.io/chain/identity/schemas\nexport const easChainOptimism: EASChainDefinition = {\n  id: optimism.id,\n  easGraphqlAPI: 'https://optimism.easscan.org/graphql',\n  schemaUids: [\n    // N_A\n    // https://optimism.easscan.org/schema/view/0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929\n    '0xac4c92fc5c7babed88f78a917cdbcdc1c496a8f4ab2d5b2ec29402736b2cf929',\n    // GITCOIN_PASSPORT_SCORES_V1:\n    // https://optimism.easscan.org/schema/view/0x6ab5d34260fca0cfcf0e76e96d439cace6aa7c3c019d7c4580ed52c6845e9c89\n    '0x6ab5d34260fca0cfcf0e76e96d439cace6aa7c3c019d7c4580ed52c6845e9c89',\n    // OPTIMISM_GOVERNANCE_SEASON_4_CO_GRANT_PARTICIPANT:\n    // https://optimism.easscan.org/schema/view/0x401a80196f3805c57b00482ae2b575a9f270562b6b6de7711af9837f08fa0faf\n    '0x401a80196f3805c57b00482ae2b575a9f270562b6b6de7711af9837f08fa0faf',\n  ],\n};\n","import type { Chain } from 'viem';\nimport { easChainBase } from '../../network/definitions/base';\nimport { easChainBaseSepolia } from '../../network/definitions/baseSepolia';\nimport { easChainOptimism } from '../../network/definitions/optimism';\nimport type { EASChainDefinition } from '../types';\n\nexport type EASSupportedChains = Record<number, EASChainDefinition>;\n\nexport const easSupportedChains: EASSupportedChains = {\n  [easChainBase.id]: easChainBase,\n  [easChainBaseSepolia.id]: easChainBaseSepolia,\n  [easChainOptimism.id]: easChainOptimism,\n};\n\n/**\n * Checks if a given blockchain chain is supported by EAS attestations.\n */\nexport function isChainSupported(chain: Chain): boolean {\n  return chain.id in easSupportedChains;\n}\n\n/**\n * Function to get the EAS GraphQL API endpoint for a given blockchain.\n */\nexport function getChainEASGraphQLAPI(chain: Chain): string {\n  return easSupportedChains[chain.id]?.easGraphqlAPI ?? '';\n}\n","import type { Address, Chain } from 'viem';\nimport { getAttestationsByFilter } from '../../network/attestations';\nimport type { Attestation, GetAttestationsOptions } from '../types';\nimport { isChainSupported } from './easSupportedChains';\n\n/**\n * Fetches Ethereum Attestation Service (EAS) attestations for a given address and chain,\n * optionally filtered by schemas associated with the attestation.\n */\nexport async function getAttestations(\n  address: Address,\n  chain: Chain,\n  options?: GetAttestationsOptions,\n): Promise<Attestation[]> {\n  if (!isChainSupported(chain)) {\n    console.log('Error in getAttestation: Chain is not supported');\n    return [];\n  }\n  try {\n    // Default query filter values\n    const defaultQueryVariablesFilter = {\n      revoked: false,\n      expirationTime: Math.round(Date.now() / 1000),\n      limit: 10,\n    };\n    const queryVariablesFilter = { ...defaultQueryVariablesFilter, ...options };\n    return await getAttestationsByFilter(address, chain, queryVariablesFilter);\n  } catch (error) {\n    console.log(`Error in getAttestation: ${(error as Error).message}`);\n    return [];\n  }\n}\n","import type { ReactNode } from 'react';\nimport type { Address } from 'viem';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport { useAttestations } from '../hooks/useAttestations';\nimport { useIdentityContext } from './IdentityProvider';\n\ntype DisplayBadgeReact = {\n  children: ReactNode;\n  address?: Address;\n};\n\nexport function DisplayBadge({ children, address }: DisplayBadgeReact) {\n  const { chain, schemaId } = useOnchainKit();\n  const { schemaId: contextSchemaId, address: contextAddress } =\n    useIdentityContext();\n  if (!contextSchemaId && !schemaId) {\n    throw new Error(\n      'Name: a SchemaId must be provided to the OnchainKitProvider or Identity component.',\n    );\n  }\n  const attestations = useAttestations({\n    address: address ?? contextAddress,\n    chain: chain,\n    schemaId: contextSchemaId ?? schemaId,\n  });\n\n  if (attestations.length === 0) {\n    return null;\n  }\n\n  return children;\n}\n","export function getRoundedAmount(balance: string, fractionDigits: number) {\n  if (balance === '0') {\n    return balance;\n  }\n  const parsedBalance = Number.parseFloat(balance);\n  const result = Number(parsedBalance)\n    ?.toFixed(fractionDigits)\n    .replace(/0+$/, '');\n\n  // checking if balance is more than 0 but less than fractionDigits\n  // without this prints \"0.\"\n  if (parsedBalance > 0 && Number.parseFloat(result) === 0) {\n    return '0';\n  }\n\n  return result;\n}\n","import { useMemo } from 'react';\nimport { formatUnits } from 'viem';\nimport type { Address } from 'viem';\nimport { useBalance } from 'wagmi';\nimport type { UseBalanceReturnType } from 'wagmi';\nimport { getRoundedAmount } from '../../internal/utils/getRoundedAmount';\nimport type { SwapError } from '../../swap';\nimport { getSwapErrorCode } from '../../swap/utils/getSwapErrorCode';\nimport type { UseGetETHBalanceResponse } from '../types';\n\nconst ETH_DECIMALS = 18;\n\nexport function useGetETHBalance(address?: Address): UseGetETHBalanceResponse {\n  const ethBalanceResponse: UseBalanceReturnType = useBalance({ address });\n\n  return useMemo(() => {\n    let error: SwapError | undefined;\n    if (ethBalanceResponse?.error) {\n      error = {\n        code: getSwapErrorCode('balance'),\n        error: ethBalanceResponse?.error?.message,\n        message: '',\n      };\n    }\n    if (\n      !ethBalanceResponse?.data?.value &&\n      ethBalanceResponse?.data?.value !== 0n\n    ) {\n      return {\n        convertedBalance: '',\n        error,\n        response: ethBalanceResponse,\n        roundedBalance: '',\n      };\n    }\n    const convertedBalance = formatUnits(\n      ethBalanceResponse?.data?.value,\n      ETH_DECIMALS,\n    );\n    const roundedBalance = getRoundedAmount(convertedBalance, 8);\n    return {\n      convertedBalance,\n      error,\n      response: ethBalanceResponse,\n      roundedBalance,\n    };\n  }, [ethBalanceResponse]);\n}\n","export const FALLBACK_DEFAULT_MAX_SLIPPAGE = 3;\nexport const GENERAL_SWAP_ERROR_CODE = 'SWAP_ERROR';\nexport const GENERAL_SWAP_QUOTE_ERROR_CODE = 'SWAP_QUOTE_ERROR';\nexport const GENERAL_SWAP_BALANCE_ERROR_CODE = 'SWAP_BALANCE_ERROR';\nexport const LOW_LIQUIDITY_ERROR_CODE = 'SWAP_QUOTE_LOW_LIQUIDITY_ERROR';\nexport const PERMIT2_CONTRACT_ADDRESS =\n  '0x000000000022D473030F116dDEE9F6B43aC78BA3';\nexport const TOO_MANY_REQUESTS_ERROR_CODE = 'TOO_MANY_REQUESTS_ERROR';\nexport const UNCAUGHT_SWAP_QUOTE_ERROR_CODE = 'UNCAUGHT_SWAP_QUOTE_ERROR';\nexport const UNCAUGHT_SWAP_ERROR_CODE = 'UNCAUGHT_SWAP_ERROR';\nexport const UNIVERSALROUTER_CONTRACT_ADDRESS =\n  '0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD';\nexport const USER_REJECTED_ERROR_CODE = 'USER_REJECTED';\nexport enum SwapMessage {\n  BALANCE_ERROR = 'Error fetching token balance',\n  CONFIRM_IN_WALLET = 'Confirm in wallet',\n  FETCHING_QUOTE = 'Fetching quote...',\n  FETCHING_BALANCE = 'Fetching balance...',\n  INCOMPLETE_FIELD = 'Complete the fields to continue',\n  INSUFFICIENT_BALANCE = 'Insufficient balance',\n  LOW_LIQUIDITY = 'Insufficient liquidity for this trade.',\n  SWAP_IN_PROGRESS = 'Swap in progress...',\n  TOO_MANY_REQUESTS = 'Too many requests. Please try again later.',\n  USER_REJECTED = 'User rejected the transaction',\n}\n","import {\n  GENERAL_SWAP_BALANCE_ERROR_CODE,\n  GENERAL_SWAP_ERROR_CODE,\n  GENERAL_SWAP_QUOTE_ERROR_CODE,\n  LOW_LIQUIDITY_ERROR_CODE,\n  TOO_MANY_REQUESTS_ERROR_CODE,\n  UNCAUGHT_SWAP_ERROR_CODE,\n  UNCAUGHT_SWAP_QUOTE_ERROR_CODE,\n} from '../constants';\n\nexport function getSwapErrorCode(\n  context: 'swap' | 'quote' | 'balance' | 'uncaught-swap' | 'uncaught-quote',\n  errorCode?: number,\n) {\n  // TODO: handle additional error codes\n  if (errorCode === -32001) {\n    return TOO_MANY_REQUESTS_ERROR_CODE;\n  }\n\n  if (errorCode === -32602) {\n    return LOW_LIQUIDITY_ERROR_CODE;\n  }\n\n  if (context === 'uncaught-swap') {\n    return UNCAUGHT_SWAP_ERROR_CODE;\n  }\n\n  if (context === 'uncaught-quote') {\n    return UNCAUGHT_SWAP_QUOTE_ERROR_CODE;\n  }\n\n  if (context === 'quote') {\n    return GENERAL_SWAP_QUOTE_ERROR_CODE;\n  }\n\n  if (context === 'balance') {\n    return GENERAL_SWAP_BALANCE_ERROR_CODE;\n  }\n\n  return GENERAL_SWAP_ERROR_CODE;\n}\n","import { getRoundedAmount } from '../../internal/utils/getRoundedAmount';\nimport { cn, color, text } from '../../styles/theme';\nimport { useGetETHBalance } from '../../wallet/hooks/useGetETHBalance';\nimport type { EthBalanceReact } from '../types';\nimport { useIdentityContext } from './IdentityProvider';\n\nexport function EthBalance({ address, className }: EthBalanceReact) {\n  const { address: contextAddress } = useIdentityContext();\n  if (!contextAddress && !address) {\n    console.error(\n      'Address: an Ethereum address must be provided to the Identity or EthBalance component.',\n    );\n    return null;\n  }\n\n  const { convertedBalance: balance, error } = useGetETHBalance(\n    address ?? contextAddress,\n  );\n\n  if (!balance || error) {\n    return null;\n  }\n\n  return (\n    <span\n      data-testid=\"ockEthBalance\"\n      className={cn(text.label2, color.foregroundMuted, className)}\n    >\n      {getRoundedAmount(balance, 4)} ETH\n    </span>\n  );\n}\n","import { useCallback } from 'react';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport type { IdentityReact } from '../types';\nimport { IdentityLayout } from './IdentityLayout';\nimport { IdentityProvider } from './IdentityProvider';\n\nexport function Identity({\n  address,\n  chain,\n  children,\n  className,\n  hasCopyAddressOnClick = false,\n  schemaId,\n}: IdentityReact) {\n  const { chain: contextChain } = useOnchainKit();\n  const accountChain = chain ?? contextChain;\n\n  const handleCopy = useCallback(async () => {\n    if (!address) {\n      return false;\n    }\n    try {\n      await navigator.clipboard.writeText(address);\n      return true;\n    } catch (e) {\n      console.error('Failed to copy: ', e);\n      return false;\n    }\n  }, [address]);\n\n  const onClick = hasCopyAddressOnClick ? handleCopy : undefined;\n\n  return (\n    <IdentityProvider\n      address={address}\n      schemaId={schemaId}\n      chain={accountChain}\n    >\n      <IdentityLayout className={className} onClick={onClick}>\n        {children}\n      </IdentityLayout>\n    </IdentityProvider>\n  );\n}\n","import { Children, useMemo } from 'react';\nimport type { ReactNode } from 'react';\nimport { findComponent } from '../../internal/utils/findComponent';\nimport { background, cn, color, pressable } from '../../styles/theme';\nimport { useTheme } from '../../useTheme';\nimport { usePopover } from '../hooks/usePopover';\nimport { Address } from './Address';\nimport { Avatar } from './Avatar';\nimport { EthBalance } from './EthBalance';\nimport { Name } from './Name';\nimport { Socials } from './Socials';\n\nconst noop = () => {};\n\ntype IdentityLayoutReact = {\n  children: ReactNode;\n  className?: string;\n  onClick?: () => Promise<boolean>;\n};\n\nexport function IdentityLayout({\n  children,\n  className,\n  onClick,\n}: IdentityLayoutReact) {\n  const componentTheme = useTheme();\n\n  const { avatar, name, address, ethBalance, socials } = useMemo(() => {\n    const childrenArray = Children.toArray(children);\n    return {\n      avatar: childrenArray.find(findComponent(Avatar)),\n      name: childrenArray.find(findComponent(Name)),\n      address: childrenArray.find(findComponent(Address)),\n      ethBalance: childrenArray.find(findComponent(EthBalance)),\n      socials: childrenArray.find(findComponent(Socials)),\n    };\n  }, [children]);\n\n  const {\n    handleClick,\n    handleMouseEnter,\n    handleMouseLeave,\n    showPopover,\n    popoverText,\n  } = usePopover(onClick);\n\n  return (\n    <div\n      className={cn(\n        componentTheme,\n        background.default,\n        'flex flex-col px-4 py-1',\n        onClick && `${pressable.default} relative`,\n        className,\n      )}\n      data-testid=\"ockIdentityLayout_container\"\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onKeyUp={noop}\n      onKeyDown={noop}\n    >\n      <div className=\"flex items-center space-x-3\">\n        <div className=\"flex-shrink-0\">{avatar}</div>\n        <div className=\"flex flex-col\">\n          {name}\n          {address && !ethBalance && address}\n          {!address && ethBalance && ethBalance}\n          {address && ethBalance && (\n            <div className=\"flex items-center gap-1\">\n              {address}\n              <span className={color.foregroundMuted}>·</span>\n              {ethBalance}\n            </div>\n          )}\n        </div>\n      </div>\n      {socials}\n      {showPopover && (\n        <div\n          className={cn(\n            background.inverse,\n            color.foreground,\n            'absolute top-[calc(100%_-_5px)] left-[46px] z-10 rounded px-2 py-1 shadow-[0px_4px_8px_rgba(0,0,0,0.1)]',\n          )}\n          data-testid=\"ockIdentityLayout_copy\"\n        >\n          {popoverText}\n          <div\n            className={cn(\n              'absolute top-[-5px] left-6 h-0 w-0',\n              'border-x-[5px] border-x-transparent border-b-[5px] border-b-[color:var(--ock-bg-inverse)] border-solid',\n            )}\n            data-testid=\"ockIdentityLayout_copyArrow\"\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nexport function usePreferredColorScheme(): 'light' | 'dark' {\n  const [colorScheme, setColorScheme] = useState<'light' | 'dark'>('light');\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setColorScheme(mediaQuery.matches ? 'dark' : 'light');\n\n    function updateColorScheme(event: MediaQueryListEvent) {\n      setColorScheme(event.matches ? 'dark' : 'light');\n    }\n\n    mediaQuery.addEventListener('change', updateColorScheme);\n    return () => mediaQuery.removeEventListener('change', updateColorScheme);\n  }, []);\n\n  return colorScheme;\n}\n","import { usePreferredColorScheme } from './internal/hooks/usePreferredColorScheme';\nimport type { UseThemeReact } from './types';\nimport { useOnchainKit } from './useOnchainKit';\n\nexport function useTheme(): UseThemeReact {\n  const preferredMode = usePreferredColorScheme();\n  const {\n    config: { appearance } = {},\n  } = useOnchainKit();\n  const { theme = 'default', mode = 'auto' } = appearance || {};\n\n  if (theme === 'cyberpunk' || theme === 'base' || theme === 'hacker') {\n    return theme;\n  }\n\n  switch (mode) {\n    case 'auto':\n      return `${theme}-${preferredMode}` as UseThemeReact;\n    case 'dark':\n      return `${theme}-dark` as UseThemeReact;\n    case 'light':\n      return `${theme}-light` as UseThemeReact;\n    default:\n      // If mode is not set or is an invalid value, fall back to preferredMode\n      return `${theme}-${preferredMode}` as UseThemeReact;\n  }\n}\n","import { useCallback, useEffect, useState } from 'react';\n\nexport function usePopover(onClick?: () => Promise<boolean>) {\n  const [popoverText, setPopoverText] = useState('Copy');\n  const [showPopover, setShowPopover] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n\n  const handleMouseEnter = useCallback(() => {\n    setPopoverText('Copy');\n    setIsHovered(true);\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    setIsHovered(false);\n    setShowPopover(false);\n  }, []);\n\n  const handleClick = useCallback(async () => {\n    if (onClick) {\n      const result = await onClick();\n      if (result) {\n        setPopoverText('Copied');\n        setTimeout(() => {\n          setShowPopover(false);\n        }, 1000);\n      }\n    }\n  }, [onClick]);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n    if (isHovered) {\n      timer = setTimeout(() => setShowPopover(true), 200);\n    } else {\n      setShowPopover(false);\n    }\n    return () => clearTimeout(timer);\n  }, [isHovered]);\n\n  if (!onClick) {\n    return {};\n  }\n\n  return {\n    handleClick,\n    handleMouseEnter,\n    handleMouseLeave,\n    showPopover,\n    popoverText,\n  };\n}\n","import { Children, useMemo } from 'react';\nimport { findComponent } from '../../internal/utils/findComponent';\nimport { cn, color, text } from '../../styles/theme';\nimport { useName } from '../hooks/useName';\nimport type { NameReact } from '../types';\nimport { getSlicedAddress } from '../utils/getSlicedAddress';\nimport { Badge } from './Badge';\nimport { DisplayBadge } from './DisplayBadge';\nimport { useIdentityContext } from './IdentityProvider';\n\n/**\n * Name is a React component that renders the user name from an Ethereum address.\n */\nexport function Name({\n  address = null,\n  className,\n  children,\n  chain,\n  ...props\n}: NameReact) {\n  const { address: contextAddress, chain: contextChain } = useIdentityContext();\n  if (!contextAddress && !address) {\n    console.error(\n      'Name: an Ethereum address must be provided to the Identity or Name component.',\n    );\n    return null;\n  }\n\n  const accountAddress = address ?? contextAddress;\n  const accountChain = chain ?? contextChain;\n\n  const { data: name, isLoading } = useName({\n    address: accountAddress,\n    chain: accountChain,\n  });\n\n  const badge = useMemo(() => {\n    return Children.toArray(children).find(findComponent(Badge));\n  }, [children]);\n\n  if (isLoading) {\n    return <span className={className} />;\n  }\n\n  return (\n    <div className=\"flex items-center gap-1\">\n      <span\n        data-testid=\"ockIdentity_Text\"\n        className={cn(text.headline, color.foreground, className)}\n        {...props}\n      >\n        {name || getSlicedAddress(accountAddress)}\n      </span>\n      {badge && <DisplayBadge address={accountAddress}>{badge}</DisplayBadge>}\n    </div>\n  );\n}\n","import { useQuery } from '@tanstack/react-query';\nimport type { Chain } from 'viem';\nimport { mainnet } from 'viem/chains';\nimport type { GetSocialsReturnType, UseQueryOptions } from '../types';\nimport { getSocials } from '../utils/getSocials';\n\ntype UseSocialsOptions = {\n  ensName: string;\n  chain?: Chain;\n};\n\nexport const useSocials = (\n  { ensName, chain = mainnet }: UseSocialsOptions,\n  queryOptions?: UseQueryOptions,\n) => {\n  const { enabled = true, cacheTime } = queryOptions ?? {};\n  const ensActionKey = `ens-socials-${ensName}-${chain.id}`;\n  return useQuery<GetSocialsReturnType>({\n    queryKey: ['useSocials', ensActionKey],\n    queryFn: async () => {\n      return getSocials({ ensName, chain });\n    },\n    gcTime: cacheTime,\n    enabled,\n    refetchOnWindowFocus: false,\n  });\n};\n","import type { Chain } from 'viem';\nimport { mainnet } from 'viem/chains';\nimport { normalize } from 'viem/ens';\nimport { isBase } from '../../isBase';\nimport { isEthereum } from '../../isEthereum';\nimport { getChainPublicClient } from '../../network/getChainPublicClient';\nimport { RESOLVER_ADDRESSES_BY_CHAIN_ID } from '../constants';\nimport type { GetSocialsReturnType } from '../types';\n\nexport type GetSocials = {\n  ensName: string;\n  chain?: Chain;\n};\n\nexport const getSocials = async ({\n  ensName,\n  chain = mainnet,\n}: GetSocials): Promise<GetSocialsReturnType> => {\n  const chainIsBase = isBase({ chainId: chain.id });\n  const chainIsEthereum = isEthereum({ chainId: chain.id });\n  const chainSupportsUniversalResolver = chainIsEthereum || chainIsBase;\n\n  if (!chainSupportsUniversalResolver) {\n    return Promise.reject(\n      'ChainId not supported, socials resolution is only supported on Ethereum and Base.',\n    );\n  }\n\n  const client = getChainPublicClient(chain);\n  const normalizedName = normalize(ensName);\n\n  const fetchTextRecord = async (key: string) => {\n    try {\n      const result = await client.getEnsText({\n        name: normalizedName,\n        key,\n        universalResolverAddress: RESOLVER_ADDRESSES_BY_CHAIN_ID[chain.id],\n      });\n      return result || null;\n    } catch (error) {\n      console.warn(`Failed to fetch ENS text record for ${key}:`, error);\n      return null;\n    }\n  };\n\n  const [twitter, github, farcaster, website] = await Promise.all([\n    fetchTextRecord('com.twitter'),\n    fetchTextRecord('com.github'),\n    fetchTextRecord('xyz.farcaster'),\n    fetchTextRecord('url'),\n  ]);\n\n  return { twitter, github, farcaster, website };\n};\n","import { icon } from '../../styles/theme';\n\nexport const githubSvg = (\n  <svg\n    data-testid=\"ock-githubSvg\"\n    role=\"img\"\n    aria-label=\"ock-githubSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    className=\"h-full w-full\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { icon } from '../../styles/theme';\n\nexport const twitterSvg = (\n  <svg\n    data-testid=\"ock-twitterSvg\"\n    role=\"img\"\n    aria-label=\"ock-twitterSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"-1 -1 14 14\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    className=\"h-full w-full\"\n  >\n    <g clipPath=\"url(#clip0_6998_47)\">\n      <path\n        d=\"M7.14163 5.07857L11.6089 0H10.5503L6.67137 4.40965L3.57328 0H0L4.68492 6.66817L0 11.9938H1.05866L5.15491 7.33709L8.42672 11.9938H12L7.14137 5.07857H7.14163ZM5.69165 6.72692L5.21697 6.06292L1.44011 0.779407H3.06615L6.11412 5.04337L6.5888 5.70737L10.5508 11.2499H8.92476L5.69165 6.72718V6.72692Z\"\n        className={icon.foreground}\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_6998_47\">\n        <rect width=\"12\" height=\"12\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\n","import { icon } from '../../styles/theme';\n\nexport const warpcastSvg = (\n  <svg\n    data-testid=\"ock-warpcastSvg\"\n    role=\"img\"\n    aria-label=\"ock-warpcastSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"9 9 14 14\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={`h-full w-full ${icon.foreground}`}\n  >\n    <path\n      d=\"M0 8C0 3.58172 3.58172 0 8 0H24C28.4183 0 32 3.58172 32 8V24C32 28.4183 28.4183 32 24 32H8C3.58172 32 0 28.4183 0 24V8Z\"\n      className={icon.inverse}\n    />\n    <path\n      d=\"M11.7305 10H20.115V22H18.8843V16.5032H18.8722C18.7362 14.984 17.4676 13.7935 15.9227 13.7935C14.3779 13.7935 13.1093 14.984 12.9733 16.5032H12.9612V22H11.7305V10Z\"\n      className={icon.foreground}\n    />\n    <path\n      d=\"M9.5 11.7031L10 13.4064H10.4231V20.2967C10.2106 20.2967 10.0385 20.47 10.0385 20.6838V21.1483H9.96154C9.74913 21.1483 9.57691 21.3216 9.57691 21.5354V21.9999H13.8846V21.5354C13.8846 21.3216 13.7124 21.1483 13.5 21.1483H13.4231V20.6838C13.4231 20.47 13.2508 20.2967 13.0384 20.2967H12.5769V11.7031H9.5Z\"\n      className={icon.foreground}\n    />\n    <path\n      d=\"M18.9614 20.2967C18.749 20.2967 18.5768 20.47 18.5768 20.6838V21.1483H18.4998C18.2874 21.1483 18.1152 21.3216 18.1152 21.5354V21.9999H22.4229V21.5354C22.4229 21.3216 22.2507 21.1483 22.0383 21.1483H21.9614V20.6838C21.9614 20.47 21.7892 20.2967 21.5768 20.2967V13.4064H21.9998L22.4998 11.7031H19.4229V20.2967H18.9614Z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { icon } from '../../styles/theme';\n\nexport const websiteSvg = (\n  <svg\n    data-testid=\"ock-websiteSvg\"\n    role=\"img\"\n    aria-label=\"ock-websiteSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 12 12\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    className={`h-full w-full ${icon.foreground}`}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M6 0C9.31356 0 12 2.68644 12 6C12 9.31356 9.31356 12 6 12C2.69689 12 0.0245556 9.35356 0 6C0.0244789 2.64689 2.69689 0 6 0ZM9.34844 9.97867C9.15053 9.88544 8.9422 9.80002 8.72553 9.72346C8.56251 10.0854 8.36772 10.4313 8.13856 10.7412C8.57762 10.5427 8.98439 10.2854 9.34844 9.97867ZM7.95156 9.49742C7.46353 9.38284 6.9427 9.30992 6.4 9.28597V11.1381C7.04791 10.9365 7.58233 10.2766 7.95156 9.49742ZM5.6 9.28597C5.05729 9.30993 4.53646 9.38284 4.04844 9.49742C4.41771 10.2766 4.95209 10.936 5.6 11.1375V9.28597ZM3.27456 9.72347C3.05737 9.80003 2.84956 9.88544 2.65164 9.97868C3.01571 10.2854 3.42248 10.5427 3.86153 10.7412C3.63237 10.4313 3.43758 10.0854 3.27456 9.72347ZM2.05267 9.38492C2.34486 9.2318 2.65736 9.09534 2.98809 8.97763C2.73913 8.21044 2.58288 7.33386 2.54799 6.40008H0.815211C0.901669 7.53597 1.35323 8.5703 2.05277 9.38497L2.05267 9.38492ZM3.75156 8.74742C4.33229 8.60263 4.95367 8.512 5.6 8.48545V6.4H3.34844C3.3823 7.25677 3.52553 8.05522 3.75157 8.74733L3.75156 8.74742ZM6.4 8.48545C7.04636 8.51201 7.66767 8.60263 8.24844 8.74794C8.47449 8.05523 8.61771 7.25728 8.65157 6.40061L6.40001 6.40009L6.4 8.48545ZM9.012 8.97763C9.34273 9.09534 9.65576 9.2318 9.94742 9.38492C10.6469 8.56982 11.0984 7.53603 11.185 6.40003H9.4522C9.4173 7.33389 9.26106 8.21048 9.0121 8.97759L9.012 8.97763ZM9.94742 2.61508C9.65523 2.7682 9.34273 2.90466 9.012 3.02237C9.26096 3.78956 9.41721 4.66614 9.4521 5.59992H11.1849C11.0984 4.46403 10.6469 3.4297 9.94732 2.61503L9.94742 2.61508ZM8.24853 3.25258C7.6678 3.39737 7.04642 3.488 6.40009 3.51456V5.6H8.65164C8.61779 4.74323 8.47456 3.94478 8.24852 3.25267L8.24853 3.25258ZM5.60009 3.51456C4.95373 3.48799 4.33242 3.39737 3.75164 3.25206C3.5256 3.94477 3.38238 4.74328 3.34852 5.59994H5.60008L5.60009 3.51456ZM2.98809 3.02237C2.65736 2.90466 2.34433 2.7682 2.05267 2.61508C1.35319 3.43018 0.901667 4.46397 0.815111 5.59997H2.54789C2.58278 4.66611 2.73903 3.78952 2.98799 3.02241L2.98809 3.02237ZM2.65163 2.02132C2.84954 2.11455 3.05788 2.19997 3.27454 2.27653C3.43757 1.91456 3.63236 1.56872 3.86152 1.25882C3.42246 1.45726 3.01569 1.71456 2.65163 2.02132ZM4.04852 2.50257C4.53654 2.61714 5.05738 2.69007 5.60008 2.71402V0.861911C4.95217 1.06348 4.41774 1.72337 4.04852 2.50258V2.50257ZM6.40008 2.71402C6.94279 2.69006 7.46362 2.61715 7.95163 2.50257C7.58237 1.7234 7.04747 1.06346 6.40008 0.8619V2.71402ZM8.72552 2.27652C8.94271 2.19996 9.15052 2.11454 9.34843 2.02131C8.98437 1.71454 8.5776 1.45724 8.13855 1.25881C8.36771 1.56923 8.5625 1.91454 8.72552 2.27652Z\"\n    />\n  </svg>\n);\n","import { githubSvg } from '../../internal/svg/githubSvg';\nimport { twitterSvg } from '../../internal/svg/twitterSvg';\nimport { warpcastSvg } from '../../internal/svg/warpcastSvg';\nimport { websiteSvg } from '../../internal/svg/websiteSvg';\nimport { border, cn, pressable } from '../../styles/theme';\n\nexport type SocialPlatform = 'twitter' | 'github' | 'farcaster' | 'website';\n\nexport const PLATFORM_CONFIG: Record<\n  SocialPlatform,\n  { href: (value: string) => string; icon: React.ReactNode }\n> = {\n  twitter: {\n    href: (value) => `https://x.com/${value}`,\n    icon: twitterSvg,\n  },\n  github: {\n    href: (value) => `https://github.com/${value}`,\n    icon: githubSvg,\n  },\n  farcaster: {\n    href: (value) => `https://warpcast.com/${value}`,\n    icon: warpcastSvg,\n  },\n  website: {\n    href: (value) => value,\n    icon: websiteSvg,\n  },\n};\n\nexport function GetSocialPlatformDetails({\n  platform,\n  value,\n}: {\n  platform: SocialPlatform;\n  value: string;\n}) {\n  const config = PLATFORM_CONFIG[platform];\n  return (\n    <a\n      href={config.href(value)}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className={cn(\n        pressable.default,\n        border.radius,\n        border.default,\n        'flex items-center justify-center p-2',\n      )}\n      data-testid={`ockSocials_${\n        platform.charAt(0).toUpperCase() + platform.slice(1)\n      }`}\n    >\n      <span className=\"sr-only\">{platform}</span>\n      <div className={cn('flex h-4 w-4 items-center justify-center')}>\n        {config.icon}\n      </div>\n    </a>\n  );\n}\n","import type { Address, Chain } from 'viem';\nimport { border, cn } from '../../styles/theme';\nimport { useName } from '../hooks/useName';\nimport { useSocials } from '../hooks/useSocials';\nimport { GetSocialPlatformDetails } from '../utils/getSocialPlatformDetails';\nimport type { SocialPlatform } from '../utils/getSocialPlatformDetails';\nimport { useIdentityContext } from './IdentityProvider';\n\ntype SocialsReact = {\n  address?: Address | null;\n  ensName?: string;\n  chain?: Chain;\n  className?: string;\n};\n\nexport function Socials({ address, chain, className }: SocialsReact) {\n  const { address: contextAddress, chain: contextChain } = useIdentityContext();\n\n  const accountAddress = address ?? contextAddress;\n  const accountChain = chain ?? contextChain;\n\n  if (!accountAddress) {\n    console.error(\n      'Socials: an Ethereum address must be provided to the Socials component.',\n    );\n    return null;\n  }\n\n  const { data: name, isLoading: isLoadingName } = useName({\n    address: accountAddress,\n    chain: accountChain,\n  });\n\n  const { data: socials, isLoading: isLoadingSocials } = useSocials(\n    {\n      ensName: name ?? '',\n      chain: accountChain,\n    },\n    { enabled: !!name },\n  );\n\n  if (isLoadingName || isLoadingSocials) {\n    return <span className={className} />;\n  }\n\n  if (!socials || Object.values(socials).every((value) => !value)) {\n    return null;\n  }\n\n  return (\n    <div className={cn(border.default, 'mt-2 w-full pl-1', className)}>\n      <div className={'left-4 flex space-x-2'}>\n        {Object.entries(socials).map(\n          ([platform, value]) =>\n            value && (\n              <GetSocialPlatformDetails\n                key={platform}\n                platform={platform as SocialPlatform}\n                value={value}\n              />\n            ),\n        )}\n      </div>\n    </div>\n  );\n}\n","import { mainnet } from 'viem/chains';\nimport { getChainPublicClient } from '../../network/getChainPublicClient';\nimport type { GetAddress, GetAddressReturnType } from '../types';\n\n/**\n * Get address from ENS name or Basename.\n */\nexport const getAddress = async ({\n  name,\n  chain = mainnet,\n}: GetAddress): Promise<GetAddressReturnType> => {\n  const client = getChainPublicClient(chain);\n  // Gets address for ENS name.\n  const address = await client.getEnsAddress({\n    name,\n  });\n  return address ?? null;\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { mainnet } from 'viem/chains';\nimport type {\n  GetAddressReturnType,\n  UseAddressOptions,\n  UseQueryOptions,\n} from '../types';\nimport { getAddress } from '../utils/getAddress';\n\nexport const useAddress = (\n  { name, chain = mainnet }: UseAddressOptions,\n  queryOptions?: UseQueryOptions,\n) => {\n  const { enabled = true, cacheTime } = queryOptions ?? {};\n  const actionKey = `useAddress-${name}-${chain.id}`;\n  return useQuery<GetAddressReturnType>({\n    queryKey: ['useAddress', actionKey],\n    queryFn: async () => {\n      return await getAddress({ name, chain });\n    },\n    gcTime: cacheTime,\n    enabled,\n    refetchOnWindowFocus: false,\n  });\n};\n","import { createContext, useCallback, useContext, useState } from 'react';\nimport { useValue } from '../../internal/hooks/useValue';\nimport type { NFTContextType, NFTProviderReact } from '../types';\n\nconst emptyContext = {} as NFTContextType;\n\nexport const NFTContext = createContext<NFTContextType>(emptyContext);\n\nexport function useNFTContext() {\n  const context = useContext(NFTContext);\n  if (context === emptyContext) {\n    throw new Error(\n      'useNFTContext must be used within an NFTView or NFTMint component',\n    );\n  }\n  return context;\n}\n\nexport function NFTProvider({\n  children,\n  contractAddress,\n  tokenId,\n  isSponsored,\n  useNFTData,\n  buildMintTransaction,\n}: NFTProviderReact) {\n  const [quantity, setQuantity] = useState(1);\n\n  const nftData = useNFTData(contractAddress, tokenId);\n\n  const handleSetQuantity = useCallback((quantity: string) => {\n    setQuantity(Number.parseInt(quantity, 10));\n  }, []);\n\n  const value = useValue({\n    contractAddress,\n    tokenId,\n    isSponsored,\n    quantity,\n    setQuantity: handleSetQuantity,\n    buildMintTransaction,\n    ...nftData,\n  });\n\n  return <NFTContext.Provider value={value}>{children}</NFTContext.Provider>;\n}\n","import { Avatar, Badge, Identity, Name } from '../../../identity';\nimport { cn } from '../../../styles/theme';\nimport { useOnchainKit } from '../../../useOnchainKit';\nimport { useNFTContext } from '../NFTProvider';\n\ntype NFTCreatorReact = {\n  className?: string;\n};\n\nexport function NFTCreator({ className }: NFTCreatorReact) {\n  const { schemaId } = useOnchainKit();\n  const { creatorAddress } = useNFTContext();\n\n  if (!creatorAddress) {\n    return null;\n  }\n\n  return (\n    <div className={cn('flex justify-between pb-2', className)}>\n      <Identity\n        className=\"space-x-2 px-0\"\n        address={creatorAddress}\n        schemaId={schemaId}\n      >\n        <Avatar className=\"h-4 w-4\" />\n        <Name>\n          <Badge />\n        </Name>\n      </Identity>\n    </div>\n  );\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useAccount, useChainId } from 'wagmi';\nimport { Spinner } from '../../../internal/components/Spinner';\nimport { cn, color, text } from '../../../styles/theme';\nimport {\n  Transaction,\n  TransactionButton,\n  type TransactionButtonReact,\n  type LifecycleStatus as TransactionLifecycleStatus,\n  TransactionSponsor,\n  TransactionStatus,\n  TransactionStatusAction,\n  TransactionStatusLabel,\n} from '../../../transaction';\nimport type { Call } from '../../../transaction/types';\nimport { ConnectWallet } from '../../../wallet';\nimport { useNFTLifecycleContext } from '../NFTLifecycleProvider';\nimport { useNFTContext } from '../NFTProvider';\n\ntype NFTMintButtonReact = {\n  className?: string;\n  label?: string;\n} & Pick<\n  TransactionButtonReact,\n  'disabled' | 'pendingOverride' | 'successOverride' | 'errorOverride'\n>;\n\nexport function NFTMintButton({\n  className,\n  label = 'Mint',\n  disabled,\n  pendingOverride,\n  successOverride,\n  errorOverride,\n}: NFTMintButtonReact) {\n  const chainId = useChainId();\n  const { address } = useAccount();\n  const {\n    contractAddress,\n    tokenId,\n    isEligibleToMint,\n    buildMintTransaction,\n    quantity,\n    isSponsored,\n  } = useNFTContext();\n  const { updateLifecycleStatus } = useNFTLifecycleContext();\n  const [callData, setCallData] = useState<Call[]>([]);\n  const [mintError, setMintError] = useState<string | null>(null);\n\n  const handleTransactionError = useCallback(\n    (error: string) => {\n      updateLifecycleStatus({\n        statusName: 'error',\n        statusData: {\n          error: 'Error building mint transaction',\n          code: 'NmNBc01', // NFT module NFTMintButton component 01 error\n          message: error,\n        },\n      });\n      setMintError(error);\n    },\n    [updateLifecycleStatus],\n  );\n\n  const fetchTransactions = useCallback(async () => {\n    if (address && buildMintTransaction) {\n      try {\n        setCallData([]);\n        setMintError(null);\n        const mintTransaction = await buildMintTransaction({\n          contractAddress,\n          tokenId,\n          takerAddress: address,\n          quantity,\n        });\n        setCallData(mintTransaction);\n      } catch (error) {\n        handleTransactionError(error as string);\n      }\n    } else {\n      setCallData([]);\n    }\n  }, [\n    address,\n    contractAddress,\n    tokenId,\n    quantity,\n    buildMintTransaction,\n    handleTransactionError,\n  ]);\n\n  useEffect(() => {\n    // need to fetch calls on quantity change instead of onClick to avoid smart wallet\n    // popups getting blocked by safari\n    fetchTransactions();\n  }, [fetchTransactions]);\n\n  const handleOnStatus = useCallback(\n    (transactionStatus: TransactionLifecycleStatus) => {\n      if (transactionStatus.statusName === 'transactionPending') {\n        updateLifecycleStatus({ statusName: 'transactionPending' });\n      }\n\n      if (\n        transactionStatus.statusName === 'transactionLegacyExecuted' ||\n        transactionStatus.statusName === 'success' ||\n        transactionStatus.statusName === 'error'\n      ) {\n        updateLifecycleStatus(transactionStatus);\n      }\n    },\n    [updateLifecycleStatus],\n  );\n\n  const transactionButtonLabel = useMemo(() => {\n    if (isEligibleToMint === false || mintError) {\n      return 'Minting not available';\n    }\n\n    if (callData.length === 0) {\n      return <Spinner />;\n    }\n\n    return label;\n  }, [callData, isEligibleToMint, label, mintError]);\n\n  if (!buildMintTransaction) {\n    return null;\n  }\n\n  if (!address) {\n    return (\n      <div className={cn('pt-2', className)}>\n        <ConnectWallet className=\"w-full\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className={cn('pt-2', className)}>\n      <Transaction\n        isSponsored={isSponsored}\n        chainId={chainId}\n        calls={callData}\n        onStatus={handleOnStatus}\n      >\n        <TransactionButton\n          text={transactionButtonLabel}\n          pendingOverride={pendingOverride}\n          successOverride={successOverride}\n          errorOverride={errorOverride}\n          disabled={disabled || transactionButtonLabel !== label}\n        />\n        {!mintError && <TransactionSponsor />}\n        <TransactionStatus>\n          <TransactionStatusLabel />\n          <TransactionStatusAction />\n        </TransactionStatus>\n      </Transaction>\n      {mintError && (\n        <div className={cn(text.label2, color.foregroundMuted, 'pb-2')}>\n          {mintError}\n        </div>\n      )}\n    </div>\n  );\n}\n","import { cn } from '../../styles/theme';\n\ntype SpinnerReact = {\n  className?: string;\n};\n\nexport function Spinner({ className }: SpinnerReact) {\n  return (\n    <div\n      className=\"flex h-full items-center justify-center\"\n      data-testid=\"ockSpinner\"\n    >\n      <div\n        className={cn(\n          'animate-spin border-2 border-gray-200 border-t-3',\n          'rounded-full border-t-gray-400 px-2.5 py-2.5',\n          className,\n        )}\n      />\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nexport function useIsMounted() {\n  const [isMounted, setIsMounted] = useState(false);\n  useEffect(() => {\n    setIsMounted(true);\n  });\n  return isMounted;\n}\n","import {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport type { Address } from 'viem';\nimport {\n  useAccount,\n  useConfig,\n  useSwitchChain,\n  useWaitForTransactionReceipt,\n} from 'wagmi';\nimport { waitForTransactionReceipt } from 'wagmi/actions';\nimport { Capabilities } from '../../constants';\nimport { useCapabilitiesSafe } from '../../internal/hooks/useCapabilitiesSafe';\nimport { useValue } from '../../internal/hooks/useValue';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport {\n  GENERIC_ERROR_MESSAGE,\n  TRANSACTION_TYPE_CALLS,\n  TRANSACTION_TYPE_CONTRACTS,\n} from '../constants';\nimport { useCallsStatus } from '../hooks/useCallsStatus';\nimport { useSendCall } from '../hooks/useSendCall';\nimport { useSendCalls } from '../hooks/useSendCalls';\nimport { useSendWalletTransactions } from '../hooks/useSendWalletTransactions';\nimport { useWriteContract } from '../hooks/useWriteContract';\nimport { useWriteContracts } from '../hooks/useWriteContracts';\nimport type {\n  LifecycleStatus,\n  TransactionContextType,\n  TransactionProviderReact,\n} from '../types';\nimport { getPaymasterUrl } from '../utils/getPaymasterUrl';\nimport { isUserRejectedRequestError } from '../utils/isUserRejectedRequestError';\n\nconst emptyContext = {} as TransactionContextType;\nexport const TransactionContext =\n  createContext<TransactionContextType>(emptyContext);\n\nexport function useTransactionContext() {\n  const context = useContext(TransactionContext);\n  if (context === emptyContext) {\n    throw new Error(\n      'useTransactionContext must be used within a Transaction component',\n    );\n  }\n  return context;\n}\n\nexport function TransactionProvider({\n  calls,\n  capabilities: transactionCapabilities,\n  chainId,\n  children,\n  contracts,\n  isSponsored,\n  onError,\n  onStatus,\n  onSuccess,\n}: TransactionProviderReact) {\n  // Core Hooks\n  const account = useAccount();\n  const config = useConfig();\n  const {\n    config: { paymaster } = { paymaster: undefined },\n  } = useOnchainKit();\n\n  const [errorMessage, setErrorMessage] = useState('');\n  const [errorCode, setErrorCode] = useState('');\n  const [isToastVisible, setIsToastVisible] = useState(false);\n  const [lifecycleStatus, setLifecycleStatus] = useState<LifecycleStatus>({\n    statusName: 'init',\n    statusData: null,\n  }); // Component lifecycle\n  const [transactionId, setTransactionId] = useState('');\n  const [transactionCount, setTransactionCount] = useState<\n    number | undefined\n  >();\n  const [transactionHashList, setTransactionHashList] = useState<Address[]>([]);\n  const transactions = calls || contracts;\n  const transactionType = calls\n    ? TRANSACTION_TYPE_CALLS\n    : TRANSACTION_TYPE_CONTRACTS;\n\n  // Retrieve wallet capabilities\n  const walletCapabilities = useCapabilitiesSafe({\n    chainId,\n  });\n\n  const { switchChainAsync } = useSwitchChain();\n\n  // Validate `calls` and `contracts` props\n  if (!contracts && !calls) {\n    throw new Error(\n      'Transaction: One of contracts or calls must be provided as a prop to the Transaction component.',\n    );\n  }\n  if (calls && contracts) {\n    throw new Error(\n      'Transaction: Only one of contracts or calls can be provided as a prop to the Transaction component.',\n    );\n  }\n\n  // useWriteContracts or useWriteContract\n  // Used for contract calls with an ABI and functions.\n  const { status: statusWriteContracts, writeContractsAsync } =\n    useWriteContracts({\n      setLifecycleStatus,\n      setTransactionId,\n    });\n  const {\n    status: statusWriteContract,\n    writeContractAsync,\n    data: writeContractTransactionHash,\n  } = useWriteContract({\n    setLifecycleStatus,\n    transactionHashList,\n  });\n  // useSendCalls or useSendCall\n  // Used for contract calls with raw calldata.\n  const { status: statusSendCalls, sendCallsAsync } = useSendCalls({\n    setLifecycleStatus,\n    setTransactionId,\n  });\n  const {\n    status: statusSendCall,\n    sendCallAsync,\n    data: sendCallTransactionHash,\n  } = useSendCall({\n    setLifecycleStatus,\n    transactionHashList,\n  });\n\n  // Transaction Status\n  // For batched, use statusSendCalls or statusWriteContracts\n  // For single, use statusSendCall or statusWriteContract\n  const transactionStatus = useMemo(() => {\n    const transactionStatuses = walletCapabilities[Capabilities.AtomicBatch]\n      ?.supported\n      ? {\n          [TRANSACTION_TYPE_CALLS]: statusSendCalls,\n          [TRANSACTION_TYPE_CONTRACTS]: statusWriteContracts,\n        }\n      : {\n          [TRANSACTION_TYPE_CALLS]: statusSendCall,\n          [TRANSACTION_TYPE_CONTRACTS]: statusWriteContract,\n        };\n    return transactionStatuses[transactionType];\n  }, [\n    statusSendCalls,\n    statusWriteContracts,\n    statusSendCall,\n    statusWriteContract,\n    transactionType,\n    walletCapabilities[Capabilities.AtomicBatch],\n  ]);\n\n  // Transaction hash for single transaction (non-batched)\n  const singleTransactionHash =\n    writeContractTransactionHash || sendCallTransactionHash;\n\n  const capabilities = useMemo(() => {\n    if (isSponsored && paymaster) {\n      return {\n        paymasterService: { url: paymaster },\n        // this needs to be below so devs can override default paymaster\n        // with their personal paymaster in production playgroundd\n        ...transactionCapabilities,\n      };\n    }\n    return transactionCapabilities;\n  }, [isSponsored, paymaster, transactionCapabilities]);\n\n  // useSendWalletTransactions\n  // Used to send transactions based on the transaction type. Can be of type calls or contracts.\n  const sendWalletTransactions = useSendWalletTransactions({\n    capabilities,\n    sendCallAsync,\n    sendCallsAsync,\n    transactionType,\n    walletCapabilities,\n    writeContractAsync,\n    writeContractsAsync,\n  });\n\n  const { transactionHash: batchedTransactionHash, status: callStatus } =\n    useCallsStatus({\n      setLifecycleStatus,\n      transactionId,\n    });\n  const { data: receipt } = useWaitForTransactionReceipt({\n    hash: singleTransactionHash || batchedTransactionHash,\n  });\n\n  // Component lifecycle emitters\n  useEffect(() => {\n    setErrorMessage('');\n    // Error\n    if (lifecycleStatus.statusName === 'error') {\n      setErrorMessage(lifecycleStatus.statusData.message);\n      setErrorCode(lifecycleStatus.statusData.code);\n      onError?.(lifecycleStatus.statusData);\n    }\n    // Transaction Legacy Executed\n    if (lifecycleStatus.statusName === 'transactionLegacyExecuted') {\n      setTransactionHashList(lifecycleStatus.statusData.transactionHashList);\n    }\n    // Success\n    if (lifecycleStatus.statusName === 'success') {\n      onSuccess?.({\n        transactionReceipts: lifecycleStatus.statusData.transactionReceipts,\n      });\n    }\n    // Emit Status\n    onStatus?.(lifecycleStatus);\n  }, [\n    onError,\n    onStatus,\n    onSuccess,\n    lifecycleStatus,\n    lifecycleStatus.statusData, // Keep statusData, so that the effect runs when it changes\n    lifecycleStatus.statusName, // Keep statusName, so that the effect runs when it changes\n  ]);\n\n  // Set transaction pending status when writeContracts or writeContract is pending\n  useEffect(() => {\n    if (transactionStatus === 'pending') {\n      setLifecycleStatus({\n        statusName: 'transactionPending',\n        statusData: null,\n      });\n    }\n  }, [transactionStatus]);\n\n  // Trigger success status when receipt is generated by useWaitForTransactionReceipt\n  useEffect(() => {\n    if (!receipt) {\n      return;\n    }\n    setLifecycleStatus({\n      statusName: 'success',\n      statusData: {\n        transactionReceipts: [receipt],\n      },\n    });\n  }, [receipt]);\n\n  // When all transactions are succesful, get the receipts\n  useEffect(() => {\n    if (\n      !transactions ||\n      transactionHashList.length !== transactionCount ||\n      transactionCount < 2\n    ) {\n      return;\n    }\n    getTransactionLegacyReceipts();\n  }, [transactions, transactionCount, transactionHashList]);\n\n  const getTransactionLegacyReceipts = useCallback(async () => {\n    const receipts = [];\n    for (const hash of transactionHashList) {\n      try {\n        const txnReceipt = await waitForTransactionReceipt(config, {\n          hash,\n          chainId,\n        });\n        receipts.push(txnReceipt);\n      } catch (err) {\n        setLifecycleStatus({\n          statusName: 'error',\n          statusData: {\n            code: 'TmTPc01', // Transaction module TransactionProvider component 01 error\n            error: JSON.stringify(err),\n            message: GENERIC_ERROR_MESSAGE,\n          },\n        });\n      }\n    }\n    setLifecycleStatus({\n      statusName: 'success',\n      statusData: {\n        transactionReceipts: receipts,\n      },\n    });\n  }, [chainId, config, transactionHashList]);\n\n  const switchChain = useCallback(\n    async (targetChainId: number | undefined) => {\n      if (targetChainId && account.chainId !== targetChainId) {\n        await switchChainAsync({ chainId: targetChainId });\n      }\n    },\n    [account.chainId, switchChainAsync],\n  );\n\n  const buildTransaction = useCallback(async () => {\n    setLifecycleStatus({\n      statusName: 'buildingTransaction',\n      statusData: null,\n    });\n    try {\n      const resolvedTransactions = await (typeof transactions === 'function'\n        ? transactions()\n        : Promise.resolve(transactions));\n      setTransactionCount(resolvedTransactions?.length);\n      return resolvedTransactions;\n    } catch (err) {\n      setLifecycleStatus({\n        statusName: 'error',\n        statusData: {\n          code: 'TmTPc04', // Transaction module TransactionProvider component 04 error\n          error: JSON.stringify(err),\n          message: 'Error building transactions',\n        },\n      });\n      return undefined;\n    }\n  }, [transactions]);\n\n  const handleSubmit = useCallback(async () => {\n    setErrorMessage('');\n    setIsToastVisible(true);\n    try {\n      // Switch chain before attempting transactions\n      await switchChain(chainId);\n      const resolvedTransactions = await buildTransaction();\n      await sendWalletTransactions(resolvedTransactions);\n    } catch (err) {\n      const errorMessage = isUserRejectedRequestError(err)\n        ? 'Request denied.'\n        : GENERIC_ERROR_MESSAGE;\n      setLifecycleStatus({\n        statusName: 'error',\n        statusData: {\n          code: 'TmTPc03', // Transaction module TransactionProvider component 03 error\n          error: JSON.stringify(err),\n          message: errorMessage,\n        },\n      });\n    }\n  }, [buildTransaction, chainId, sendWalletTransactions, switchChain]);\n\n  const value = useValue({\n    chainId,\n    errorCode,\n    errorMessage,\n    isLoading: callStatus === 'PENDING',\n    isToastVisible,\n    lifecycleStatus,\n    onSubmit: handleSubmit,\n    paymasterUrl: getPaymasterUrl(capabilities),\n    receipt,\n    setIsToastVisible,\n    setLifecycleStatus,\n    setTransactionId,\n    transactions,\n    transactionId,\n    transactionHash: singleTransactionHash || batchedTransactionHash,\n    transactionCount,\n  });\n  return (\n    <TransactionContext.Provider value={value}>\n      {children}\n    </TransactionContext.Provider>\n  );\n}\n","// Capabilities\nexport enum Capabilities {\n  AtomicBatch = 'atomicBatch',\n  AuxiliaryFunds = 'auxiliaryFunds',\n  PaymasterService = 'paymasterService',\n}\n","import { useMemo } from 'react';\nimport type { WalletCapabilities } from 'viem';\nimport { useAccount } from 'wagmi';\nimport { useCapabilities } from 'wagmi/experimental';\nimport type { UseCapabilitiesSafeParams } from '../../types';\n\nexport function useCapabilitiesSafe({\n  chainId,\n}: UseCapabilitiesSafeParams): WalletCapabilities {\n  const { isConnected } = useAccount();\n\n  const { data: capabilities, error } = useCapabilities({\n    query: { enabled: isConnected },\n  });\n\n  return useMemo(() => {\n    if (error || !capabilities || !capabilities[chainId]) {\n      return {};\n    }\n\n    return capabilities[chainId];\n  }, [capabilities, chainId, error]);\n}\n","export const GENERIC_ERROR_MESSAGE = 'Something went wrong. Please try again.';\n// Most likely EOAexport const genericErrorMessage = 'Something went wrong. Please try again.';\nexport const METHOD_NOT_SUPPORTED_ERROR_SUBSTRING =\n  'this request method is not supported';\nexport const SEND_CALLS_NOT_SUPPORTED_ERROR = 'SEND_CALLS_NOT_SUPPORTED_ERROR';\nexport const TRANSACTION_TYPE_CALLS = 'TRANSACTION_TYPE_CALLS';\nexport const TRANSACTION_TYPE_CONTRACTS = 'TRANSACTION_TYPE_CONTRACTS';\n","import { useCallsStatus as useCallsStatusWagmi } from 'wagmi/experimental';\nimport type { UseCallsStatusParams } from '../types';\n\nexport function useCallsStatus({\n  setLifecycleStatus,\n  transactionId,\n}: UseCallsStatusParams) {\n  try {\n    const { data } = useCallsStatusWagmi({\n      id: transactionId,\n      query: {\n        refetchInterval: (query) => {\n          return query.state.data?.status === 'CONFIRMED' ? false : 1000;\n        },\n        enabled: !!transactionId,\n      },\n    });\n    const transactionHash = data?.receipts?.[0]?.transactionHash;\n    return { status: data?.status, transactionHash };\n  } catch (err) {\n    setLifecycleStatus({\n      statusName: 'error',\n      statusData: {\n        code: 'TmUCSh01',\n        error: JSON.stringify(err),\n        message: '',\n      },\n    });\n    return { status: 'error', transactionHash: undefined };\n  }\n}\n","import type { Address } from 'viem';\nimport { useSendTransaction as useSendCallWagmi } from 'wagmi';\nimport { GENERIC_ERROR_MESSAGE } from '../constants';\nimport type { UseSendCallParams } from '../types';\nimport { isUserRejectedRequestError } from '../utils/isUserRejectedRequestError';\n\n/**\n * Wagmi hook for single transactions with calldata.\n * Supports both EOAs and Smart Wallets.\n * Does not support transaction batching or paymasters.\n */\nexport function useSendCall({\n  setLifecycleStatus,\n  transactionHashList,\n}: UseSendCallParams) {\n  const {\n    status,\n    sendTransactionAsync: sendCallAsync,\n    data,\n  } = useSendCallWagmi({\n    mutation: {\n      onError: (e) => {\n        const errorMessage = isUserRejectedRequestError(e)\n          ? 'Request denied.'\n          : GENERIC_ERROR_MESSAGE;\n        setLifecycleStatus({\n          statusName: 'error',\n          statusData: {\n            code: 'TmUSCh01', // Transaction module UseSendCall hook 01 error\n            error: e.message,\n            message: errorMessage,\n          },\n        });\n      },\n      onSuccess: (hash: Address) => {\n        setLifecycleStatus({\n          statusName: 'transactionLegacyExecuted',\n          statusData: {\n            transactionHashList: [...transactionHashList, hash],\n          },\n        });\n      },\n    },\n  });\n  return { status, sendCallAsync, data };\n}\n","import type { TransactionExecutionError } from 'viem';\n\nexport function isUserRejectedRequestError(err: unknown) {\n  if (\n    (err as TransactionExecutionError)?.cause?.name ===\n    'UserRejectedRequestError'\n  ) {\n    return true;\n  }\n  if (\n    (err as TransactionExecutionError)?.shortMessage?.includes(\n      'User rejected the request.',\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n","import { useSendCalls as useSendCallsWagmi } from 'wagmi/experimental';\nimport { GENERIC_ERROR_MESSAGE } from '../constants';\nimport type { UseSendCallsParams } from '../types';\nimport { isUserRejectedRequestError } from '../utils/isUserRejectedRequestError';\n\n/**\n * useSendCalls: Experimental Wagmi hook for batching transactions with calldata.\n * Supports Smart Wallets.\n * Supports batch operations and capabilities such as paymasters.\n * Does not support EOAs.\n */\nexport function useSendCalls({\n  setLifecycleStatus,\n  setTransactionId,\n}: UseSendCallsParams) {\n  const { status, sendCallsAsync, data } = useSendCallsWagmi({\n    mutation: {\n      onError: (e) => {\n        const errorMessage = isUserRejectedRequestError(e)\n          ? 'Request denied.'\n          : GENERIC_ERROR_MESSAGE;\n        setLifecycleStatus({\n          statusName: 'error',\n          statusData: {\n            code: 'TmUSCSh01', // Transaction module UseSendCalls hook 01 error\n            error: e.message,\n            message: errorMessage,\n          },\n        });\n      },\n      onSuccess: (id) => {\n        setTransactionId(id);\n      },\n    },\n  });\n  return { status, sendCallsAsync, data };\n}\n","import { useCallback } from 'react';\nimport type { ContractFunctionParameters } from 'viem';\nimport { Capabilities } from '../../constants';\nimport type { Call, UseSendWalletTransactionsParams } from '../types';\nimport { sendBatchedTransactions } from '../utils/sendBatchedTransactions';\nimport { sendSingleTransactions } from '../utils/sendSingleTransactions';\n\n// Sends transactions to the wallet using the appropriate hook based on Transaction props and wallet capabilities\nexport const useSendWalletTransactions = ({\n  capabilities,\n  sendCallAsync,\n  sendCallsAsync,\n  transactionType,\n  walletCapabilities,\n  writeContractAsync,\n  writeContractsAsync,\n}: UseSendWalletTransactionsParams) => {\n  return useCallback(\n    async (\n      transactions?:\n        | Call[]\n        | ContractFunctionParameters[]\n        | Promise<Call[]>\n        | Promise<ContractFunctionParameters[]>,\n    ) => {\n      if (!transactions) {\n        return;\n      }\n\n      const resolvedTransactions = await Promise.resolve(transactions);\n\n      if (walletCapabilities[Capabilities.AtomicBatch]?.supported) {\n        // Batched transactions\n        await sendBatchedTransactions({\n          capabilities,\n          sendCallsAsync,\n          transactions: resolvedTransactions,\n          transactionType,\n          writeContractsAsync,\n        });\n      } else {\n        // Non-batched transactions\n        await sendSingleTransactions({\n          sendCallAsync,\n          transactions: resolvedTransactions,\n          transactionType,\n          writeContractAsync,\n        });\n      }\n    },\n    [\n      writeContractsAsync,\n      writeContractAsync,\n      sendCallsAsync,\n      sendCallAsync,\n      capabilities,\n      transactionType,\n      walletCapabilities,\n    ],\n  );\n};\n","import {\n  TRANSACTION_TYPE_CALLS,\n  TRANSACTION_TYPE_CONTRACTS,\n} from '../constants';\nimport type { SendBatchedTransactionsParams } from '../types';\n\nexport const sendBatchedTransactions = async ({\n  capabilities,\n  sendCallsAsync,\n  transactions,\n  transactionType,\n  writeContractsAsync,\n}: SendBatchedTransactionsParams) => {\n  if (!transactions) {\n    return;\n  }\n  if (transactionType === TRANSACTION_TYPE_CONTRACTS) {\n    await writeContractsAsync({\n      contracts: transactions,\n      capabilities,\n    });\n  }\n  if (transactionType === TRANSACTION_TYPE_CALLS) {\n    await sendCallsAsync({\n      calls: transactions,\n      capabilities,\n    });\n  }\n};\n","import type { ContractFunctionParameters } from 'viem';\nimport { TRANSACTION_TYPE_CALLS } from '../constants';\nimport type { Call, SendSingleTransactionParams } from '../types';\n\nexport const sendSingleTransactions = async ({\n  sendCallAsync,\n  transactions,\n  transactionType,\n  writeContractAsync,\n}: SendSingleTransactionParams) => {\n  for (const transaction of transactions) {\n    if (transactionType === TRANSACTION_TYPE_CALLS) {\n      await sendCallAsync(transaction as Call);\n    } else {\n      await writeContractAsync(transaction as ContractFunctionParameters);\n    }\n  }\n};\n","import type { Address } from 'viem';\nimport { useWriteContract as useWriteContractWagmi } from 'wagmi';\nimport { GENERIC_ERROR_MESSAGE } from '../constants';\nimport type { UseWriteContractParams } from '../types';\nimport { isUserRejectedRequestError } from '../utils/isUserRejectedRequestError';\n\n/**\n * Wagmi hook for single contract transactions.\n * Supports both EOAs and Smart Wallets.\n * Does not support transaction batching or paymasters.\n */\nexport function useWriteContract({\n  setLifecycleStatus,\n  transactionHashList,\n}: UseWriteContractParams) {\n  const { status, writeContractAsync, data } = useWriteContractWagmi({\n    mutation: {\n      onError: (e) => {\n        const errorMessage = isUserRejectedRequestError(e)\n          ? 'Request denied.'\n          : GENERIC_ERROR_MESSAGE;\n        setLifecycleStatus({\n          statusName: 'error',\n          statusData: {\n            code: 'TmUWCh01', // Transaction module UseWriteContract hook 01 error\n            error: e.message,\n            message: errorMessage,\n          },\n        });\n      },\n      onSuccess: (hash: Address) => {\n        setLifecycleStatus({\n          statusName: 'transactionLegacyExecuted',\n          statusData: {\n            transactionHashList: [...transactionHashList, hash],\n          },\n        });\n      },\n    },\n  });\n  return { status, writeContractAsync, data };\n}\n","import { useWriteContracts as useWriteContractsWagmi } from 'wagmi/experimental';\nimport {\n  GENERIC_ERROR_MESSAGE,\n  METHOD_NOT_SUPPORTED_ERROR_SUBSTRING,\n} from '../constants';\nimport type { UseWriteContractsParams } from '../types';\nimport { isUserRejectedRequestError } from '../utils/isUserRejectedRequestError';\n\n/**\n * useWriteContracts: Experimental Wagmi hook for batching transactions.\n * Supports Smart Wallets.\n * Supports batch operations and capabilities such as paymasters.\n * Does not support EOAs.\n */\nexport function useWriteContracts({\n  setLifecycleStatus,\n  setTransactionId,\n}: UseWriteContractsParams) {\n  const { status, writeContractsAsync } = useWriteContractsWagmi({\n    mutation: {\n      onError: (e) => {\n        // Ignore EOA-specific error to fallback to writeContract\n        if (e.message.includes(METHOD_NOT_SUPPORTED_ERROR_SUBSTRING)) {\n          return;\n        }\n        const errorMessage = isUserRejectedRequestError(e)\n          ? 'Request denied.'\n          : GENERIC_ERROR_MESSAGE;\n        setLifecycleStatus({\n          statusName: 'error',\n          statusData: {\n            code: 'TmUWCSh01', // Transaction module UseWriteContracts hook 01 error\n            error: e.message,\n            message: errorMessage,\n          },\n        });\n      },\n      onSuccess: (id) => {\n        setTransactionId(id);\n      },\n    },\n  });\n  return { status, writeContractsAsync };\n}\n","import type { WalletCapabilities } from 'viem';\n\nexport const getPaymasterUrl = (\n  capabilities?: WalletCapabilities,\n): string | null => {\n  return capabilities?.paymasterService?.url || null;\n};\n","import { cn } from '../../styles/theme';\nimport { useIsMounted } from '../../useIsMounted';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport { useTheme } from '../../useTheme';\nimport type { TransactionReact } from '../types';\nimport { TransactionProvider } from './TransactionProvider';\n\nexport function Transaction({\n  calls,\n  capabilities,\n  chainId,\n  className,\n  children,\n  contracts,\n  isSponsored,\n  onError,\n  onStatus,\n  onSuccess,\n}: TransactionReact) {\n  const isMounted = useIsMounted();\n  const componentTheme = useTheme();\n  const { chain } = useOnchainKit();\n\n  // prevents SSR hydration issue\n  if (!isMounted) {\n    return null;\n  }\n\n  // If chainId is not provided,\n  // use the default chainId from the OnchainKit context\n  const accountChainId = chainId ? chainId : chain.id;\n\n  return (\n    <TransactionProvider\n      calls={calls}\n      capabilities={capabilities}\n      chainId={accountChainId}\n      contracts={contracts}\n      isSponsored={isSponsored}\n      onError={onError}\n      onStatus={onStatus}\n      onSuccess={onSuccess}\n    >\n      <div\n        className={cn(componentTheme, 'flex w-full flex-col gap-2', className)}\n      >\n        {children}\n      </div>\n    </TransactionProvider>\n  );\n}\n","import { useCallback, useMemo } from 'react';\nimport { useAccount, useChainId } from 'wagmi';\nimport { useShowCallsStatus } from 'wagmi/experimental';\nimport { Spinner } from '../../internal/components/Spinner';\nimport { getChainExplorer } from '../../network/getChainExplorer';\nimport { border, cn, color, pressable, text } from '../../styles/theme';\nimport type { TransactionButtonReact } from '../types';\nimport { isSpinnerDisplayed } from '../utils/isSpinnerDisplayed';\nimport { useTransactionContext } from './TransactionProvider';\n\nexport function TransactionButton({\n  className,\n  disabled = false,\n  text: idleText = 'Transact',\n  errorOverride,\n  successOverride,\n  pendingOverride,\n}: TransactionButtonReact) {\n  const {\n    chainId,\n    errorMessage,\n    isLoading,\n    lifecycleStatus,\n    onSubmit,\n    receipt,\n    transactions,\n    transactionCount,\n    transactionHash,\n    transactionId,\n  } = useTransactionContext();\n\n  const { address } = useAccount();\n\n  const accountChainId = chainId ?? useChainId();\n  const { showCallsStatus } = useShowCallsStatus();\n\n  const isLegacyTransactionInProgress =\n    lifecycleStatus.statusName === 'transactionLegacyExecuted' &&\n    transactionCount !==\n      lifecycleStatus?.statusData?.transactionHashList?.length;\n\n  const isInProgress =\n    lifecycleStatus.statusName === 'buildingTransaction' ||\n    lifecycleStatus.statusName === 'transactionPending' ||\n    isLegacyTransactionInProgress ||\n    isLoading;\n\n  const isMissingProps = !transactions || !address;\n  const isWaitingForReceipt = !!transactionId || !!transactionHash;\n\n  const isDisabled =\n    !receipt &&\n    (isInProgress || isMissingProps || isWaitingForReceipt || disabled);\n\n  const displayPendingState = isSpinnerDisplayed({\n    errorMessage,\n    hasReceipt: !!receipt,\n    isInProgress,\n    transactionHash,\n    transactionId,\n  });\n\n  const { errorText, successText, pendingContent } = useMemo(() => {\n    const successText = successOverride?.text ?? 'View transaction';\n    const errorText = errorOverride?.text ?? 'Try again';\n    const pendingContent = pendingOverride?.text ?? <Spinner />;\n\n    return { successText, errorText, pendingContent };\n  }, [errorOverride, pendingOverride, successOverride]);\n\n  const successHandler = useCallback(() => {\n    if (successOverride?.onClick && receipt) {\n      return successOverride?.onClick?.(receipt);\n    }\n    // SW will have txn id so open in wallet\n    if (receipt && transactionId) {\n      return showCallsStatus({ id: transactionId });\n    }\n    // EOA will not have txn id so open in explorer\n    const chainExplorer = getChainExplorer(accountChainId);\n    return window.open(\n      `${chainExplorer}/tx/${transactionHash}`,\n      '_blank',\n      'noopener,noreferrer',\n    );\n  }, [\n    accountChainId,\n    successOverride,\n    showCallsStatus,\n    transactionId,\n    transactionHash,\n    receipt,\n  ]);\n\n  const errorHandler = useCallback(() => {\n    if (errorOverride?.onClick) {\n      return errorOverride?.onClick?.();\n    }\n    // if no custom logic, retry submit\n    return onSubmit();\n  }, [errorOverride, onSubmit]);\n\n  const buttonContent = useMemo(() => {\n    // txn successful\n    if (receipt) {\n      return successText;\n    }\n    if (errorMessage) {\n      return errorText;\n    }\n    if (displayPendingState) {\n      return pendingContent;\n    }\n    return idleText;\n  }, [\n    displayPendingState,\n    errorMessage,\n    errorText,\n    idleText,\n    pendingContent,\n    receipt,\n    successText,\n  ]);\n\n  const handleSubmit = useCallback(() => {\n    if (receipt) {\n      successHandler();\n    } else if (errorMessage) {\n      errorHandler();\n    } else {\n      onSubmit();\n    }\n  }, [errorMessage, errorHandler, onSubmit, receipt, successHandler]);\n\n  return (\n    <button\n      className={cn(\n        pressable.primary,\n        border.radius,\n        'w-full rounded-xl',\n        'px-4 py-3 font-medium text-base text-white leading-6',\n        isDisabled && pressable.disabled,\n        text.headline,\n        className,\n      )}\n      onClick={handleSubmit}\n      type=\"button\"\n      disabled={isDisabled}\n      data-testid=\"ockTransactionButton_Button\"\n    >\n      <div className={cn(text.headline, color.inverse, 'flex justify-center')}>\n        {buttonContent}\n      </div>\n    </button>\n  );\n}\n","import { baseSepolia } from 'viem/chains';\n\nexport function getChainExplorer(chainId?: number) {\n  if (chainId === baseSepolia.id) {\n    return 'https://sepolia.basescan.org';\n  }\n  return 'https://basescan.org';\n}\n","import type { IsSpinnerDisplayedProps } from '../types';\n\nexport function isSpinnerDisplayed({\n  errorMessage,\n  hasReceipt,\n  isInProgress,\n  transactionHash,\n  transactionId,\n}: IsSpinnerDisplayedProps) {\n  const isWaitingForReceipt = transactionId || transactionHash;\n\n  if (hasReceipt || errorMessage) {\n    return false;\n  }\n  if (isInProgress || isWaitingForReceipt) {\n    return true;\n  }\n  return false;\n}\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { closeSvg } from '../../internal/svg/closeSvg';\nimport { background, cn } from '../../styles/theme';\nimport type { TransactionToastReact } from '../types';\nimport { useTransactionContext } from './TransactionProvider';\n\nexport function TransactionToast({\n  children,\n  className,\n  durationMs = 3000,\n  position = 'bottom-center',\n}: TransactionToastReact) {\n  const {\n    errorMessage,\n    isLoading,\n    isToastVisible,\n    receipt,\n    setIsToastVisible,\n    transactionHash,\n    transactionId,\n  } = useTransactionContext();\n\n  const closeToast = useCallback(() => {\n    setIsToastVisible(false);\n  }, [setIsToastVisible]);\n\n  const positionClass = useMemo(() => {\n    if (position === 'bottom-right') {\n      return 'bottom-5 left-3/4';\n    }\n    if (position === 'top-right') {\n      return 'top-[100px] left-3/4';\n    }\n    if (position === 'top-center') {\n      return 'top-[100px] left-2/4';\n    }\n    return 'bottom-5 left-2/4';\n  }, [position]);\n\n  useEffect(() => {\n    let timer: ReturnType<typeof setTimeout> | undefined;\n    // hide toast after 5 seconds once\n    // it reaches final state (success or error)\n    if (receipt || errorMessage) {\n      timer = setTimeout(() => {\n        setIsToastVisible(false);\n      }, durationMs);\n    }\n    return () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    };\n  }, [errorMessage, durationMs, receipt, setIsToastVisible]);\n\n  const isInProgress =\n    !receipt &&\n    !isLoading &&\n    !transactionHash &&\n    !errorMessage &&\n    !transactionId;\n\n  if (!isToastVisible || isInProgress) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cn(\n        background.default,\n        'flex animate-enter items-center justify-between rounded-lg',\n        'p-2 shadow-[0px_8px_24px_0px_rgba(0,0,0,0.12)]',\n        '-translate-x-2/4 fixed z-20',\n        positionClass,\n        className,\n      )}\n    >\n      <div className=\"flex items-center gap-4 p-2\">{children}</div>\n      <button\n        className=\"p-2\"\n        onClick={closeToast}\n        type=\"button\"\n        data-testid=\"ockCloseButton\"\n      >\n        {closeSvg}\n      </button>\n    </div>\n  );\n}\n","import { icon } from '../../styles/theme';\n\nexport const closeSvg = (\n  <svg\n    aria-label=\"ock-closeSvg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <title>Close SVG</title>\n    <path\n      d=\"M2.14921 1L1 2.1492L6.8508 8L1 13.8508L2.1492 15L8 9.1492L13.8508 15L15 13.8508L9.14921 8L15 2.1492L13.8508 1L8 6.8508L2.14921 1Z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { useMemo } from 'react';\nimport type { ReactNode } from 'react';\nimport { useChainId } from 'wagmi';\nimport { useShowCallsStatus } from 'wagmi/experimental';\nimport { getChainExplorer } from '../../network/getChainExplorer';\nimport { cn, color, text } from '../../styles/theme';\nimport { useTransactionContext } from '../components/TransactionProvider';\n\nexport function useGetTransactionToastAction() {\n  const { chainId, errorMessage, onSubmit, transactionHash, transactionId } =\n    useTransactionContext();\n  const accountChainId = chainId ?? useChainId();\n\n  const { showCallsStatus } = useShowCallsStatus();\n\n  return useMemo(() => {\n    const chainExplorer = getChainExplorer(accountChainId);\n\n    let actionElement: ReactNode = null;\n\n    // EOA will have txn hash\n    if (transactionHash) {\n      actionElement = (\n        <a\n          href={`${chainExplorer}/tx/${transactionHash}`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <span className={cn(text.label1, color.primary)}>\n            View transaction\n          </span>\n        </a>\n      );\n    }\n\n    // SW will have txn id\n    if (transactionId) {\n      actionElement = (\n        <button\n          onClick={() => showCallsStatus({ id: transactionId })}\n          type=\"button\"\n        >\n          <span className={cn(text.label1, color.primary)}>\n            View transaction\n          </span>\n        </button>\n      );\n    }\n\n    if (errorMessage) {\n      actionElement = (\n        <button type=\"button\" onClick={onSubmit}>\n          <span className={cn(text.label1, color.primary)}>Try again</span>\n        </button>\n      );\n    }\n\n    return { actionElement };\n  }, [\n    accountChainId,\n    errorMessage,\n    onSubmit,\n    showCallsStatus,\n    transactionHash,\n    transactionId,\n  ]);\n}\n","import { useMemo } from 'react';\nimport { Spinner } from '../../internal/components/Spinner';\nimport { errorSvg } from '../../internal/svg/errorSvg';\nimport { successSvg } from '../../internal/svg/successSvg';\nimport { cn, text } from '../../styles/theme';\nimport type { TransactionToastIconReact } from '../types';\nimport { useTransactionContext } from './TransactionProvider';\n\nexport function TransactionToastIcon({ className }: TransactionToastIconReact) {\n  const { errorMessage, isLoading, receipt, transactionHash, transactionId } =\n    useTransactionContext();\n  const isInProgress = isLoading || !!transactionId || !!transactionHash;\n\n  const icon = useMemo(() => {\n    // txn successful\n    if (receipt) {\n      return successSvg;\n    }\n    if (errorMessage) {\n      return errorSvg;\n    }\n    if (isInProgress) {\n      return <Spinner className=\"px-1.5 py-1.5\" />;\n    }\n    return null;\n  }, [isInProgress, errorMessage, receipt]);\n\n  if (!icon) {\n    return null;\n  }\n\n  return <div className={cn(text.label2, className)}>{icon}</div>;\n}\n","import { useMemo } from 'react';\nimport { color } from '../../styles/theme';\nimport { useTransactionContext } from '../components/TransactionProvider';\n\nexport function useGetTransactionToastLabel() {\n  const {\n    errorMessage,\n    isLoading,\n    lifecycleStatus,\n    receipt,\n    transactionHash,\n    transactionId,\n  } = useTransactionContext();\n\n  // user confirmed in wallet, txn in progress\n  const isInProgress = isLoading || !!transactionId || !!transactionHash;\n\n  // waiting for calls or contracts promise to resolve\n  const isBuildingTransaction =\n    lifecycleStatus.statusName === 'buildingTransaction';\n\n  return useMemo(() => {\n    let label = '';\n    let labelClassName: string = color.foregroundMuted;\n\n    if (isBuildingTransaction) {\n      label = 'Building transaction';\n    }\n\n    if (isInProgress) {\n      label = 'Transaction in progress';\n    }\n\n    if (receipt) {\n      label = 'Successful';\n    }\n\n    if (errorMessage) {\n      label = 'Something went wrong';\n      labelClassName = color.error;\n    }\n\n    return { label, labelClassName };\n  }, [errorMessage, isBuildingTransaction, isInProgress, receipt]);\n}\n","import { cn, color, text } from '../../styles/theme';\nimport type { TransactionSponsorReact } from '../types';\nimport { useTransactionContext } from './TransactionProvider';\n\nexport function TransactionSponsor({ className }: TransactionSponsorReact) {\n  const {\n    errorMessage,\n    lifecycleStatus,\n    paymasterUrl,\n    receipt,\n    transactionHash,\n    transactionId,\n  } = useTransactionContext();\n\n  const transactionInProgress = transactionId || transactionHash;\n  if (\n    lifecycleStatus.statusName !== 'init' ||\n    !paymasterUrl ||\n    errorMessage ||\n    transactionInProgress ||\n    receipt\n  ) {\n    return null;\n  }\n\n  return (\n    <div className={cn(text.label2, 'flex', className)}>\n      <p className={color.foregroundMuted}>Zero transaction fee</p>\n    </div>\n  );\n}\n","import { cn } from '../../styles/theme';\nimport type { TransactionStatusReact } from '../types';\n\nexport function TransactionStatus({\n  children,\n  className,\n}: TransactionStatusReact) {\n  return (\n    <div className={cn('flex justify-between', className)}>{children}</div>\n  );\n}\n","import { useMemo } from 'react';\nimport type { ReactNode } from 'react';\nimport { useChainId } from 'wagmi';\nimport { useShowCallsStatus } from 'wagmi/experimental';\nimport { getChainExplorer } from '../../network/getChainExplorer';\nimport { cn, color, text } from '../../styles/theme';\nimport { useTransactionContext } from '../components/TransactionProvider';\n\nexport function useGetTransactionStatusAction() {\n  const { chainId, receipt, transactionHash, transactionId } =\n    useTransactionContext();\n  const accountChainId = chainId ?? useChainId();\n\n  const { showCallsStatus } = useShowCallsStatus();\n\n  return useMemo(() => {\n    const chainExplorer = getChainExplorer(accountChainId);\n\n    let actionElement: ReactNode = null;\n\n    // EOA will have txn hash\n    if (transactionHash) {\n      actionElement = (\n        <a\n          href={`${chainExplorer}/tx/${transactionHash}`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <span className={cn(text.label1, color.primary)}>\n            View transaction\n          </span>\n        </a>\n      );\n    }\n\n    // SW will have txn id\n    if (transactionId) {\n      actionElement = (\n        <button\n          onClick={() => showCallsStatus({ id: transactionId })}\n          type=\"button\"\n        >\n          <span className={cn(text.label1, color.primary)}>\n            View transaction\n          </span>\n        </button>\n      );\n    }\n\n    if (receipt) {\n      actionElement = null;\n    }\n\n    return { actionElement };\n  }, [\n    accountChainId,\n    receipt,\n    showCallsStatus,\n    transactionHash,\n    transactionId,\n  ]);\n}\n","import { cn, text } from '../../styles/theme';\nimport { useGetTransactionStatusAction } from '../hooks/useGetTransactionStatusAction';\nimport type { TransactionStatusActionReact } from '../types';\n\nexport function TransactionStatusAction({\n  className,\n}: TransactionStatusActionReact) {\n  const { actionElement } = useGetTransactionStatusAction();\n\n  return (\n    <div className={cn(text.label2, 'min-w-[70px]', className)}>\n      {actionElement}\n    </div>\n  );\n}\n","import { useMemo } from 'react';\nimport { color } from '../../styles/theme';\nimport { useTransactionContext } from '../components/TransactionProvider';\n\nexport function useGetTransactionStatusLabel() {\n  const {\n    errorMessage,\n    isLoading,\n    receipt,\n    lifecycleStatus,\n    transactionHash,\n    transactionId,\n  } = useTransactionContext();\n  // user confirmed in wallet, txn in progress\n  const isInProgress = isLoading || !!transactionId || !!transactionHash;\n\n  // user started txn and needs to confirm in wallet\n  const isPending = lifecycleStatus.statusName === 'transactionPending';\n\n  // waiting for calls or contracts promise to resolve\n  const isBuildingTransaction =\n    lifecycleStatus.statusName === 'buildingTransaction';\n\n  return useMemo(() => {\n    let label = '';\n    let labelClassName: string = color.foregroundMuted;\n\n    if (isBuildingTransaction) {\n      label = 'Building transaction...';\n    }\n\n    if (isPending) {\n      label = 'Confirm in wallet.';\n    }\n\n    if (isInProgress) {\n      label = 'Transaction in progress...';\n    }\n\n    if (receipt) {\n      label = 'Successful';\n    }\n\n    if (errorMessage) {\n      label = errorMessage;\n      labelClassName = color.error;\n    }\n\n    return { label, labelClassName };\n  }, [errorMessage, isBuildingTransaction, isInProgress, isPending, receipt]);\n}\n","import { cn, text } from '../../styles/theme';\nimport { useGetTransactionStatusLabel } from '../hooks/useGetTransactionStatusLabel';\nimport type { TransactionStatusLabelReact } from '../types';\n\nexport function TransactionStatusLabel({\n  className,\n}: TransactionStatusLabelReact) {\n  const { label, labelClassName } = useGetTransactionStatusLabel();\n\n  return (\n    <div className={cn(text.label2, className)}>\n      <p className={labelClassName}>{label}</p>\n    </div>\n  );\n}\n","import { ConnectButton as ConnectButtonRainbowKit } from '@rainbow-me/rainbowkit';\nimport { Children, isValidElement, useCallback, useMemo } from 'react';\nimport type { ReactNode } from 'react';\nimport { useAccount, useConnect } from 'wagmi';\nimport { IdentityProvider } from '../../identity/components/IdentityProvider';\nimport { Spinner } from '../../internal/components/Spinner';\nimport { findComponent } from '../../internal/utils/findComponent';\nimport {\n  border,\n  cn,\n  color,\n  text as dsText,\n  pressable,\n} from '../../styles/theme';\nimport type { ConnectWalletReact } from '../types';\nimport { ConnectButton } from './ConnectButton';\nimport { ConnectWalletText } from './ConnectWalletText';\nimport { useWalletContext } from './WalletProvider';\n\nexport function ConnectWallet({\n  children,\n  className,\n  // In a few version we will officially deprecate this prop,\n  // but for now we will keep it for backward compatibility.\n  text = 'Connect Wallet',\n  withWalletAggregator = false,\n}: ConnectWalletReact) {\n  // Core Hooks\n  const { isOpen, setIsOpen } = useWalletContext();\n  const { address: accountAddress, status } = useAccount();\n  const { connectors, connect, status: connectStatus } = useConnect();\n\n  // Get connectWalletText from children when present,\n  // this is used to customize the connect wallet button text\n  const { connectWalletText } = useMemo(() => {\n    const childrenArray = Children.toArray(children);\n    return {\n      connectWalletText: childrenArray.find(findComponent(ConnectWalletText)),\n    };\n  }, [children]);\n\n  // Remove connectWalletText from children if present\n  const childrenWithoutConnectWalletText = useMemo(() => {\n    return Children.map(children, (child: ReactNode) => {\n      if (isValidElement(child) && child.type === ConnectWalletText) {\n        return null;\n      }\n      return child;\n    });\n  }, [children]);\n\n  // Wallet connect status\n  const connector = connectors[0];\n  const isLoading = connectStatus === 'pending' || status === 'connecting';\n\n  // Handles\n  const handleToggle = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n\n  console.log('demo Noegf');\n\n  if (status === 'disconnected') {\n    if (withWalletAggregator) {\n      return (\n        <ConnectButtonRainbowKit.Custom>\n          {({ openConnectModal }) => (\n            <div className=\"flex\" data-testid=\"ockConnectWallet_Container\">\n              <ConnectButton\n                className={className}\n                connectWalletText={connectWalletText}\n                onClick={() => openConnectModal()}\n                text={text}\n              />\n            </div>\n          )}\n        </ConnectButtonRainbowKit.Custom>\n      );\n    }\n    return (\n      <div className=\"flex\" data-testid=\"ockConnectWallet_Container\">\n        <ConnectButton\n          className={className}\n          connectWalletText={connectWalletText}\n          onClick={() => connect({ connector })}\n          text={text}\n        />\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"flex\" data-testid=\"ockConnectWallet_Container\">\n        <button\n          type=\"button\"\n          data-testid=\"ockConnectAccountButtonInner\"\n          className={cn(\n            pressable.primary,\n            dsText.headline,\n            color.inverse,\n            'inline-flex min-w-[153px] items-center justify-center rounded-xl px-4 py-3',\n            pressable.disabled,\n            className,\n          )}\n          disabled={true}\n        >\n          <Spinner />\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <IdentityProvider address={accountAddress}>\n      <div className=\"flex gap-4\" data-testid=\"ockConnectWallet_Container\">\n        <button\n          type=\"button\"\n          data-testid=\"ockConnectWallet_Connected\"\n          className={cn(\n            pressable.secondary,\n            border.radius,\n            color.foreground,\n            'px-4 py-3',\n            isOpen && 'ock-bg-secondary-active hover:ock-bg-secondary-active',\n            className,\n          )}\n          onClick={handleToggle}\n        >\n          <div className=\"flex gap-2\">{childrenWithoutConnectWalletText}</div>\n        </button>\n      </div>\n    </IdentityProvider>\n  );\n}\n","import {\n  border,\n  cn,\n  color,\n  text as dsText,\n  pressable,\n} from '../../styles/theme';\nimport type { ConnectButtonReact } from '../types';\n\nexport function ConnectButton({\n  className,\n  connectWalletText,\n  onClick,\n  // Text will be deprecated in the future\n  text,\n}: ConnectButtonReact) {\n  return (\n    <button\n      type=\"button\"\n      data-testid=\"ockConnectButton\"\n      className={cn(\n        pressable.primary,\n        border.radius,\n        dsText.headline,\n        color.inverse,\n        'inline-flex min-w-[153px] items-center justify-center px-4 py-3',\n        className,\n      )}\n      onClick={onClick}\n    >\n      {connectWalletText ? (\n        connectWalletText\n      ) : (\n        <span className={cn(color.inverse)}>{text}</span>\n      )}\n    </button>\n  );\n}\n","import { cn, color, text as dsText } from '../../styles/theme';\nimport type { ConnectWalletTextReact } from '../types';\n\nexport function ConnectWalletText({\n  children,\n  className,\n}: ConnectWalletTextReact) {\n  return (\n    <span className={cn(dsText.headline, color.inverse, className)}>\n      {children}\n    </span>\n  );\n}\n","import { createContext, useContext, useState } from 'react';\nimport type { ReactNode } from 'react';\nimport { useValue } from '../../internal/hooks/useValue';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport type { WalletContextType } from '../types';\n\nconst emptyContext = {} as WalletContextType;\n\nconst WalletContext = createContext<WalletContextType>(emptyContext);\n\ntype WalletProviderReact = {\n  children: ReactNode;\n};\n\nexport function WalletProvider({ children }: WalletProviderReact) {\n  const { chain } = useOnchainKit();\n  const [isOpen, setIsOpen] = useState(false);\n  const value = useValue({\n    isOpen,\n    chain,\n    setIsOpen,\n  });\n  return (\n    <WalletContext.Provider value={value}>{children}</WalletContext.Provider>\n  );\n}\n\nexport function useWalletContext() {\n  return useContext(WalletContext);\n}\n","import { Children, useEffect, useMemo, useRef } from 'react';\nimport { findComponent } from '../../internal/utils/findComponent';\nimport { cn } from '../../styles/theme';\nimport { useIsMounted } from '../../useIsMounted';\nimport { useTheme } from '../../useTheme';\nimport type { WalletReact } from '../types';\nimport { ConnectWallet } from './ConnectWallet';\nimport { WalletDropdown } from './WalletDropdown';\nimport { WalletProvider, useWalletContext } from './WalletProvider';\n\nconst WalletContent = ({ children, className }: WalletReact) => {\n  const { isOpen, setIsOpen } = useWalletContext();\n  const walletContainerRef = useRef<HTMLDivElement>(null);\n\n  const { connect, dropdown } = useMemo(() => {\n    const childrenArray = Children.toArray(children);\n    return {\n      connect: childrenArray.find(findComponent(ConnectWallet)),\n      dropdown: childrenArray.find(findComponent(WalletDropdown)),\n    };\n  }, [children]);\n\n  // Handle clicking outside the wallet component to close the dropdown.\n  useEffect(() => {\n    const handleClickOutsideComponent = (event: MouseEvent) => {\n      if (\n        walletContainerRef.current &&\n        !walletContainerRef.current.contains(event.target as Node) &&\n        isOpen\n      ) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('click', handleClickOutsideComponent);\n    return () =>\n      document.removeEventListener('click', handleClickOutsideComponent);\n  }, [isOpen, setIsOpen]);\n\n  return (\n    <div\n      ref={walletContainerRef}\n      className={cn('relative w-fit shrink-0', className)}\n    >\n      {connect}\n      {isOpen && dropdown}\n    </div>\n  );\n};\n\nexport const Wallet = ({ children, className }: WalletReact) => {\n  const componentTheme = useTheme();\n  const isMounted = useIsMounted();\n\n  // prevents SSR hydration issue\n  if (!isMounted) {\n    return null;\n  }\n\n  return (\n    <WalletProvider>\n      <WalletContent className={cn(componentTheme, className)}>\n        {children}\n      </WalletContent>\n    </WalletProvider>\n  );\n};\n","import { Children, cloneElement, isValidElement, useMemo } from 'react';\nimport { useAccount } from 'wagmi';\nimport { Identity } from '../../identity/components/Identity';\nimport { cn, color, pressable } from '../../styles/theme';\nimport { useBreakpoints } from '../../useBreakpoints';\nimport type { WalletDropdownReact } from '../types';\nimport { WalletBottomSheet } from './WalletBottomSheet';\n\nexport function WalletDropdown({ children, className }: WalletDropdownReact) {\n  const breakpoint = useBreakpoints();\n  const { address } = useAccount();\n\n  const childrenArray = useMemo(() => {\n    return Children.toArray(children).map((child) => {\n      if (isValidElement(child) && child.type === Identity) {\n        // @ts-ignore\n        return cloneElement(child, { address });\n      }\n      return child;\n    });\n  }, [children, address]);\n\n  if (!address) {\n    return null;\n  }\n\n  if (!breakpoint) {\n    return null;\n  }\n\n  if (breakpoint === 'sm') {\n    return (\n      <WalletBottomSheet className={className}>{children}</WalletBottomSheet>\n    );\n  }\n\n  return (\n    <div\n      className={cn(\n        pressable.default,\n        color.foreground,\n        'absolute right-0 z-10 mt-1 flex w-max min-w-[300px] flex-col overflow-hidden rounded-xl',\n        className,\n      )}\n      data-testid=\"ockWalletDropdown\"\n    >\n      {childrenArray}\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\n\n// Tailwind breakpoints\nconst BREAKPOINTS = {\n  sm: '(max-width: 640px)',\n  md: '(min-width: 641px) and (max-width: 768px)',\n  lg: '(min-width: 769px) and (max-width: 1023px)',\n  xl: '(min-width: 1024px) and (max-width: 1279px)',\n  '2xl': '(min-width: 1280px)',\n};\n\nexport function useBreakpoints() {\n  const [currentBreakpoint, setCurrentBreakpoint] = useState<\n    string | undefined\n  >(undefined);\n\n  // handles SSR case where window would be undefined,\n  // once component mounts on client, hook sets correct breakpoint\n  useEffect(() => {\n    // get the current breakpoint based on media queries\n    const getCurrentBreakpoint = () => {\n      const entries = Object.entries(BREAKPOINTS) as [string, string][];\n      for (const [key, query] of entries) {\n        if (window.matchMedia(query).matches) {\n          return key;\n        }\n      }\n      return 'md';\n    };\n\n    // set initial breakpoint\n    setCurrentBreakpoint(getCurrentBreakpoint());\n\n    // listen changes in the window size\n    const handleResize = () => {\n      setCurrentBreakpoint(getCurrentBreakpoint());\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return currentBreakpoint;\n}\n","import {\n  Children,\n  cloneElement,\n  isValidElement,\n  useCallback,\n  useMemo,\n} from 'react';\nimport { useAccount } from 'wagmi';\nimport { Identity } from '../../identity/components/Identity';\nimport { background, cn } from '../../styles/theme';\nimport type { WalletBottomSheetReact } from '../types';\nimport { useWalletContext } from './WalletProvider';\n\nexport function WalletBottomSheet({\n  children,\n  className,\n}: WalletBottomSheetReact) {\n  const { isOpen, setIsOpen } = useWalletContext();\n  const { address } = useAccount();\n\n  const childrenArray = useMemo(() => {\n    return Children.toArray(children).map((child) => {\n      if (isValidElement(child) && child.type === Identity) {\n        // @ts-ignore\n        return cloneElement(child, { address });\n      }\n      return child;\n    });\n  }, [children, address]);\n\n  const handleOverlayClick = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const handleEscKeyPress = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (event.key === 'Escape') {\n        setIsOpen(false);\n      }\n    },\n    [setIsOpen],\n  );\n\n  if (!address) {\n    return null;\n  }\n\n  return (\n    <>\n      {isOpen && (\n        <div\n          className=\"fixed inset-0 z-40 bg-black bg-opacity-20\"\n          onClick={handleOverlayClick}\n          onKeyDown={handleEscKeyPress}\n          role=\"button\"\n          tabIndex={0}\n        />\n      )}\n      <div\n        className={cn(\n          background.default,\n          'fixed right-0 bottom-0 left-0 z-50',\n          'transform rounded-[20px_20px_0_0] p-4 transition-transform',\n          `${isOpen ? 'translate-y-0' : 'translate-y-full'}`,\n          className,\n        )}\n        data-testid=\"ockWalletBottomSheet\"\n      >\n        {childrenArray}\n      </div>\n    </>\n  );\n}\n","import { useCallback } from 'react';\nimport { useDisconnect } from 'wagmi';\nimport { disconnectSvg } from '../../internal/svg/disconnectSvg';\nimport { cn, color, text as dsText, pressable } from '../../styles/theme';\nimport type { WalletDropdownDisconnectReact } from '../types';\n\nexport function WalletDropdownDisconnect({\n  className,\n  text = 'Disconnect',\n}: WalletDropdownDisconnectReact) {\n  const { disconnect, connectors } = useDisconnect();\n  const handleDisconnect = useCallback(() => {\n    // Disconnect all the connectors (wallets). Usually only one is connected\n    connectors.map((connector) => disconnect({ connector }));\n  }, [disconnect, connectors]);\n\n  return (\n    <button\n      type=\"button\"\n      className={cn(\n        pressable.default,\n        color.foreground,\n        'relative flex w-full items-center px-4 pt-3 pb-4',\n        className,\n      )}\n      onClick={handleDisconnect}\n    >\n      <div className=\"absolute left-4 flex h-[1.125rem] w-[1.125rem] items-center justify-center\">\n        {disconnectSvg}\n      </div>\n      <span className={cn(dsText.body, 'pl-6')}>{text}</span>\n    </button>\n  );\n}\n","import { icon } from '../../styles/theme';\n\nexport const disconnectSvg = (\n  <svg\n    role=\"img\"\n    aria-label=\"ock-disconnect-svg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 16 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M11.0668 0.91803L11.0668 2.93852L2.02049 2.93852L2.02049 15.0615L11.0668 15.0615L11.0668 17.082L-7.06549e-07 17.082L0 0.918029L11.0668 0.91803Z\"\n      className={icon.foreground}\n    />\n    <path\n      d=\"M12.3273 12.8963L16.0002 9.02606L12.346 4.95902L10.843 6.30941L12.3623 8.00032L5.53321 8.00032L5.53321 10.0208L12.2706 10.0208L10.8617 11.5054L12.3273 12.8963Z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { isValidElement, useMemo } from 'react';\nimport { coinbasePaySvg } from '../svg/coinbasePaySvg';\nimport { fundWalletSvg } from '../svg/fundWallet';\nimport { swapSettingsSvg } from '../svg/swapSettings';\nimport { walletSvg } from '../svg/walletSvg';\n\nexport const useIcon = ({ icon }: { icon?: React.ReactNode }) => {\n  return useMemo(() => {\n    if (icon === undefined) {\n      return null;\n    }\n    switch (icon) {\n      case 'coinbasePay':\n        return coinbasePaySvg;\n      case 'fundWallet':\n        return fundWalletSvg;\n      case 'swapSettings':\n        return swapSettingsSvg;\n      case 'wallet':\n        return walletSvg;\n    }\n    if (isValidElement(icon)) {\n      return icon;\n    }\n  }, [icon]);\n};\n","import { icon } from '../../styles/theme';\n\nexport const fundWalletSvg = (\n  <svg\n    role=\"img\"\n    aria-label=\"ock-fundWalletSvg\"\n    width=\"18\"\n    height=\"18\"\n    viewBox=\"0 0 18 18\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M13.5 4.5C13.5 6.15685 14.8431 7.5 16.5 7.5V10.5C14.8431 10.5 13.5 11.8431 13.5 13.5H4.5C4.5 11.8431 3.15685 10.5 1.5 10.5L1.5 13.5V7.5C3.15685 7.5 4.5 6.15685 4.5 4.5H13.5ZM0 3V15H18V3H0ZM11.25 9C11.25 7.75736 10.2426 6.75 9 6.75C7.75736 6.75 6.75 7.75736 6.75 9C6.75 10.2426 7.75736 11.25 9 11.25C10.2426 11.25 11.25 10.2426 11.25 9Z\"\n      fill=\"#0A0B0D\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { icon } from '../../styles/theme';\n\nexport const swapSettingsSvg = (\n  <svg\n    role=\"img\"\n    aria-label=\"ock-swapSettingsSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 19 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M8.92071 5.89742e-08C8.00371 5.89742e-08 7.22171 0.663 7.07071 1.567L6.89271 2.639C6.87271 2.759 6.77771 2.899 6.59571 2.987C6.25306 3.15171 5.92344 3.34226 5.60971 3.557C5.44371 3.672 5.27571 3.683 5.15971 3.64L4.14271 3.258C3.72695 3.10224 3.26941 3.09906 2.85152 3.24904C2.43364 3.39901 2.08254 3.69241 1.86071 4.077L0.938708 5.674C0.716797 6.05836 0.638423 6.50897 0.717525 6.94569C0.796628 7.3824 1.02808 7.7769 1.37071 8.059L2.21071 8.751C2.30571 8.829 2.38071 8.98 2.36471 9.181C2.33621 9.56013 2.33621 9.94087 2.36471 10.32C2.37971 10.52 2.30571 10.672 2.21171 10.75L1.37071 11.442C1.02808 11.7241 0.796628 12.1186 0.717525 12.5553C0.638423 12.992 0.716797 13.4426 0.938708 13.827L1.86071 15.424C2.08269 15.8084 2.43387 16.1016 2.85173 16.2514C3.2696 16.4012 3.72706 16.3978 4.14271 16.242L5.16171 15.86C5.27671 15.817 5.44471 15.829 5.61171 15.942C5.92371 16.156 6.25271 16.347 6.59671 16.512C6.77871 16.6 6.87371 16.74 6.89371 16.862L7.07171 17.933C7.22271 18.837 8.00471 19.5 8.92171 19.5H10.7657C11.6817 19.5 12.4647 18.837 12.6157 17.933L12.7937 16.861C12.8137 16.741 12.9077 16.601 13.0907 16.512C13.4347 16.347 13.7637 16.156 14.0757 15.942C14.2427 15.828 14.4107 15.817 14.5257 15.86L15.5457 16.242C15.9612 16.3972 16.4183 16.4001 16.8357 16.2502C17.2532 16.1002 17.6039 15.8071 17.8257 15.423L18.7487 13.826C18.9706 13.4416 19.049 12.991 18.9699 12.5543C18.8908 12.1176 18.6593 11.7231 18.3167 11.441L17.4767 10.749C17.3817 10.671 17.3067 10.52 17.3227 10.319C17.3511 9.93987 17.3511 9.55913 17.3227 9.18C17.3067 8.98 17.3817 8.828 17.4757 8.75L18.3157 8.058C19.0237 7.476 19.2067 6.468 18.7487 5.673L17.8267 4.076C17.6047 3.69159 17.2535 3.3984 16.8357 3.24861C16.4178 3.09883 15.9604 3.10215 15.5447 3.258L14.5247 3.64C14.4107 3.683 14.2427 3.671 14.0757 3.557C13.7623 3.3423 13.433 3.15175 13.0907 2.987C12.9077 2.9 12.8137 2.76 12.7937 2.639L12.6147 1.567C12.5418 1.12906 12.3158 0.731216 11.977 0.444267C11.6383 0.157318 11.2087 -0.00011124 10.7647 5.89742e-08H8.92171H8.92071ZM9.84271 13.5C10.8373 13.5 11.7911 13.1049 12.4944 12.4017C13.1976 11.6984 13.5927 10.7446 13.5927 9.75C13.5927 8.75544 13.1976 7.80161 12.4944 7.09835C11.7911 6.39509 10.8373 6 9.84271 6C8.84815 6 7.89432 6.39509 7.19106 7.09835C6.4878 7.80161 6.09271 8.75544 6.09271 9.75C6.09271 10.7446 6.4878 11.6984 7.19106 12.4017C7.89432 13.1049 8.84815 13.5 9.84271 13.5Z\"\n      fill=\"#6B7280\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { icon } from '../../styles/theme';\n\nexport const walletSvg = (\n  <svg\n    role=\"img\"\n    aria-label=\"ock-walletSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M0 10C0 15.5222 4.47778 20 10 20C15.5222 20 20 15.5222 20 10C20 4.47778 15.5222 0 10 0C4.47778 0 0 4.47778 0 10ZM7.44444 6.77778C7.075 6.77778 6.77778 7.075 6.77778 7.44444V12.5556C6.77778 12.925 7.075 13.2222 7.44444 13.2222H12.5556C12.925 13.2222 13.2222 12.925 13.2222 12.5556V7.44444C13.2222 7.075 12.925 6.77778 12.5556 6.77778H7.44444Z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { base } from 'viem/chains';\nimport { useAccount } from 'wagmi';\nimport { useName } from '../../identity/hooks/useName';\nimport { Spinner } from '../../internal/components/Spinner';\nimport { basenameSvg } from '../../internal/svg/basenameSvg';\nimport { cn, color, pressable, text } from '../../styles/theme';\nimport type { WalletDropdownBasenameReact } from '../types';\n\nexport function WalletDropdownBasename({\n  className,\n}: WalletDropdownBasenameReact) {\n  const { address } = useAccount();\n\n  if (!address) {\n    return null;\n  }\n\n  const { data: basename, isLoading } = useName({\n    address,\n    chain: base,\n  });\n\n  const hasBaseUserName = !!basename;\n  const title = hasBaseUserName ? 'Profile' : 'Claim Basename';\n  const href = hasBaseUserName\n    ? `https://www.base.org/name/${basename}`\n    : 'https://www.base.org/names';\n\n  return (\n    <a\n      className={cn(\n        pressable.default,\n        color.foreground,\n        'relative flex items-center px-4 py-3',\n        className,\n      )}\n      href={href}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <div className=\"-translate-y-1/2 absolute top-1/2 left-4 flex h-[1.125rem] w-[1.125rem] items-center justify-center\">\n        {basenameSvg}\n      </div>\n      <div className=\"flex w-full items-center pl-6\">\n        {isLoading ? (\n          <Spinner />\n        ) : (\n          <>\n            <span className={cn(text.body)}>{title}</span>\n            {!hasBaseUserName && (\n              <span\n                className={cn(\n                  'ml-2 rounded-full bg-[#E0E7FF] px-2 py-0.5 text-center font-bold font-inter text-[#4F46E5] text-[0.6875rem] uppercase leading-none',\n                )}\n              >\n                NEW\n              </span>\n            )}\n          </>\n        )}\n      </div>\n    </a>\n  );\n}\n","import { icon } from '../../styles/theme';\n\nexport const basenameSvg = (\n  <svg\n    data-testid=\"ock-basenameSvg\"\n    role=\"img\"\n    aria-label=\"ock-basenameSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 20 20\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    className=\"h-full w-full\"\n  >\n    <g id=\"Icons/User\">\n      <path\n        id=\"Vector\"\n        d=\"M10 20C4.47715 20 0 15.5228 0 10C0 4.47715 4.47715 0 10 0C15.5228 0 20 4.47715 20 10C20 15.5228 15.5228 20 10 20ZM12.832 6.9987C12.832 5.43461 11.5641 4.16666 10 4.16666C8.43594 4.16666 7.168 5.43461 7.168 6.9987C7.168 8.56279 8.43594 9.83073 10 9.83073C11.5641 9.83073 12.832 8.56279 12.832 6.9987ZM5.67266 11.6810L4.76738 14.0938C6.10704 15.4238 7.95093 16.2465 9.98699 16.2500L10.0130 16.2500C12.0491 16.2465 13.8930 15.4238 15.2326 14.0938L14.3273 11.6810C14.0026 10.8125 13.1794 10.2385 12.2581 10.2159C12.2279 10.2385 11.2310 10.9635 10.0000 10.9635C8.76903 10.9635 7.77215 10.2385 7.74194 10.2159C6.82059 10.2310 5.9974 10.8125 5.67266 11.6810Z\"\n        className={icon.foreground}\n      />\n    </g>\n  </svg>\n);\n","import { useCallback, useMemo } from 'react';\nimport { useGetFundingUrl } from '../../fund/hooks/useGetFundingUrl';\nimport { getFundingPopupSize } from '../../fund/utils/getFundingPopupSize';\nimport { useIcon } from '../../internal/hooks/useIcon';\nimport { openPopup } from '../../internal/utils/openPopup';\nimport { cn, color, pressable, text as themeText } from '../../styles/theme';\nimport type { WalletDropdownFundLinkReact } from '../types';\n\nexport function WalletDropdownFundLink({\n  className,\n  fundingUrl,\n  icon = 'fundWallet',\n  openIn = 'popup',\n  popupSize = 'md',\n  rel,\n  target,\n  text = 'Fund wallet',\n}: WalletDropdownFundLinkReact) {\n  // If we can't get a funding URL, this component will be a no-op and render a disabled link\n  const fundingUrlToRender = fundingUrl ?? useGetFundingUrl();\n  const iconSvg = useIcon({ icon });\n\n  const handleClick = useCallback(\n    (e: React.MouseEvent) => {\n      e.preventDefault();\n      if (fundingUrlToRender) {\n        const { height, width } = getFundingPopupSize(\n          popupSize,\n          fundingUrlToRender,\n        );\n        openPopup({\n          url: fundingUrlToRender,\n          height,\n          width,\n          target,\n        });\n      }\n    },\n    [fundingUrlToRender, popupSize, target],\n  );\n\n  const overrideClassName = cn(\n    pressable.default,\n    color.foreground,\n    // Disable hover effects if there is no funding URL\n    !fundingUrlToRender && 'pointer-events-none',\n    'relative flex items-center px-4 py-3 w-full',\n    className,\n  );\n\n  const linkContent = useMemo(\n    () => (\n      // We put disabled on the content wrapper rather than the button/link because we dont wan't to change the\n      // background color of the dropdown item, just the text and icon\n      <span className={cn(!fundingUrlToRender && pressable.disabled)}>\n        <div className=\"-translate-y-1/2 absolute top-1/2 left-4 flex h-[1.125rem] w-[1.125rem] items-center justify-center\">\n          {iconSvg}\n        </div>\n        <span className={cn(themeText.body, 'pl-6')}>{text}</span>\n      </span>\n    ),\n    [fundingUrlToRender, iconSvg, text],\n  );\n\n  if (openIn === 'tab') {\n    return (\n      <a\n        className={overrideClassName}\n        href={fundingUrlToRender}\n        target={target}\n        rel={rel}\n      >\n        {linkContent}\n      </a>\n    );\n  }\n\n  return (\n    <button type=\"button\" className={overrideClassName} onClick={handleClick}>\n      {linkContent}\n    </button>\n  );\n}\n","import { useMemo } from 'react';\nimport { useAccount } from 'wagmi';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport { useIsWalletACoinbaseSmartWallet } from '../../wallet/hooks/useIsWalletACoinbaseSmartWallet';\nimport { getCoinbaseSmartWalletFundUrl } from '../utils/getCoinbaseSmartWalletFundUrl';\nimport { getOnrampBuyUrl } from '../utils/getOnrampBuyUrl';\n\n/**\n * Gets the correct funding URL based on the connected wallet. If a Coinbase Smart Wallet is connected it will send the\n * user to keys.coinbase.com, otherwise it will send them to pay.coinbase.com.\n * @returns the funding URL and optional popup dimensions if the URL requires them\n */\nexport function useGetFundingUrl(): string | undefined {\n  const { projectId, chain: defaultChain } = useOnchainKit();\n  const { address, chain: accountChain } = useAccount();\n  const isCoinbaseSmartWallet = useIsWalletACoinbaseSmartWallet();\n\n  // If the connected wallet's active chain is not included in the Wagmi config, accountChain will be undefined. If this\n  // is the case, fall back to the default chain specified in the OnchainKit config.\n  const chain = accountChain || defaultChain;\n\n  return useMemo(() => {\n    if (isCoinbaseSmartWallet) {\n      return getCoinbaseSmartWalletFundUrl();\n    }\n\n    if (projectId === null || address === undefined) {\n      return undefined;\n    }\n\n    return getOnrampBuyUrl({\n      projectId,\n      addresses: { [address]: [chain.name.toLowerCase()] },\n    });\n  }, [isCoinbaseSmartWallet, projectId, address, chain]);\n}\n","import { useAccount } from 'wagmi';\nimport { useCapabilitiesSafe } from '../../internal/hooks/useCapabilitiesSafe';\nimport { useOnchainKit } from '../../useOnchainKit';\n\n// From https://github.com/wevm/wagmi/blob/472993b3c0d5941e524e67a0f51b32af5bb9e48f/packages/connectors/src/coinbaseWallet.ts#L90\nconst COINBASE_WALLET_SDK_CONNECTOR_ID = 'coinbaseWalletSDK';\n\n/**\n * Checks the wallet connector ID and the wallet capabilities to determine if the currently connected wallet is a\n * Coinbase Smart Wallet.\n * @returns true if the wallet is a Coinbase Smart Wallet, false otherwise.\n */\nexport function useIsWalletACoinbaseSmartWallet(): boolean {\n  const { chain } = useOnchainKit();\n  const { connector } = useAccount();\n  const walletCapabilities = useCapabilitiesSafe({\n    chainId: chain.id,\n  });\n\n  return (\n    connector?.id === COINBASE_WALLET_SDK_CONNECTOR_ID &&\n    walletCapabilities.atomicBatch?.supported === true\n  );\n}\n","import { ENTRYPOINT_ADDRESS_V06 } from 'permissionless';\nimport type { IsValidAAEntrypointOptions } from '../types';\n\n/**\n * Verify the Account-Abstraction entrypoint before sponsoring a transaction.\n */\nexport function isValidAAEntrypoint({\n  entrypoint,\n}: IsValidAAEntrypointOptions): boolean {\n  if (entrypoint.toLowerCase() !== ENTRYPOINT_ADDRESS_V06.toLowerCase()) {\n    return false;\n  }\n  return true;\n}\n","import { checksumAddress, decodeAbiParameters } from 'viem';\nimport type { Address, BlockTag, Hex } from 'viem';\nimport {\n  CB_SW_FACTORY_ADDRESS,\n  CB_SW_PROXY_BYTECODE,\n  CB_SW_V1_IMPLEMENTATION_ADDRESS,\n  ERC_1967_PROXY_IMPLEMENTATION_SLOT,\n} from '../constants';\nimport type {\n  IsWalletACoinbaseSmartWalletOptions,\n  IsWalletACoinbaseSmartWalletResponse,\n} from '../types';\n\n/**\n * Validates a User Operation by checking if the sender address\n * is a proxy with the expected bytecode.\n */\nexport async function isWalletACoinbaseSmartWallet({\n  client,\n  userOp,\n}: IsWalletACoinbaseSmartWalletOptions): Promise<IsWalletACoinbaseSmartWalletResponse> {\n  try {\n    const code = await client.getBytecode({ address: userOp.sender });\n\n    if (!code) {\n      // no code at address, check that the initCode is deploying a Coinbase Smart Wallet\n      // factory address is first 20 bytes of initCode after '0x'\n      const factoryAddress = userOp.initCode.slice(0, 42) as Address;\n      if (\n        checksumAddress(factoryAddress) !==\n        checksumAddress(CB_SW_FACTORY_ADDRESS)\n      ) {\n        return {\n          isCoinbaseSmartWallet: false,\n          error: 'Invalid factory address',\n          code: 'W_ERR_1',\n        };\n      }\n      return { isCoinbaseSmartWallet: true };\n    }\n\n    // Verify if the sender address bytecode matches the Coinbase Smart Wallet proxy bytecode\n    if (code !== CB_SW_PROXY_BYTECODE) {\n      return {\n        isCoinbaseSmartWallet: false,\n        error: 'Invalid bytecode',\n        code: 'W_ERR_2',\n      };\n    }\n  } catch (error) {\n    console.error('Error retrieving bytecode:', error);\n    return {\n      isCoinbaseSmartWallet: false,\n      error: 'Error retrieving bytecode',\n      code: 'W_ERR_3',\n    };\n  }\n\n  let implementation: Hex;\n  try {\n    implementation = await client.request<{\n      Parameters: [Address, Hex, BlockTag];\n      ReturnType: Hex;\n    }>({\n      method: 'eth_getStorageAt',\n      params: [userOp.sender, ERC_1967_PROXY_IMPLEMENTATION_SLOT, 'latest'],\n    });\n  } catch (error) {\n    console.error('Error retrieving implementation address:', error);\n    return {\n      isCoinbaseSmartWallet: false,\n      error: 'Error retrieving implementation address',\n      code: 'W_ERR_4',\n    };\n  }\n\n  // Decode the implementation address from the retrieved storage data\n  const implementationAddress = decodeAbiParameters(\n    [{ type: 'address' }],\n    implementation,\n  )[0];\n\n  // Verify if the implementation address matches the expected Coinbase Smart Wallet address\n  if (\n    checksumAddress(implementationAddress) !==\n    checksumAddress(CB_SW_V1_IMPLEMENTATION_ADDRESS)\n  ) {\n    return {\n      isCoinbaseSmartWallet: false,\n      error: 'Invalid implementation address',\n      code: 'W_ERR_5',\n    };\n  }\n\n  return { isCoinbaseSmartWallet: true };\n}\n","import { createContext, useContext, useEffect } from 'react';\nimport { useValue } from '../../internal/hooks/useValue';\nimport { useLifecycleStatus } from '../hooks/useLifecycleStatus';\nimport type {\n  NFTLifecycleContextType,\n  NFTLifecycleProviderReact,\n} from '../types';\n\nconst emptyContext = {} as NFTLifecycleContextType;\n\nexport const NFTLifecycleContext =\n  createContext<NFTLifecycleContextType>(emptyContext);\n\nexport function useNFTLifecycleContext() {\n  const context = useContext(NFTLifecycleContext);\n  if (context === emptyContext) {\n    throw new Error(\n      'useNFTLifecycleContext must be used within an NFTView or NFTMint component',\n    );\n  }\n  return context;\n}\n\nexport function NFTLifecycleProvider({\n  type,\n  onStatus,\n  onError,\n  onSuccess,\n  children,\n}: NFTLifecycleProviderReact) {\n  const [lifecycleStatus, updateLifecycleStatus] = useLifecycleStatus({\n    statusName: 'init',\n    statusData: null,\n  }); // Component lifecycle\n\n  // Component lifecycle emitters\n  useEffect(() => {\n    // Error\n    if (lifecycleStatus.statusName === 'error') {\n      onError?.(lifecycleStatus.statusData);\n    }\n    // Success\n    if (lifecycleStatus.statusName === 'success') {\n      onSuccess?.(lifecycleStatus.statusData?.transactionReceipts?.[0]);\n    }\n    // Emit Status\n    onStatus?.(lifecycleStatus);\n  }, [\n    onError,\n    onStatus,\n    onSuccess,\n    lifecycleStatus,\n    lifecycleStatus.statusData, // Keep statusData, so that the effect runs when it changes\n    lifecycleStatus.statusName, // Keep statusName, so that the effect runs when it changes\n  ]);\n\n  const value = useValue({\n    lifecycleStatus,\n    type,\n    updateLifecycleStatus,\n  });\n\n  return (\n    <NFTLifecycleContext.Provider value={value}>\n      {children}\n    </NFTLifecycleContext.Provider>\n  );\n}\n","import { useCallback, useState } from 'react';\nimport type { LifecycleStatus, LifecycleStatusUpdate } from '../types';\n\ntype UseLifecycleStatusReturn = [\n  lifecycleStatus: LifecycleStatus,\n  updatelifecycleStatus: (newStatus: LifecycleStatusUpdate) => void,\n];\n\nexport function useLifecycleStatus(\n  initialState: LifecycleStatus,\n): UseLifecycleStatusReturn {\n  const [lifecycleStatus, setLifecycleStatus] =\n    useState<LifecycleStatus>(initialState); // Component lifecycle\n\n  // Update lifecycle status, statusData will be persisted for the full lifecycle\n  const updateLifecycleStatus = useCallback(\n    (newStatus: LifecycleStatusUpdate) => {\n      setLifecycleStatus((prevStatus: LifecycleStatus) => {\n        // do not persist errors\n        const persistedStatusData =\n          prevStatus.statusName === 'error'\n            ? (({ error, code, message, ...statusData }) => statusData)(\n                prevStatus.statusData,\n              )\n            : prevStatus.statusData;\n        return {\n          statusName: newStatus.statusName,\n          statusData: {\n            ...persistedStatusData,\n            ...newStatus.statusData,\n          },\n        } as LifecycleStatus;\n      });\n    },\n    [],\n  );\n\n  return [lifecycleStatus, updateLifecycleStatus];\n}\n","import { Avatar, Identity, Name } from '../../../identity';\nimport { cn, color, text } from '../../../styles/theme';\nimport { useOnchainKit } from '../../../useOnchainKit';\nimport { useNFTContext } from '../NFTProvider';\n\ntype NFTMintersReact = {\n  className?: string;\n};\n\nexport function NFTMinters({ className }: NFTMintersReact) {\n  const { schemaId } = useOnchainKit();\n  const { totalOwners, recentOwners } = useNFTContext();\n\n  if (!recentOwners || recentOwners.length === 0) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cn('flex py-0.5', text.body, color.foregroundMuted, className)}\n    >\n      <div className=\"flex space-x-[-.4rem]\">\n        {recentOwners.map((address) => (\n          <Identity\n            key={address}\n            className=\"space-x-0 px-0 py-0\"\n            address={address}\n            schemaId={schemaId}\n          >\n            <Avatar className=\"h-4 w-4\" />\n          </Identity>\n        ))}\n      </div>\n      <div className=\"flex px-2\">\n        <div>Minted by</div>\n        <Identity\n          className=\"px-1 py-0\"\n          address={recentOwners[0]}\n          schemaId={schemaId}\n        >\n          <Name className=\"max-w-[180px] overflow-hidden text-ellipsis\" />\n        </Identity>\n        {totalOwners && <div>and {totalOwners} others</div>}\n      </div>\n    </div>\n  );\n}\n","import { useCallback, useState } from 'react';\nimport { TextInput } from '../../internal/components/TextInput';\nimport { background, border, cn, color, pressable } from '../../styles/theme';\n\nexport const DELAY_MS = 200;\n\ntype QuantitySelectorReact = {\n  className?: string;\n  disabled?: boolean;\n  minQuantity?: number;\n  maxQuantity?: number;\n  onChange: (s: string) => void;\n  placeholder: string;\n};\n\nexport function QuantitySelector({\n  className,\n  disabled,\n  minQuantity = 1,\n  maxQuantity = Number.MAX_SAFE_INTEGER,\n  onChange,\n  placeholder,\n}: QuantitySelectorReact) {\n  const [value, setValue] = useState(`${minQuantity}`);\n\n  // allow entering '' to enable backspace + new value, fix empty string on blur\n  const isValidQuantity = useCallback(\n    (v: string) => {\n      if (Number.parseInt(v, 10) < minQuantity) {\n        return false;\n      }\n\n      if (Number.parseInt(v, 10) > maxQuantity) {\n        return false;\n      }\n      // only numbers are valid\n      const regex = /^[0-9]*$/;\n      return regex.test(v);\n    },\n    [maxQuantity, minQuantity],\n  );\n\n  const handleIncrement = useCallback(() => {\n    const next = `${Math.min(maxQuantity, Number.parseInt(value, 10) + 1)}`;\n    setValue(next);\n    onChange(next);\n  }, [onChange, maxQuantity, value]);\n\n  const handleDecrement = useCallback(() => {\n    const next = `${Math.max(minQuantity, Number.parseInt(value, 10) - 1)}`;\n    setValue(next);\n    onChange(next);\n  }, [onChange, minQuantity, value]);\n\n  const handleOnChange = useCallback(\n    (v: string) => {\n      if (v === '') {\n        return;\n      }\n\n      onChange(v);\n    },\n    [onChange],\n  );\n\n  const handleBlur = useCallback(() => {\n    if (value === '') {\n      setValue(minQuantity.toString());\n      onChange(minQuantity.toString());\n    }\n  }, [onChange, minQuantity, value]);\n\n  const classNames = cn(\n    'h-11 w-11 rounded-lg border',\n    border.defaultActive,\n    color.foreground,\n    background.default,\n    disabled && pressable.disabled,\n  );\n\n  return (\n    <div\n      className={cn('relative flex items-center gap-1', className)}\n      data-testid=\"ockQuantitySelector\"\n    >\n      <div>\n        <button\n          aria-label=\"decrement\"\n          className={cn(classNames, pressable.default)}\n          data-testid=\"ockQuantitySelector_decrement\"\n          disabled={disabled}\n          onClick={handleDecrement}\n          type=\"button\"\n        >\n          -\n        </button>\n      </div>\n      <TextInput\n        aria-label=\"quantity\"\n        className={cn(\n          classNames,\n          'w-full text-center hover:bg-[var(--ock-bg-default-hover)] focus:bg-transparent',\n        )}\n        delayMs={DELAY_MS}\n        disabled={disabled}\n        inputValidator={isValidQuantity}\n        onBlur={handleBlur}\n        onChange={handleOnChange}\n        placeholder={placeholder}\n        setValue={setValue}\n        value={value}\n      />\n      <div>\n        <button\n          aria-label=\"increment\"\n          className={cn(classNames, pressable.default)}\n          data-testid=\"ockQuantitySelector_increment\"\n          disabled={disabled}\n          onClick={handleIncrement}\n          type=\"button\"\n        >\n          +\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { useCallback } from 'react';\nimport type { ChangeEvent } from 'react';\nimport { useDebounce } from '../hooks/useDebounce';\n\ntype TextInputReact = {\n  'aria-label'?: string;\n  className: string;\n  delayMs: number;\n  disabled?: boolean;\n  onBlur?: () => void;\n  onChange: (s: string) => void;\n  placeholder: string;\n  setValue: (s: string) => void;\n  value: string;\n  inputValidator?: (s: string) => boolean;\n};\n\nexport function TextInput({\n  'aria-label': ariaLabel,\n  className,\n  delayMs,\n  disabled = false,\n  onBlur,\n  onChange,\n  placeholder,\n  setValue,\n  value,\n  inputValidator = () => true,\n}: TextInputReact) {\n  const handleDebounce = useDebounce((value) => {\n    onChange(value);\n  }, delayMs);\n\n  const handleChange = useCallback(\n    (evt: ChangeEvent<HTMLInputElement>) => {\n      const value = evt.target.value;\n\n      if (inputValidator(value)) {\n        setValue(value);\n        if (delayMs > 0) {\n          handleDebounce(value);\n        } else {\n          onChange(value);\n        }\n      }\n    },\n    [onChange, handleDebounce, delayMs, setValue, inputValidator],\n  );\n\n  return (\n    <input\n      aria-label={ariaLabel}\n      data-testid=\"ockTextInput_Input\"\n      type=\"text\"\n      className={className}\n      placeholder={placeholder}\n      value={value}\n      onBlur={onBlur}\n      onChange={handleChange}\n      disabled={disabled}\n    />\n  );\n}\n","import { useLayoutEffect, useMemo, useRef } from 'react';\n\nexport const useDebounce = (\n  callback: (...args: any[]) => void,\n  delay: number,\n) => {\n  const callbackRef = useRef(callback);\n\n  useLayoutEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  let timer: number | NodeJS.Timeout;\n\n  const debounce = (\n    func: (...args: any[]) => void,\n    delayMs: number,\n    ...args: any[]\n  ) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func(...args);\n    }, delayMs);\n  };\n\n  return useMemo(() => {\n    return (...args: any) => {\n      return debounce(callbackRef.current, delay, ...args);\n    };\n  }, [delay]);\n};\n","import { QuantitySelector } from '../../../internal/components/QuantitySelector';\nimport { cn } from '../../../styles/theme';\nimport { useNFTContext } from '../NFTProvider';\n\ntype NFTQuantitySelectorReact = {\n  className?: string;\n};\n\nexport function NFTQuantitySelector({ className }: NFTQuantitySelectorReact) {\n  const { maxMintsPerWallet, setQuantity } = useNFTContext();\n\n  // if max is 1, no need to show quantity selector\n  if (maxMintsPerWallet === 1) {\n    return null;\n  }\n\n  return (\n    <div className={cn('py-3', className)}>\n      <QuantitySelector\n        className={className}\n        onChange={setQuantity}\n        minQuantity={1}\n        maxQuantity={maxMintsPerWallet}\n        placeholder=\"\"\n      />\n    </div>\n  );\n}\n","export function multiplyFloats(...numbers: number[]) {\n  if (numbers.length === 1) {\n    return numbers[0];\n  }\n\n  // multiply ints and count decimals\n  const { result, decimalPlaces } = numbers.reduce(\n    (acc, num) => {\n      const str = num.toString();\n      const currentDecimalPlaces = (str.split('.')[1] || '').length;\n      const integer = Number(str.replace('.', ''));\n\n      return {\n        result: acc.result * integer,\n        decimalPlaces: acc.decimalPlaces + currentDecimalPlaces,\n      };\n    },\n    { result: 1, decimalPlaces: 0 },\n  );\n\n  // convert back to float with correct decimal places\n  return result / 10 ** decimalPlaces;\n}\n","import type { FormatAmountOptions, FormatAmountResponse } from '../types';\n\n/**\n * Retrieves a list of tokens on Base.\n */\nexport function formatAmount(\n  amount: string | undefined,\n  options: FormatAmountOptions = {},\n): FormatAmountResponse {\n  if (amount === undefined) {\n    return '';\n  }\n\n  const { locale, minimumFractionDigits, maximumFractionDigits } = options;\n\n  return Number(amount).toLocaleString(locale, {\n    minimumFractionDigits,\n    maximumFractionDigits,\n  });\n}\n","import { multiplyFloats } from '../../../internal/utils/multiplyFloats';\nimport { cn, text } from '../../../styles/theme';\nimport { formatAmount } from '../../../token/utils/formatAmount';\nimport { useNFTContext } from '../NFTProvider';\n\ntype NFTAssetCostReact = {\n  className?: string;\n};\n\nexport function NFTAssetCost({ className }: NFTAssetCostReact) {\n  const { price, quantity } = useNFTContext();\n\n  if (\n    price?.amount === undefined ||\n    !price.currency ||\n    price.amountUSD === undefined\n  ) {\n    return null;\n  }\n\n  if (price?.amount === 0) {\n    return <div className={cn('flex py-2', text.body, className)}>Free</div>;\n  }\n\n  return (\n    <div className={cn('flex py-2', text.body, className)}>\n      <div className={text.headline}>\n        {multiplyFloats(price.amount, quantity)} {price.currency}\n      </div>\n      <div className=\"px-2\">~</div>\n      <div>\n        $\n        {formatAmount(`${multiplyFloats(price.amountUSD, quantity)}`, {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        })}\n      </div>\n    </div>\n  );\n}\n","import { type ReactNode, useCallback, useMemo, useState } from 'react';\nimport { infoSvg } from '../../../internal/svg/infoSvg';\nimport { multiplyFloats } from '../../../internal/utils/multiplyFloats';\nimport { background, border, cn, text } from '../../../styles/theme';\nimport { formatAmount } from '../../../token/utils/formatAmount';\nimport { useNFTContext } from '../NFTProvider';\n\ntype NFTTotalCostReact = {\n  className?: string;\n  label?: ReactNode;\n};\n\nexport function NFTTotalCost({\n  className,\n  label = 'Total cost',\n}: NFTTotalCostReact) {\n  const [isOverlayVisible, setIsOverlayVisible] = useState(false);\n  const { price, mintFee, quantity } = useNFTContext();\n\n  const toggleOverlay = useCallback(() => {\n    setIsOverlayVisible((prev) => !prev);\n  }, []);\n\n  const showOverlay = useCallback(() => {\n    setIsOverlayVisible(true);\n  }, []);\n\n  const hideOverlay = useCallback(() => {\n    setIsOverlayVisible(false);\n  }, []);\n\n  const overlay = useMemo(() => {\n    // only show overlay if mintFee\n    if (\n      price?.amount === undefined ||\n      price?.amountUSD === undefined ||\n      mintFee?.amount === undefined ||\n      mintFee.amountUSD === undefined\n    ) {\n      return null;\n    }\n\n    return (\n      <div\n        className={cn(\n          background.default,\n          border.radius,\n          border.defaultActive,\n          'absolute z-10 w-full border',\n        )}\n      >\n        <div\n          className={cn(\n            'flex items-center justify-between px-4 py-2',\n            text.label2,\n          )}\n        >\n          <div>NFT cost</div>\n          <div>\n            $\n            {formatAmount(`${multiplyFloats(price.amountUSD, quantity)}`, {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            })}\n          </div>\n        </div>\n        <div\n          className={cn(\n            'flex items-center justify-between px-4 py-2',\n            text.label2,\n          )}\n        >\n          <div>Mint fee</div>\n          <div>\n            $\n            {formatAmount(`${multiplyFloats(mintFee?.amountUSD, quantity)}`, {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }, [mintFee, price, quantity]);\n\n  if (\n    !price?.amount ||\n    !price?.currency ||\n    !price?.amountUSD ||\n    !mintFee?.amount ||\n    !mintFee.amountUSD\n  ) {\n    return null;\n  }\n\n  return (\n    <div className=\"relative\">\n      <div\n        className={cn(\n          'flex items-center justify-between pt-2 pb-1',\n          text.label2,\n          className,\n        )}\n      >\n        <div>{label}</div>\n        <div className=\"flex items-center gap-2\">\n          <div>\n            $\n            {formatAmount(`${multiplyFloats(price.amountUSD, quantity)}`, {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            })}\n          </div>\n          {overlay && (\n            <button\n              type=\"button\"\n              data-testid=\"ockNFTTotalCostInfo\"\n              className=\"h-2.5 w-2.5 cursor-pointer object-cover\"\n              onClick={toggleOverlay}\n              onMouseEnter={showOverlay}\n              onMouseLeave={hideOverlay}\n            >\n              {infoSvg}\n            </button>\n          )}\n        </div>\n      </div>\n      {isOverlayVisible && overlay}\n    </div>\n  );\n}\n","import { icon } from '../../styles/theme';\n\nexport const infoSvg = (\n  <svg\n    data-testid=\"ock-infoSvg\"\n    role=\"img\"\n    aria-label=\"ock-infoSvg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 10 10\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M5 10C7.7625 10 10 7.7625 10 5C10 2.2375 7.7625 0 5 0C2.2375 0 0 2.2375 0 5C0 7.7625 2.2375 10 5 10ZM4.58333 2.08333H5.41667V2.91667H4.58333V2.08333ZM4.58333 3.75H5.41667V7.91667H4.58333V3.75Z\"\n      className={icon.foreground}\n    />\n  </svg>\n);\n","import { cn, text } from '../../../styles/theme';\nimport { useNFTContext } from '../NFTProvider';\n\ntype NFTCollectionTitleReact = {\n  className?: string;\n};\n\nexport function NFTCollectionTitle({ className }: NFTCollectionTitleReact) {\n  const { name } = useNFTContext();\n\n  if (!name) {\n    return null;\n  }\n\n  return <div className={cn('pt-4 pb-1', text.title1, className)}>{name}</div>;\n}\n"],"mappings":";;;;AAAA,SAASA,gBAAgB;;;ACAzB,SAASC,YAAY;AAErB,SAASC,eAAe;AAEjB,SAASC,MAAMC,QAAoB;AACxC,SAAOC,QAAQC,KAAKF,MAAAA,CAAAA;AACtB;AAFgBD;AAIT,IAAMI,OAAO;EAClBC,MAAM;EACNC,SAAS;EACTC,UAAU;EACVC,QAAQ;EACRC,QAAQ;EACRC,OAAO;EACPC,QAAQ;EACRC,QAAQ;AACV;AAEO,IAAMC,YAAY;EACvBC,SACE;EACFC,WACE;EACFC,SACE;EACFC,SACE;EACFC,WACE;EACFC,kBAAkB;EAClBC,QAAQ;EACRC,UAAU;AACZ;AAEO,IAAMC,aAAa;EACxBR,SAAS;EACTC,WAAW;EACXC,SAAS;EACTC,SAAS;EACTC,WAAW;EACXK,OAAO;EACPC,SAAS;EACTC,SAAS;EACTC,QAAQ;EACRL,UAAU;EACVM,SAAS;AACX;AAEO,IAAMC,QAAQ;EACnBZ,SAAS;EACTa,YAAY;EACZC,iBAAiB;EACjBP,OAAO;EACPN,SAAS;EACTQ,SAAS;EACTD,SAAS;EACTH,UAAU;AACZ;AASO,IAAMU,SAAS;EACpBC,SAAS;EACTC,eAAe;EACfC,QAAQ;EACRC,aAAa;AACf;AAMO,IAAMC,OAAO;EAClBC,SAAS;EACTC,YAAY;EACZC,iBAAiB;EACjBC,SAAS;EACTC,OAAO;EACPC,SAAS;EACTC,SAAS;AACX;;;ACjFO,IAAMC,mBAAmB,wBAACC,YAAAA;AAC/B,SAAO,GAAGA,QAAQC,MAAM,GAAG,CAAA,CAAA,MAAQD,QAAQC,MAAM,EAAC,CAAA;AACpD,GAFgC;;;ACLhC,SAASC,iBAAAA,gBAAeC,cAAAA,mBAAkB;;;ACA1C,SAASC,eAAe;AAEjB,SAASC,SAAYC,QAAS;AACnC,SAAOC,QAAQ,MAAMD,QAAQ;IAACA;GAAO;AACvC;AAFgBD;;;ACFhB,SAASG,kBAAkB;;;ACA3B,SAASC,eAAeC,WAAAA,gBAAe;;;ACAvC,SAASC,mBAAmB;AAKrB,IAAMC,qBAAuC;EAClDC,SAAS;EACTC,QAAQ;EACRC,OAAOC;EACPC,QAAQ;IACNC,YAAY;MACVC,MAAM;MACNC,MAAM;MACNC,MAAM;MACNC,OAAO;IACT;IACAC,WAAW;EACb;EACAC,QAAQ;EACRC,UAAU;EACVC,WAAW;AACb;;;ADhBO,IAAMC,oBACXC,8BAAqCC,kBAAAA;;;ADHhC,SAASC,gBAAAA;AACd,SAAOC,WAAWC,iBAAAA;AACpB;AAFgBF;;;AFGhB,IAAMG,eAAe,CAAC;AAEf,IAAMC,kBAAkBC,gBAAAA,eAAmCF,YAAAA;AAE3D,SAASG,qBAAAA;AACd,SAAOC,YAAWH,eAAAA;AACpB;AAFgBE;AAIT,SAASE,iBAAiBC,OAA4B;AAC3D,QAAM,EAAEC,OAAOC,aAAY,IAAKC,cAAAA;AAChC,QAAMC,eAAeJ,MAAMC,SAASC;AAEpC,QAAMG,QAAQC,SAAS;IACrBC,SAASP,MAAMO,WAAY;IAC3BN,OAAOG;IACPI,UAAUR,MAAMQ;EAClB,CAAA;AAEA,SACE,sBAAA,cAACb,gBAAgBc,UAAQ;IAACJ;KACvBL,MAAMU,QAAQ;AAGrB;AAfgBX;;;AHRT,SAASY,QAAQ,EACtBC,UAAU,MACVC,WACAC,WAAW,KAAI,GACF;AACb,QAAM,CAACC,UAAUC,WAAAA,IAAeC,SAAS,MAAA;AACzC,QAAM,EAAEL,SAASM,eAAc,IAAKC,mBAAAA;AACpC,MAAI,CAACD,kBAAkB,CAACN,SAAS;AAC/BQ,YAAQC,MACN,qFAAA;AAEF,WAAO;EACT;AAEA,QAAMC,iBAAiBV,WAAWM;AAElC,QAAMK,cAAc,6BAAA;AAClBC,cAAUC,UACPC,UAAUJ,cAAAA,EACVK,KAAK,MAAA;AACJX,kBAAY,QAAA;AACZY,iBAAW,MAAMZ,YAAY,MAAA,GAAS,GAAA;IACxC,CAAA,EACCa,MAAM,CAACC,QAAAA;AACNV,cAAQC,MAAM,4BAA4BS,GAAAA;IAC5C,CAAA;EACJ,GAVoB;AAYpB,QAAMC,gBAAgB,wBAACC,MAAAA;AACrB,QAAIA,EAAEC,QAAQ,WAAWD,EAAEC,QAAQ,KAAK;AACtCD,QAAEE,eAAc;AAChBX,kBAAAA;IACF;EACF,GALsB;AAOtB,SACE,sBAAA,cAACY,QAAAA;IACCC,eAAY;IACZvB,WAAWwB,GACTC,MAAMC,iBACNC,KAAKC,QACL5B,WACA,+BAAA;IAEF6B,SAASnB;IACToB,WAAWZ;IACXa,UAAU;IACVC,MAAK;KAEJ/B,WAAWgC,iBAAiBxB,cAAAA,IAAkBA,gBAC/C,sBAAA,cAACa,QAAAA;IACCtB,WAAWwB,GACTU,UAAUC,WACVR,KAAKS,OACLX,MAAMY,YACNC,OAAOC,SACPD,OAAOE,QACP,4GAAA;KAGDtC,QAAAA,CAAAA;AAIT;AAhEgBJ;;;AQNhB,SAAS2C,UAAUC,WAAAA,gBAAe;;;ACE3B,IAAMC,mBACX,sBAAA,cAACC,OAAAA;EACCC,eAAY;EACZC,MAAK;EACLC,cAAW;EACXC,OAAM;EACNC,QAAO;EACPC,SAAQ;EACRC,MAAK;EACLC,OAAM;EACNC,WAAU;GAEV,sBAAA,cAACC,QAAAA;EACCC,GAAE;EACFF,WAAWG,KAAKC;;;;AChBf,IAAMC,oBACX,sBAAA,cAACC,OAAAA;EACCC,eAAY;EACZC,MAAK;EACLC,cAAW;EACXC,OAAM;EACNC,QAAO;EACPC,SAAQ;EACRC,OAAM;GAEN,sBAAA,cAACC,UAAAA;EACCC,IAAG;EACHC,IAAG;EACHC,GAAE;EACFC,QAAO;EACPC,MAAK;EACLC,aAAY;EACZC,eAAc;GAEd,sBAAA,cAACC,oBAAAA;EACCC,eAAc;EACdC,MAAK;EACLC,MAAK;EACLC,IAAG;EACHC,KAAI;EACJC,aAAY;;;;ACzBpB,SAASC,sBAAsB;AAGxB,SAASC,cAAiBC,WAA2B;AAC1D,SAAO,CAACC,UAAAA;AACN,WAAOC,eAAeD,KAAAA,KAAUA,MAAME,SAASH;EACjD;AACF;AAJgBD;;;ACHhB,SAASK,gBAAgB;AACzB,SAASC,WAAAA,gBAAe;;;ACDxB,SAASC,WAAAA,gBAAe;AACxB,SAASC,iBAAiB;;;ACD1B,SAASC,MAAMC,eAAAA,oBAAmB;AAQ3B,SAASC,OAAO,EACrBC,SACAC,gBAAgB,MAAK,GACP;AAEd,MAAIA,iBAAiBD,YAAYE,KAAKC,IAAI;AACxC,WAAO;EACT;AAEA,MAAI,CAACF,kBAAkBD,YAAYI,aAAYD,MAAMH,YAAYE,KAAKC,KAAK;AACzE,WAAO;EACT;AACA,SAAO;AACT;AAbgBJ;;;ACRhB,SAASM,SAASC,eAAe;AAO1B,SAASC,WAAW,EACzBC,SACAC,gBAAgB,MAAK,GACH;AAElB,MAAIA,iBAAiBD,YAAYE,QAAQC,IAAI;AAC3C,WAAO;EACT;AAEA,MAAI,CAACF,kBAAkBD,YAAYI,QAAQD,MAAMH,YAAYE,QAAQC,KAAK;AACxE,WAAO;EACT;AACA,SAAO;AACT;AAbgBJ;;;ACPhB,SAASM,MAAMC,0BAA0B;AAGlC,SAASC,qBAAqBC,OAAY;AAC/C,SAAOC,mBAAmB;IACxBD;IACAE,WAAWC,KAAAA;EACb,CAAA;AACF;AALgBJ;;;ACHhB,SAASK,QAAAA,OAAMC,eAAAA,oBAAmB;AAG3B,IAAMC,iCAAgE;EAC3E,CAACD,aAAYE,EAAE,GAAG;EAClB,CAACH,MAAKG,EAAE,GAAG;AACb;AAGA,IAAMC,iCAAiC;AACvC,IAAMC,iCAAiC;AACvC,IAAMC,iCAAiC;AACvC,IAAMC,iCAAiC;AACvC,IAAMC,iCAAiC;AACvC,IAAMC,iCAAiC;AACvC,IAAMC,iCAAiC;AAEhC,IAAMC,gCAAgC;EAC3CP;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;;;;ACxBF,SAASE,cAAc;AAGhB,IAAMC,oCAAoC,wBAC/CC,MACAC,kBAAAA;AAEA,QAAMC,mBAAmBC,WAAWC,KAClCJ,KAAKK,MAAM,EAAA,EAAIC,IAAI,CAACC,WAAWA,OAAOC,WAAW,CAAA,CAAA,CAAA;AAEnD,QAAMC,OAAOC,OAAOR,gBAAAA;AACpB,QAAMS,YAAYC,OAAOC,SAASJ,MAAM,EAAA;AACxC,QAAMK,YAAYH,YAAYV;AAC9B,QAAMc,QAAQD;AACd,SAAOC;AACT,GAZiD;;;ACC1C,IAAMC,+BAA+B,wBAACC,aAAAA;AAC3C,QAAMC,sBAAsBC,kCAC1BF,UACAG,8BAA8BC,MAAM;AAEtC,QAAMC,yBACJF,8BAA8BF,mBAAAA;AAChC,QAAMK,YAAYC,KAAKF,sBAAAA;AACvB,QAAMG,UAAU,6BAA6BF,SAAAA;AAC7C,SAAOE;AACT,GAV4C;;;ACJrC,IAAMC,aAAa,wBAACC,aAAAA;AACzB,MAAIA,SAASC,SAAS,WAAA,GAAc;AAClC,WAAO;EACT;AACA,MAAID,SAASC,SAAS,eAAA,GAAkB;AACtC,WAAO;EACT;AACA,SAAO;AACT,GAR0B;;;APenB,IAAMC,YAAY,8BAAO,EAC9BC,SACAC,QAAQC,SAAO,MACL;AACV,QAAMC,cAAcC,OAAO;IAAEC,SAASJ,MAAMK;EAAG,CAAA;AAC/C,QAAMC,kBAAkBC,WAAW;IAAEH,SAASJ,MAAMK;EAAG,CAAA;AACvD,QAAMG,iCAAiCF,mBAAmBJ;AAC1D,QAAMO,qBAAqBC,WAAWX,OAAAA;AAEtC,MAAI,CAACS,gCAAgC;AACnC,WAAOG,QAAQC,OACb,kFAAA;EAEJ;AAEA,MAAIC,SAASC,qBAAqBd,KAAAA;AAClC,MAAIe,gBAAgB;AAGpB,MAAIb,aAAa;AACf,QAAI;AACFa,sBAAgB,MAAMF,OAAOG,aAAa;QACxCC,MAAMC,UAAUnB,OAAAA;QAChBoB,0BAA0BC,+BAA+BpB,MAAMK,EAAE;MACnE,CAAA;AAEA,UAAIU,eAAe;AACjB,eAAOA;MACT;IACF,SAASM,QAAQ;IAEjB;EACF;AAGAR,WAASC,qBAAqBb,QAAAA;AAC9B,QAAMqB,mBAAmB,MAAMT,OAAOG,aAAa;IACjDC,MAAMC,UAAUnB,OAAAA;EAClB,CAAA;AAEA,MAAIuB,kBAAkB;AACpB,WAAOA;EACT;AAGA,MAAIb,oBAAoB;AACtB,WAAOc,6BAA6BxB,OAAAA;EACtC;AAGA,SAAO;AACT,GAnDyB;;;ADHlB,IAAMyB,YAAY,wBACvB,EAAEC,SAASC,QAAQC,SAAO,GAC1BC,iBAAAA;AAEA,QAAM,EAAEC,UAAU,MAAMC,UAAS,IAAKF,gBAAgB,CAAC;AACvD,QAAMG,eAAe,cAAcN,OAAAA,IAAWC,MAAMM,EAAE;AACtD,SAAOC,SAA8B;IACnCC,UAAU;MAAC;MAAaH;;IACxBI,SAAS,mCAAA;AACP,aAAOC,UAAU;QAAEX;QAASC;MAAM,CAAA;IACpC,GAFS;IAGTW,QAAQP;IACRD;IACAS,sBAAsB;EACxB,CAAA;AACF,GAfyB;;;ASZzB,SAASC,YAAAA,iBAAgB;AACzB,SAASC,WAAAA,gBAAe;;;ACDxB,SAASC,QAAAA,OAAMC,WAAAA,gBAAe;;;ACA9B,IAAA,wBAAe;EACb;IACEC,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNC,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNC,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNC,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNC,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNC,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEE,WAAW;IACXL,QAAQ;MACN;QACEM,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEG,SAAS;QACTL,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNC,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ,CAAA;IACRE,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS,CAAA;IACTH,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;MACP;QACEN,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFC,iBAAiB;IACjBD,MAAM;EACR;EACA;IACEH,QAAQ;MACN;QACEC,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;MACA;QACEF,cAAc;QACdC,MAAM;QACNC,MAAM;MACR;;IAEFD,MAAM;IACNK,SAAS;M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","names":["useState","clsx","twMerge","cn","inputs","twMerge","clsx","text","body","caption","headline","label1","label2","legal","title1","title3","pressable","default","alternate","inverse","primary","secondary","coinbaseBranding","shadow","disabled","background","error","warning","success","washed","reverse","color","foreground","foregroundMuted","border","default","defaultActive","radius","radiusInner","icon","primary","foreground","foregroundMuted","inverse","error","success","warning","getSlicedAddress","address","slice","createContext","useContext","useMemo","useValue","object","useMemo","useContext","createContext","useMemo","baseSepolia","ONCHAIN_KIT_CONFIG","address","apiKey","chain","baseSepolia","config","appearance","name","logo","mode","theme","paymaster","rpcUrl","schemaId","projectId","OnchainKitContext","createContext","ONCHAIN_KIT_CONFIG","useOnchainKit","useContext","OnchainKitContext","emptyContext","IdentityContext","createContext","useIdentityContext","useContext","IdentityProvider","props","chain","contextChain","useOnchainKit","accountChain","value","useValue","address","schemaId","Provider","children","Address","address","className","isSliced","copyText","setCopyText","useState","contextAddress","useIdentityContext","console","error","accountAddress","handleClick","navigator","clipboard","writeText","then","setTimeout","catch","err","handleKeyDown","e","key","preventDefault","span","data-testid","cn","color","foregroundMuted","text","label2","onClick","onKeyDown","tabIndex","role","getSlicedAddress","pressable","alternate","legal","foreground","border","default","radius","Children","useMemo","defaultAvatarSVG","svg","data-testid","role","aria-label","width","height","viewBox","fill","xmlns","className","path","d","icon","foreground","defaultLoadingSVG","svg","data-testid","role","aria-label","width","height","viewBox","xmlns","circle","cx","cy","r","stroke","fill","strokeWidth","strokeLinecap","animateTransform","attributeName","type","from","to","dur","repeatCount","isValidElement","findComponent","component","child","isValidElement","type","useQuery","mainnet","mainnet","normalize","base","baseSepolia","isBase","chainId","isMainnetOnly","base","id","baseSepolia","mainnet","sepolia","isEthereum","chainId","isMainnetOnly","mainnet","id","sepolia","http","createPublicClient","getChainPublicClient","chain","createPublicClient","transport","http","base","baseSepolia","RESOLVER_ADDRESSES_BY_CHAIN_ID","id","BASE_DEFAULT_PROFILE_PICTURES1","BASE_DEFAULT_PROFILE_PICTURES2","BASE_DEFAULT_PROFILE_PICTURES3","BASE_DEFAULT_PROFILE_PICTURES4","BASE_DEFAULT_PROFILE_PICTURES5","BASE_DEFAULT_PROFILE_PICTURES6","BASE_DEFAULT_PROFILE_PICTURES7","BASE_DEFAULT_PROFILE_PICTURES","sha256","getBaseDefaultProfilePictureIndex","name","optionsLength","nameAsUint8Array","Uint8Array","from","split","map","letter","charCodeAt","hash","sha256","hashValue","Number","parseInt","remainder","index","getBaseDefaultProfilePicture","username","profilePictureIndex","getBaseDefaultProfilePictureIndex","BASE_DEFAULT_PROFILE_PICTURES","length","selectedProfilePicture","base64Svg","btoa","dataUri","isBasename","username","endsWith","getAvatar","ensName","chain","mainnet","chainIsBase","isBase","chainId","id","chainIsEthereum","isEthereum","chainSupportsUniversalResolver","usernameIsBasename","isBasename","Promise","reject","client","getChainPublicClient","baseEnsAvatar","getEnsAvatar","name","normalize","universalResolverAddress","RESOLVER_ADDRESSES_BY_CHAIN_ID","_error","mainnetEnsAvatar","getBaseDefaultProfilePicture","useAvatar","ensName","chain","mainnet","queryOptions","enabled","cacheTime","ensActionKey","id","useQuery","queryKey","queryFn","getAvatar","gcTime","refetchOnWindowFocus","useQuery","mainnet","base","mainnet","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","encodePacked","keccak256","namehash","mainnet","convertChainIdToCoinType","chainId","mainnet","id","cointype","toString","toLocaleUpperCase","convertReverseNodeToBytes","address","chainId","addressFormatted","toLocaleLowerCase","addressNode","keccak256","substring","chainCoinType","convertChainIdToCoinType","baseReverseNode","namehash","toLocaleUpperCase","addressReverseNode","encodePacked","getName","address","chain","mainnet","chainIsBase","isBase","chainId","id","chainIsEthereum","isEthereum","chainSupportsUniversalResolver","Promise","reject","client","getChainPublicClient","addressReverseNode","convertReverseNodeToBytes","base","basename","readContract","abi","L2ResolverAbi","RESOLVER_ADDRESSES_BY_CHAIN_ID","functionName","args","_error","ensName","getEnsName","useName","address","chain","mainnet","queryOptions","enabled","cacheTime","ensActionKey","id","useQuery","queryKey","queryFn","getName","gcTime","refetchOnWindowFocus","badgeSvg","svg","role","aria-label","width","height","viewBox","fill","xmlns","className","path","d","data-testid","icon","foreground","Badge","className","badgeSize","span","cn","background","primary","data-testid","style","height","width","maxHeight","maxWidth","badgeSvg","useEffect","useState","gql","getAddress","GraphQLClient","base","easChainBase","id","easGraphqlAPI","schemaUids","baseSepolia","easChainBaseSepolia","id","easGraphqlAPI","schemaUids","optimism","easChainOptimism","id","easGraphqlAPI","schemaUids","easSupportedChains","easChainBase","id","easChainBaseSepolia","easChainOptimism","isChainSupported","chain","getChainEASGraphQLAPI","easGraphqlAPI","createEasGraphQLClient","chain","endpoint","getChainEASGraphQLAPI","GraphQLClient","attestationQuery","gql","getAttestationQueryVariables","address","filters","checksummedAddress","getAddress","conditions","recipient","equals","revoked","expirationTime","OR","gt","schemas","length","schemaId","in","where","AND","distinct","take","limit","getAttestationsByFilter","chain","easGraphqlClient","createEasGraphQLClient","attestationQueryVariables","attestations","request","getAttestations","address","chain","options","isChainSupported","console","log","defaultQueryVariablesFilter","revoked","expirationTime","Math","round","Date","now","limit","queryVariablesFilter","getAttestationsByFilter","error","message","useAttestations","address","chain","schemaId","attestations","setAttestations","useState","useEffect","fetchData","foundAttestations","getAttestations","schemas","DisplayBadge","children","address","chain","schemaId","useOnchainKit","contextSchemaId","contextAddress","useIdentityContext","Error","attestations","useAttestations","length","Avatar","address","chain","className","defaultComponent","loadingComponent","children","props","contextAddress","contextChain","useIdentityContext","accountAddress","accountChain","console","error","data","name","isLoading","isLoadingName","useName","avatar","isLoadingAvatar","useAvatar","ensName","enabled","badge","useMemo","Children","toArray","find","findComponent","Badge","defaultAvatar","defaultAvatarSVG","loadingAvatar","defaultLoadingSVG","div","cn","displayAvatarImg","data-testid","img","loading","width","height","decoding","src","alt","DisplayBadge","getRoundedAmount","balance","fractionDigits","parsedBalance","Number","parseFloat","result","toFixed","replace","useMemo","formatUnits","useBalance","GENERAL_SWAP_ERROR_CODE","GENERAL_SWAP_QUOTE_ERROR_CODE","GENERAL_SWAP_BALANCE_ERROR_CODE","LOW_LIQUIDITY_ERROR_CODE","TOO_MANY_REQUESTS_ERROR_CODE","UNCAUGHT_SWAP_QUOTE_ERROR_CODE","UNCAUGHT_SWAP_ERROR_CODE","getSwapErrorCode","context","errorCode","TOO_MANY_REQUESTS_ERROR_CODE","LOW_LIQUIDITY_ERROR_CODE","UNCAUGHT_SWAP_ERROR_CODE","UNCAUGHT_SWAP_QUOTE_ERROR_CODE","GENERAL_SWAP_QUOTE_ERROR_CODE","GENERAL_SWAP_BALANCE_ERROR_CODE","GENERAL_SWAP_ERROR_CODE","ETH_DECIMALS","useGetETHBalance","address","ethBalanceResponse","useBalance","useMemo","error","code","getSwapErrorCode","message","data","value","convertedBalance","response","roundedBalance","formatUnits","getRoundedAmount","EthBalance","address","className","contextAddress","useIdentityContext","console","error","convertedBalance","balance","useGetETHBalance","span","data-testid","cn","text","label2","color","foregroundMuted","getRoundedAmount","useCallback","Children","useMemo","useEffect","useState","usePreferredColorScheme","colorScheme","setColorScheme","useState","useEffect","mediaQuery","window","matchMedia","matches","updateColorScheme","event","addEventListener","removeEventListener","useTheme","preferredMode","usePreferredColorScheme","config","appearance","useOnchainKit","theme","mode","useCallback","useEffect","useState","usePopover","onClick","popoverText","setPopoverText","useState","showPopover","setShowPopover","isHovered","setIsHovered","handleMouseEnter","useCallback","handleMouseLeave","handleClick","result","setTimeout","useEffect","timer","clearTimeout","Children","useMemo","Name","address","className","children","chain","props","contextAddress","contextChain","useIdentityContext","console","error","accountAddress","accountChain","data","name","isLoading","useName","badge","useMemo","Children","toArray","find","findComponent","Badge","span","div","data-testid","cn","text","headline","color","foreground","getSlicedAddress","DisplayBadge","useQuery","mainnet","mainnet","normalize","getSocials","ensName","chain","mainnet","chainIsBase","isBase","chainId","id","chainIsEthereum","isEthereum","chainSupportsUniversalResolver","Promise","reject","client","getChainPublicClient","normalizedName","normalize","fetchTextRecord","key","result","getEnsText","name","universalResolverAddress","RESOLVER_ADDRESSES_BY_CHAIN_ID","error","console","warn","twitter","github","farcaster","website","all","useSocials","ensName","chain","mainnet","queryOptions","enabled","cacheTime","ensActionKey","id","useQuery","queryKey","queryFn","getSocials","gcTime","refetchOnWindowFocus","githubSvg","svg","data-testid","role","aria-label","width","height","viewBox","xmlns","fill","className","path","fillRule","clipRule","d","icon","foreground","twitterSvg","svg","data-testid","role","aria-label","width","height","viewBox","xmlns","fill","className","g","clipPath","path","d","icon","foreground","defs","id","rect","warpcastSvg","svg","data-testid","role","aria-label","width","height","viewBox","xmlns","className","icon","foreground","path","d","inverse","websiteSvg","svg","data-testid","role","aria-label","width","height","viewBox","xmlns","fill","className","icon","foreground","path","fillRule","clipRule","d","PLATFORM_CONFIG","twitter","href","value","icon","twitterSvg","github","githubSvg","farcaster","warpcastSvg","website","websiteSvg","GetSocialPlatformDetails","platform","config","a","target","rel","className","cn","pressable","default","border","radius","data-testid","charAt","toUpperCase","slice","span","div","Socials","address","chain","className","contextAddress","contextChain","useIdentityContext","accountAddress","accountChain","console","error","data","name","isLoading","isLoadingName","useName","socials","isLoadingSocials","useSocials","ensName","enabled","span","Object","values","every","value","div","cn","border","default","entries","map","platform","GetSocialPlatformDetails","key","noop","IdentityLayout","children","className","onClick","componentTheme","useTheme","avatar","name","address","ethBalance","socials","useMemo","childrenArray","Children","toArray","find","findComponent","Avatar","Name","Address","EthBalance","Socials","handleClick","handleMouseEnter","handleMouseLeave","showPopover","popoverText","usePopover","div","cn","background","default","pressable","data-testid","onMouseEnter","onMouseLeave","onKeyUp","onKeyDown","span","color","foregroundMuted","inverse","foreground","Identity","address","chain","children","className","hasCopyAddressOnClick","schemaId","contextChain","useOnchainKit","accountChain","handleCopy","useCallback","navigator","clipboard","writeText","e","console","error","onClick","undefined","IdentityProvider","IdentityLayout","mainnet","useQuery","mainnet","createContext","useCallback","useContext","useState","emptyContext","NFTContext","createContext","useNFTContext","context","useContext","Error","NFTCreator","className","schemaId","useOnchainKit","creatorAddress","useNFTContext","div","cn","Identity","address","Avatar","Name","Badge","useCallback","useEffect","useMemo","useState","useAccount","useChainId","Spinner","className","div","data-testid","cn","useEffect","useState","useIsMounted","isMounted","setIsMounted","useState","useEffect","createContext","useCallback","useContext","useEffect","useMemo","useState","useAccount","useConfig","useSwitchChain","useWaitForTransactionReceipt","waitForTransactionReceipt","Capabilities","useMemo","useAccount","useCapabilities","useCapabilitiesSafe","chainId","isConnected","useAccount","data","capabilities","error","useCapabilities","query","enabled","useMemo","GENERIC_ERROR_MESSAGE","METHOD_NOT_SUPPORTED_ERROR_SUBSTRING","TRANSACTION_TYPE_CALLS","TRANSACTION_TYPE_CONTRACTS","useCallsStatus","useCallsStatusWagmi","useCallsStatus","setLifecycleStatus","transactionId","data","useCallsStatusWagmi","id","query","refetchInterval","state","status","enabled","transactionHash","receipts","err","statusName","statusData","code","error","JSON","stringify","message","undefined","useSendTransaction","useSendCallWagmi","isUserRejectedRequestError","err","cause","name","shortMessage","includes","useSendCall","setLifecycleStatus","transactionHashList","status","sendTransactionAsync","sendCallAsync","data","useSendCallWagmi","mutation","onError","e","errorMessage","isUserRejectedRequestError","GENERIC_ERROR_MESSAGE","statusName","statusData","code","error","message","onSuccess","hash","useSendCalls","useSendCallsWagmi","useSendCalls","setLifecycleStatus","setTransactionId","status","sendCallsAsync","data","useSendCallsWagmi","mutation","onError","e","errorMessage","isUserRejectedRequestError","GENERIC_ERROR_MESSAGE","statusName","statusData","code","error","message","onSuccess","id","useCallback","sendBatchedTransactions","capabilities","sendCallsAsync","transactions","transactionType","writeContractsAsync","TRANSACTION_TYPE_CONTRACTS","contracts","TRANSACTION_TYPE_CALLS","calls","sendSingleTransactions","sendCallAsync","transactions","transactionType","writeContractAsync","transaction","TRANSACTION_TYPE_CALLS","useSendWalletTransactions","capabilities","sendCallAsync","sendCallsAsync","transactionType","walletCapabilities","writeContractAsync","writeContractsAsync","useCallback","transactions","resolvedTransactions","Promise","resolve","Capabilities","AtomicBatch","supported","sendBatchedTransactions","sendSingleTransactions","useWriteContract","useWriteContractWagmi","useWriteContract","setLifecycleStatus","transactionHashList","status","writeContractAsync","data","useWriteContractWagmi","mutation","onError","e","errorMessage","isUserRejectedRequestError","GENERIC_ERROR_MESSAGE","statusName","statusData","code","error","message","onSuccess","hash","useWriteContracts","useWriteContractsWagmi","useWriteContracts","setLifecycleStatus","setTransactionId","status","writeContractsAsync","useWriteContractsWagmi","mutation","onError","e","message","includes","METHOD_NOT_SUPPORTED_ERROR_SUBSTRING","errorMessage","isUserRejectedRequestError","GENERIC_ERROR_MESSAGE","statusName","statusData","code","error","onSuccess","id","getPaymasterUrl","capabilities","paymasterService","url","emptyContext","TransactionContext","createContext","useTransactionContext","context","useContext","Error","TransactionProvider","calls","capabilities","transactionCapabilities","chainId","children","contracts","isSponsored","onError","onStatus","onSuccess","account","useAccount","config","useConfig","paymaster","undefined","useOnchainKit","errorMessage","setErrorMessage","useState","errorCode","setErrorCode","isToastVisible","setIsToastVisible","lifecycleStatus","setLifecycleStatus","statusName","statusData","transactionId","setTransactionId","transactionCount","setTransactionCount","transactionHashList","setTransactionHashList","transactions","transactionType","TRANSACTION_TYPE_CALLS","TRANSACTION_TYPE_CONTRACTS","walletCapabilities","useCapabilitiesSafe","switchChainAsync","useSwitchChain","status","statusWriteContracts","writeContractsAsync","useWriteContracts","statusWriteContract","writeContractAsync","data","writeContractTransactionHash","useWriteContract","statusSendCalls","sendCallsAsync","useSendCalls","statusSendCall","sendCallAsync","sendCallTransactionHash","useSendCall","transactionStatus","useMemo","transactionStatuses","Capabilities","AtomicBatch","supported","singleTransactionHash","paymasterService","url","sendWalletTransactions","useSendWalletTransactions","transactionHash","batchedTransactionHash","callStatus","useCallsStatus","receipt","useWaitForTransactionReceipt","hash","useEffect","message","code","transactionReceipts","length","getTransactionLegacyReceipts","useCallback","receipts","txnReceipt","waitForTransactionReceipt","push","err","error","JSON","stringify","GENERIC_ERROR_MESSAGE","switchChain","targetChainId","buildTransaction","resolvedTransactions","Promise","resolve","handleSubmit","isUserRejectedRequestError","value","useValue","isLoading","onSubmit","paymasterUrl","getPaymasterUrl","Provider","Transaction","calls","capabilities","chainId","className","children","contracts","isSponsored","onError","onStatus","onSuccess","isMounted","useIsMounted","componentTheme","useTheme","chain","useOnchainKit","accountChainId","id","TransactionProvider","div","cn","useCallback","useMemo","useAccount","useChainId","useShowCallsStatus","baseSepolia","getChainExplorer","chainId","baseSepolia","id","isSpinnerDisplayed","errorMessage","hasReceipt","isInProgress","transactionHash","transactionId","isWaitingForReceipt","TransactionButton","className","disabled","text","idleText","errorOverride","successOverride","pendingOverride","chainId","errorMessage","isLoading","lifecycleStatus","onSubmit","receipt","transactions","transactionCount","transactionHash","transactionId","useTransactionContext","address","useAccount","accountChainId","useChainId","showCallsStatus","useShowCallsStatus","isLegacyTransactionInProgress","statusName","statusData","transactionHashList","length","isInProgress","isMissingProps","isWaitingForReceipt","isDisabled","displayPendingState","isSpinnerDisplayed","hasReceipt","errorText","successText","pendingContent","useMemo","Spinner","successHandler","useCallback","onClick","id","chainExplorer","getChainExplorer","window","open","errorHandler","buttonContent","handleSubmit","button","cn","pressable","primary","border","radius","headline","type","data-testid","div","color","inverse","useCallback","useEffect","useMemo","closeSvg","svg","aria-label","width","height","viewBox","fill","xmlns","title","path","d","className","icon","foreground","useMemo","useChainId","useShowCallsStatus","useMemo","useMemo","TransactionSponsor","className","errorMessage","lifecycleStatus","paymasterUrl","receipt","transactionHash","transactionId","useTransactionContext","transactionInProgress","statusName","div","cn","text","label2","p","color","foregroundMuted","TransactionStatus","children","className","div","cn","useMemo","useChainId","useShowCallsStatus","useGetTransactionStatusAction","chainId","receipt","transactionHash","transactionId","useTransactionContext","accountChainId","useChainId","showCallsStatus","useShowCallsStatus","useMemo","chainExplorer","getChainExplorer","actionElement","a","href","target","rel","span","className","cn","text","label1","color","primary","button","onClick","id","type","TransactionStatusAction","className","actionElement","useGetTransactionStatusAction","div","cn","text","label2","useMemo","useGetTransactionStatusLabel","errorMessage","isLoading","receipt","lifecycleStatus","transactionHash","transactionId","useTransactionContext","isInProgress","isPending","statusName","isBuildingTransaction","useMemo","label","labelClassName","color","foregroundMuted","error","TransactionStatusLabel","className","label","labelClassName","useGetTransactionStatusLabel","div","cn","text","label2","p","ConnectButton","ConnectButtonRainbowKit","Children","isValidElement","useCallback","useMemo","useAccount","useConnect","ConnectButton","className","connectWalletText","onClick","text","button","type","data-testid","cn","pressable","primary","border","radius","dsText","headline","color","inverse","span","ConnectWalletText","children","className","span","cn","dsText","headline","color","inverse","createContext","useContext","useState","emptyContext","WalletContext","createContext","useWalletContext","useContext","WalletContext","ConnectWallet","children","className","text","withWalletAggregator","isOpen","setIsOpen","useWalletContext","address","accountAddress","status","useAccount","connectors","connect","connectStatus","useConnect","connectWalletText","useMemo","childrenArray","Children","toArray","find","findComponent","ConnectWalletText","childrenWithoutConnectWalletText","map","child","isValidElement","type","connector","isLoading","handleToggle","useCallback","console","log","ConnectButtonRainbowKit","Custom","openConnectModal","div","data-testid","ConnectButton","onClick","button","cn","pressable","primary","dsText","headline","color","inverse","disabled","Spinner","IdentityProvider","secondary","border","radius","foreground","Children","useEffect","useMemo","useRef","Children","cloneElement","isValidElement","useMemo","useAccount","useEffect","useState","Children","cloneElement","isValidElement","useCallback","useMemo","useAccount","useCallback","useDisconnect","disconnectSvg","svg","role","aria-label","width","height","viewBox","fill","xmlns","path","d","className","icon","foreground","isValidElement","useMemo","fundWalletSvg","svg","role","aria-label","width","height","viewBox","fill","xmlns","path","fillRule","clipRule","d","className","icon","foreground","swapSettingsSvg","svg","role","aria-label","width","height","viewBox","fill","xmlns","path","fillRule","clipRule","d","className","icon","foreground","walletSvg","svg","role","aria-label","width","height","viewBox","fill","xmlns","path","fillRule","clipRule","d","className","icon","foreground","base","useAccount","basenameSvg","svg","data-testid","role","aria-label","width","height","viewBox","xmlns","fill","className","g","id","path","d","icon","foreground","useCallback","useMemo","useMemo","useAccount","useAccount","ENTRYPOINT_ADDRESS_V06","checksumAddress","decodeAbiParameters","createContext","useContext","useEffect","useCallback","useState","emptyContext","NFTLifecycleContext","createContext","useNFTLifecycleContext","context","useContext","Error","NFTMintButton","className","label","disabled","pendingOverride","successOverride","errorOverride","chainId","useChainId","address","useAccount","contractAddress","tokenId","isEligibleToMint","buildMintTransaction","quantity","isSponsored","useNFTContext","updateLifecycleStatus","useNFTLifecycleContext","callData","setCallData","useState","mintError","setMintError","handleTransactionError","useCallback","error","statusName","statusData","code","message","fetchTransactions","mintTransaction","takerAddress","useEffect","handleOnStatus","transactionStatus","transactionButtonLabel","useMemo","length","Spinner","div","cn","ConnectWallet","Transaction","calls","onStatus","TransactionButton","text","TransactionSponsor","TransactionStatus","TransactionStatusLabel","TransactionStatusAction","label2","color","foregroundMuted","NFTMinters","className","schemaId","useOnchainKit","totalOwners","recentOwners","useNFTContext","length","div","cn","text","body","color","foregroundMuted","map","address","Identity","key","Avatar","Name","useCallback","useState","useCallback","useLayoutEffect","useMemo","useRef","useDebounce","callback","delay","callbackRef","useRef","useLayoutEffect","current","timer","debounce","func","delayMs","args","clearTimeout","setTimeout","useMemo","TextInput","ariaLabel","className","delayMs","disabled","onBlur","onChange","placeholder","setValue","value","inputValidator","handleDebounce","useDebounce","handleChange","useCallback","evt","target","input","aria-label","data-testid","type","DELAY_MS","QuantitySelector","className","disabled","minQuantity","maxQuantity","Number","MAX_SAFE_INTEGER","onChange","placeholder","value","setValue","useState","isValidQuantity","useCallback","v","parseInt","regex","test","handleIncrement","next","Math","min","handleDecrement","max","handleOnChange","handleBlur","toString","classNames","cn","border","defaultActive","color","foreground","background","default","pressable","div","data-testid","button","aria-label","onClick","type","TextInput","delayMs","inputValidator","onBlur","NFTQuantitySelector","className","maxMintsPerWallet","setQuantity","useNFTContext","div","cn","QuantitySelector","onChange","minQuantity","maxQuantity","placeholder","multiplyFloats","numbers","length","result","decimalPlaces","reduce","acc","num","str","toString","currentDecimalPlaces","split","integer","Number","replace","formatAmount","amount","options","undefined","locale","minimumFractionDigits","maximumFractionDigits","Number","toLocaleString","NFTAssetCost","className","price","quantity","useNFTContext","amount","undefined","currency","amountUSD","div","cn","text","body","headline","multiplyFloats","formatAmount","minimumFractionDigits","maximumFractionDigits","useCallback","useMemo","useState","infoSvg","svg","data-testid","role","aria-label","width","height","viewBox","fill","xmlns","path","d","className","icon","foreground","NFTTotalCost","className","label","isOverlayVisible","setIsOverlayVisible","useState","price","mintFee","quantity","useNFTContext","toggleOverlay","useCallback","prev","showOverlay","hideOverlay","overlay","useMemo","amount","undefined","amountUSD","div","cn","background","default","border","radius","defaultActive","text","label2","formatAmount","multiplyFloats","minimumFractionDigits","maximumFractionDigits","currency","button","type","data-testid","onClick","onMouseEnter","onMouseLeave","infoSvg","NFTCollectionTitle","className","name","useNFTContext","div","cn","text","title1"]}